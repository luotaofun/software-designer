1
00:00:00,000 --> 00:00:03,040
接下来我们看到寻址方式

2
00:00:03,040 --> 00:00:06,760
寻址方式在软件设计师考试当中的

3
00:00:06,760 --> 00:00:08,970
直接考察并不是很多

4
00:00:08,970 --> 00:00:10,850
但是我们在后面讲 CR 

5
00:00:10,850 --> 00:00:13,490
SC 与 RSC 对比的时候呢

6
00:00:13,490 --> 00:00:15,060
会提到它

7
00:00:15,060 --> 00:00:17,970
那对于寻址方式而言啊

8
00:00:17,970 --> 00:00:20,170
它指的是我们在指令当中

9
00:00:20,170 --> 00:00:23,230
如何来找相应的数据

10
00:00:23,230 --> 00:00:25,520
对于指令而言

11
00:00:25,520 --> 00:00:28,810
它在我们的机器语言当中啊

12
00:00:28,810 --> 00:00:30,590
对应的其实就是一串呢

13
00:00:30,590 --> 00:00:33,550
有意义的012进制计算机

14
00:00:33,550 --> 00:00:35,490
它的本质是机器

15
00:00:35,490 --> 00:00:38,530
它所能识别的是机器语言

16
00:00:38,530 --> 00:00:39,610
电气语言

17
00:00:39,610 --> 00:00:40,640
也就是呢

18
00:00:40,640 --> 00:00:45,500
012进制指令的基本格式是操作码

19
00:00:45,500 --> 00:00:47,460
加上呢，地址码

20
00:00:47,460 --> 00:00:51,980
操作码的部分会给出它所对应的操作

21
00:00:51,980 --> 00:00:54,400
比如说呢，一些取数啊

22
00:00:54,400 --> 00:00:58,060
move ，或者呢，一些加法、减法啊

23
00:00:58,060 --> 00:01:01,180
或者呢这种跳转 GMP 等等

24
00:01:01,180 --> 00:01:02,870
都可以作为，诶

25
00:01:02,870 --> 00:01:06,290
翻译成一些零二进制对应的操作码字段

26
00:01:06,290 --> 00:01:07,890
地址码字段呢

27
00:01:07,890 --> 00:01:12,670
是我们操作码所操作的具体的数据

28
00:01:12,670 --> 00:01:14,960
一般呢，用 OP 来表示

29
00:01:14,960 --> 00:01:18,030
操作码后面呢，是它的地址

30
00:01:18,030 --> 00:01:20,170
那后面的这些数据啊

31
00:01:20,170 --> 00:01:22,690
可以呢，不存在零地址指令

32
00:01:22,690 --> 00:01:24,060
一个地址，诶

33
00:01:24,060 --> 00:01:25,120
单地址指令

34
00:01:25,120 --> 00:01:26,780
还有呢，唉，二地址

35
00:01:26,780 --> 00:01:29,390
三地址指令都是呢，可以的

36
00:01:29,390 --> 00:01:32,520
那针对这样的指令部分啊

37
00:01:32,520 --> 00:01:38,640
我们如果将操作数直接放在指令当中

38
00:01:38,640 --> 00:01:40,540
那我们这种方式呢

39
00:01:40,540 --> 00:01:43,900
操作数也可以叫做立即数

40
00:01:43,900 --> 00:01:47,130
把它称为立即数寻址

41
00:01:47,130 --> 00:01:50,410
也就是立即寻址方式

42
00:01:50,420 --> 00:01:52,360
那这种情况下

43
00:01:52,360 --> 00:01:57,010
是将操作数直接放在了指令当中

44
00:01:57,010 --> 00:01:58,120
比如说呢

45
00:01:58,120 --> 00:02:00,780
唉，我们在做一些加减法呀

46
00:02:00,780 --> 00:02:02,310
或者移数的时候

47
00:02:02,310 --> 00:02:04,480
其中呢，移动的这个数据

48
00:02:04,480 --> 00:02:06,480
取数的这个数据啊

49
00:02:06,480 --> 00:02:09,590
直接呢，告诉我们在指令当中了

50
00:02:09,590 --> 00:02:12,920
但是你把数据放在指令当中

51
00:02:12,920 --> 00:02:16,060
如果我们要修改这个数据怎么办啊

52
00:02:16,060 --> 00:02:19,680
整个程序都需要重新去写吧

53
00:02:19,680 --> 00:02:20,960
这个过程呢

54
00:02:20,960 --> 00:02:23,680
灵活性非常差

55
00:02:24,050 --> 00:02:26,490
第二种方式叫做呢

56
00:02:26,490 --> 00:02:28,650
直接寻址方式

57
00:02:28,650 --> 00:02:34,980
将操作数的直接地址放在我们的指令当中

58
00:02:34,980 --> 00:02:38,440
那这种就叫做呢直接寻址方式

59
00:02:38,440 --> 00:02:41,790
注意，直接寻址和立即寻址

60
00:02:41,790 --> 00:02:43,040
不要混淆

61
00:02:43,040 --> 00:02:46,490
直接寻址放的是直接地址

62
00:02:46,490 --> 00:02:49,270
立即寻址放的是立即数

63
00:02:49,270 --> 00:02:51,630
也就是操作数本身

64
00:02:51,630 --> 00:02:54,690
那有直接就有间接

65
00:02:54,690 --> 00:02:58,460
如果将间接地址放在指令当中

66
00:02:58,460 --> 00:03:01,610
就叫做呢间接寻址方式

67
00:03:01,610 --> 00:03:03,630
所谓的间接地址啊

68
00:03:03,630 --> 00:03:06,150
就是说指令当中的这个地址

69
00:03:06,150 --> 00:03:08,490
指向了某一个存储单元

70
00:03:08,490 --> 00:03:13,180
而这个存储单元的内容并不是操作数

71
00:03:13,180 --> 00:03:15,760
而是呢，操作数的地址

72
00:03:15,760 --> 00:03:18,160
通过两次寻

73
00:03:18,160 --> 00:03:21,630
就叫做呢间接寻址方式

74
00:03:21,630 --> 00:03:26,320
那这种方式其实灵活性会比较强

75
00:03:26,320 --> 00:03:27,970
我们要修改的话

76
00:03:27,970 --> 00:03:31,350
可以呢，去修改相应的存储单元的内容

77
00:03:31,350 --> 00:03:33,750
不需要呢去修改指令

78
00:03:33,750 --> 00:03:35,730
不需要去修改程序

79
00:03:35,730 --> 00:03:39,840
那除了这一类数和地址以外

80
00:03:39,840 --> 00:03:41,260
我们还可以啊

81
00:03:41,260 --> 00:03:46,340
直接用我们的寄存器放到指令当中

82
00:03:46,340 --> 00:03:49,560
寄存器的寻址也有两类

83
00:03:49,560 --> 00:03:53,220
一类寄存器放我们的操作数

84
00:03:53,220 --> 00:03:55,600
叫做寄存器寻址

85
00:03:55,600 --> 00:03:58,940
一类呢，寄存器放的是操作数

86
00:03:58,940 --> 00:04:01,040
地址就叫做呢，唉

87
00:04:01,040 --> 00:04:03,380
我们的间接寻址

88
00:04:03,380 --> 00:04:06,090
寄存器间接寻址

89
00:04:06,090 --> 00:04:08,300
那寄存器放了一个地址

90
00:04:08,300 --> 00:04:11,960
地址的内容才是呢，我们的操作数

91
00:04:11,960 --> 00:04:16,140
这几种寻址方式的特点注意区分

92
00:04:16,140 --> 00:04:21,940
尤其立即寻址和直接寻址方式不要混淆

93
00:04:22,280 --> 00:04:24,400
我们在考试当中

94
00:04:24,400 --> 00:04:25,660
它的考察呢

95
00:04:25,660 --> 00:04:27,720
主要就是给大家一些描述

96
00:04:27,720 --> 00:04:31,030
区分他所选择的寻址方式

97
00:04:31,030 --> 00:04:35,510
如果一条指令里面有多个操作数的话

98
00:04:35,510 --> 00:04:39,070
它也可以有多个寻址方式

99
00:04:39,550 --> 00:04:43,030
我们来看一下寻址方式

100
00:04:43,030 --> 00:04:45,330
在软件设计师考试当中

101
00:04:45,330 --> 00:04:50,530
它的体现在机器指令的地址字段当中

102
00:04:50,530 --> 00:04:56,460
直接指出操作数本身的寻址方式是什么

103
00:04:56,460 --> 00:05:01,270
诶，操作数本身在指令当中叫做呢

104
00:05:01,270 --> 00:05:03,440
立即寻址方式

105
00:05:03,440 --> 00:05:07,920
如果指出的是操作数的地址

106
00:05:09,300 --> 00:05:12,720
叫做呢直接寻址方式

107
00:05:12,720 --> 00:05:16,580
如果是操作数的间接地址

108
00:05:16,580 --> 00:05:20,390
就叫做呢唉间接寻址方式

109
00:05:20,390 --> 00:05:25,780
如果这里面指令当中放的是寄存器

110
00:05:25,920 --> 00:05:28,880
寄存器里面放的是操作数

111
00:05:28,880 --> 00:05:31,580
就叫做寄存器寻址

112
00:05:31,580 --> 00:05:34,290
放的是操作数地址

113
00:05:34,290 --> 00:05:37,250
叫寄存器间接寻址

114
00:05:37,250 --> 00:05:41,080
这就是啊我们寻址方式的分类

115
00:05:41,080 --> 00:05:42,790
隐含寻址方式

116
00:05:42,790 --> 00:05:45,630
在这里是默认的一个

117
00:05:45,630 --> 00:05:47,890
放置数据的寄存器

118
00:05:47,890 --> 00:05:49,480
累加寄存器 AC 

119
00:05:49,480 --> 00:05:52,070
它可以不出现在指令当中

120
00:05:52,070 --> 00:05:54,530
所以叫隐含寻址方式

121
00:05:54,530 --> 00:05:57,350
在我们的软件设计师考试当中

122
00:05:57,350 --> 00:06:00,170
目前并没有涉及到这种方式
