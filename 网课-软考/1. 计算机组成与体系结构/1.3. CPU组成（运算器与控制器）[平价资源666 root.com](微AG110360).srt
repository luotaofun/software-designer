1
00:00:00,000 --> 00:00:03,400
接下来看到 CPU 的组成

2
00:00:03,400 --> 00:00:06,610
运算器与控制器部分

3
00:00:06,610 --> 00:00:09,130
对于 CPU 的组成

4
00:00:09,130 --> 00:00:12,190
在我们软件设计师考试当中

5
00:00:12,190 --> 00:00:15,920
主要考到的是其中一些子部件

6
00:00:15,920 --> 00:00:18,870
它的功能以及呢分类

7
00:00:18,870 --> 00:00:23,660
我们首先来看一下计算机的结构

8
00:00:23,660 --> 00:00:25,580
简单想一想

9
00:00:25,580 --> 00:00:28,240
说到计算机也就是电脑

10
00:00:28,240 --> 00:00:31,660
大家能够想到哪些东西呢

11
00:00:32,290 --> 00:00:34,430
首先主机箱

12
00:00:34,430 --> 00:00:38,610
然后呢鼠标、键盘、显示器等等吧

13
00:00:38,610 --> 00:00:43,030
那简单地划分成两大块的话

14
00:00:43,030 --> 00:00:46,090
我们会有哪些划分形式呢

15
00:00:46,090 --> 00:00:49,920
一个主机箱以及呢主机箱的外部

16
00:00:49,920 --> 00:00:52,410
在理论上来看

17
00:00:52,410 --> 00:00:55,060
计算机的结构大致呢

18
00:00:55,060 --> 00:00:59,430
可以分为主机、外设两个部分

19
00:00:59,430 --> 00:01:04,660
首先简单看一下外设部分有哪些东西

20
00:01:04,660 --> 00:01:07,200
对于鼠标键盘

21
00:01:07,200 --> 00:01:10,090
它是典型的输入设备

22
00:01:10,090 --> 00:01:14,320
显示器它是典型的输出设备

23
00:01:14,320 --> 00:01:19,810
如果我们外接一个 U 盘或者移动硬盘

24
00:01:19,810 --> 00:01:22,890
就是呢辅助的存储设备

25
00:01:22,890 --> 00:01:25,060
简称为辅存

26
00:01:25,060 --> 00:01:28,740
也可以呢称为外存

27
00:01:39,300 --> 00:01:42,460
这里有一个呢特殊的地方

28
00:01:42,460 --> 00:01:45,360
我们买电脑经常听到

29
00:01:45,360 --> 00:01:50,380
500 G 硬盘、一个 T 硬盘、机械硬盘还是固态硬盘

30
00:01:50,380 --> 00:01:55,900
注意，虽然这一类硬盘是位于主机箱内部

31
00:01:55,900 --> 00:01:57,760
但理论上来看

32
00:01:57,760 --> 00:02:00,660
它们是属于外设当中的

33
00:02:00,660 --> 00:02:02,660
复存外存的

34
00:02:02,660 --> 00:02:04,090
也就是说

35
00:02:04,090 --> 00:02:07,160
计算机它的实际主机箱

36
00:02:07,160 --> 00:02:11,680
与理论上的主机并不是完全一致的

37
00:02:11,680 --> 00:02:13,660
理论上的主机啊

38
00:02:13,660 --> 00:02:17,340
与主板的概念呢，会更相近一些

39
00:02:17,340 --> 00:02:19,660
那看到外存

40
00:02:19,660 --> 00:02:22,460
它对应的还有一个呢

41
00:02:22,460 --> 00:02:25,940
主机内部的存储叫做呢

42
00:02:25,940 --> 00:02:27,400
主存储器

43
00:02:27,400 --> 00:02:30,280
可以呢简称为主存

44
00:02:30,280 --> 00:02:33,960
也可以称之为内存

45
00:02:34,840 --> 00:02:38,240
我们常见的存储结构啊

46
00:02:38,240 --> 00:02:39,660
指的就是呢

47
00:02:39,660 --> 00:02:44,310
辅助存储器与主存储器结合起来的

48
00:02:44,310 --> 00:02:48,340
那详细的存储器它的结构划分

49
00:02:48,340 --> 00:02:50,760
还有呢，一些细致的内容

50
00:02:50,760 --> 00:02:53,370
我们在后面的知识点当中啊

51
00:02:53,370 --> 00:02:55,560
将会展开来介绍

52
00:02:55,560 --> 00:02:56,330
这里呢

53
00:02:56,330 --> 00:02:58,990
了解到储存以及呢

54
00:02:58,990 --> 00:03:01,890
外存的位置就可以了

55
00:03:02,040 --> 00:03:04,220
在主机内部啊

56
00:03:04,220 --> 00:03:08,640
还有一个呢，核心的部分叫做呢 CPU 

57
00:03:08,640 --> 00:03:12,380
也就是中央处理单元的简称

58
00:03:12,380 --> 00:03:16,220
我们的 CPU 对计算机来说

59
00:03:16,220 --> 00:03:20,120
就相当于大脑对人的一个功能

60
00:03:20,120 --> 00:03:23,950
大脑可以思考控制我们呢做一些动作

61
00:03:23,950 --> 00:03:28,200
CPU 呢，它也可以在计算机当中

62
00:03:28,200 --> 00:03:30,990
控制计算机完成一些功能

63
00:03:30,990 --> 00:03:33,910
还可以呢进行一些运算

64
00:03:33,910 --> 00:03:35,110
CPU 呢

65
00:03:35,110 --> 00:03:37,090
大致还可以分为

66
00:03:37,090 --> 00:03:41,060
运算器以及呢控制器两大块

67
00:03:41,060 --> 00:03:46,540
这些结构啊，在计算机当中并不是孤立的

68
00:03:46,540 --> 00:03:50,270
它们会通过一些线路连接起来

69
00:03:50,270 --> 00:03:55,040
我们看到在这里传递数据的可以呢

70
00:03:55,040 --> 00:03:57,250
称为数据总线

71
00:03:57,250 --> 00:04:01,410
传递控制信号的可以呢称为控制总线

72
00:04:01,410 --> 00:04:05,910
传递地址的可以呢称为地址总线

73
00:04:05,910 --> 00:04:09,250
那这是简单的计算机结构

74
00:04:09,250 --> 00:04:10,420
了解一下

75
00:04:10,420 --> 00:04:13,120
我们重点需要掌握的是

76
00:04:13,120 --> 00:04:16,459
CPU 当中的一些呢内容

77
00:04:17,260 --> 00:04:20,380
在软件设计师考试当中

78
00:04:20,380 --> 00:04:24,860
整个计算机结构的划分比较多

79
00:04:24,860 --> 00:04:28,520
考察呢，是集中在 CPU 结构当中

80
00:04:28,520 --> 00:04:32,470
要求大家掌握 CPU 这些子部件

81
00:04:32,470 --> 00:04:35,440
它的分类以及呢功能

82
00:04:35,440 --> 00:04:39,240
我们首先了解到第一个层次

83
00:04:39,240 --> 00:04:43,520
关于 CPU 子部件它的分类

84
00:04:43,520 --> 00:04:45,750
CPU 里面啊，可以呢

85
00:04:45,750 --> 00:04:48,470
再细分为一些呢子部件

86
00:04:48,470 --> 00:04:49,540
寄存器

87
00:04:49,540 --> 00:04:52,150
首先看到运算器

88
00:04:52,150 --> 00:04:56,670
计算机它的产生就是为了做运算的

89
00:04:56,670 --> 00:05:00,600
那运算器它包含哪些部件呢

90
00:05:00,600 --> 00:05:02,780
我们可以看到第一个呢

91
00:05:02,780 --> 00:05:04,900
是算术逻辑单元

92
00:05:04,900 --> 00:05:08,240
它是用来呢做算术逻辑运算的

93
00:05:08,240 --> 00:05:09,560
做运算的话

94
00:05:09,560 --> 00:05:11,800
诶，它要有数据加工

95
00:05:11,800 --> 00:05:14,020
要有了一定的材料

96
00:05:14,020 --> 00:05:16,470
这个材料也就是数据

97
00:05:16,470 --> 00:05:20,250
会放在累加寄存器 AC 当中

98
00:05:20,250 --> 00:05:21,920
累加寄存器

99
00:05:21,920 --> 00:05:27,380
它也是呢给 ALU 提供工作区的一个部件

100
00:05:27,380 --> 00:05:32,700
如果 CPU 还要与我们的存储做交互的话

101
00:05:32,700 --> 00:05:34,610
写内存的时候

102
00:05:34,610 --> 00:05:38,550
读内存的时候经常呢会用到数据缓冲

103
00:05:38,550 --> 00:05:43,530
那我们呢，做中转的是数据缓冲寄存

104
00:05:43,530 --> 00:05:45,970
先中转再运输

105
00:05:46,480 --> 00:05:49,260
在计算过程当中啊

106
00:05:49,260 --> 00:05:53,280
还有一些呢，特殊的状态需要呢，进行记录

107
00:05:53,280 --> 00:05:58,750
比如说溢出、解位这一些特殊的运算标志

108
00:05:58,750 --> 00:06:03,480
我们呢，会记录在状态条件寄存器当中

109
00:06:03,480 --> 00:06:06,710
那么对于状态条件寄存器

110
00:06:06,710 --> 00:06:10,190
它既可以呢存储一些运算的状态

111
00:06:10,190 --> 00:06:14,410
还可以呢存一些我们的控制状态标志

112
00:06:14,410 --> 00:06:15,720
控制标志啊

113
00:06:15,720 --> 00:06:17,000
就涉及到呢

114
00:06:17,000 --> 00:06:21,130
它的分类还可以归于控制器

115
00:06:21,130 --> 00:06:23,450
所以这一部分的分类

116
00:06:23,450 --> 00:06:25,650
它是呢，有争议的

117
00:06:25,650 --> 00:06:27,050
考试当中啊

118
00:06:27,050 --> 00:06:29,530
如果碰到分类问题

119
00:06:29,530 --> 00:06:33,700
状态条件寄存器放在最后去考虑

120
00:06:33,700 --> 00:06:36,100
有其他更好的选

121
00:06:36,100 --> 00:06:38,630
就不要呢选择它了

122
00:06:38,630 --> 00:06:41,500
那整个运算过程啊

123
00:06:41,500 --> 00:06:45,710
我们呢，是在运算器当中进行的数据加工

124
00:06:45,710 --> 00:06:47,040
谁来控制

125
00:06:47,040 --> 00:06:48,660
加工的流程呢

126
00:06:48,660 --> 00:06:52,840
是由控制器来进行控制的

127
00:06:52,950 --> 00:06:57,920
控制器它可以让我们的计算机呀

128
00:06:57,920 --> 00:07:02,720
按既定的流程来完成相应的功能

129
00:07:02,720 --> 00:07:06,270
那整个计算机与人相比

130
00:07:06,270 --> 00:07:07,770
它的区别是什么呢

131
00:07:07,770 --> 00:07:10,990
我们会认为人的大脑更灵活一些

132
00:07:10,990 --> 00:07:16,750
而计算机它是按照人类写好的程序来走的

133
00:07:16,750 --> 00:07:18,960
那整个程序啊

134
00:07:18,960 --> 00:07:21,640
加载到 CPU 当中去之后

135
00:07:21,640 --> 00:07:25,620
我们会按地址来读取指令

136
00:07:25,620 --> 00:07:30,960
这里的地址会放在程序计数器 PC 当中

137
00:07:30,960 --> 00:07:33,530
根据地址呢，找到指令

138
00:07:33,530 --> 00:07:38,650
把指令呢存到指令寄存器 IR 当中去

139
00:07:38,650 --> 00:07:41,640
这里的指令在计算机当中啊

140
00:07:41,640 --> 00:07:44,460
就是一些呢有特殊含义的

141
00:07:44,460 --> 00:07:46,290
012进制字符串

142
00:07:46,290 --> 00:07:48,580
那零二进制干嘛的

143
00:07:48,580 --> 00:07:53,690
我们的计算机会通过指令译码器来翻译

144
00:07:53,690 --> 00:07:57,550
然后呢，去控制特定的软硬

145
00:07:57,550 --> 00:07:59,990
来完成这些功能

146
00:07:59,990 --> 00:08:03,420
中间涉及到的一些时序控制信号

147
00:08:03,420 --> 00:08:05,600
还有呢，时序部件

148
00:08:05,600 --> 00:08:09,410
这些呢，就是控制器它的子部件

149
00:08:09,410 --> 00:08:11,530
再次提醒大家

150
00:08:11,530 --> 00:08:16,660
状态条件寄存器的分类是存在争议的

151
00:08:16,660 --> 00:08:20,680
也可以划分到控制器这里来

152
00:08:21,110 --> 00:08:25,290
这是要求大家掌握的第一个层次

153
00:08:25,290 --> 00:08:30,130
关于 CPU 当中这些子部件它的分类

154
00:08:30,130 --> 00:08:35,010
那这些子部件的功能具体如何来看呢

155
00:08:35,010 --> 00:08:38,520
我们下面啊，以一个简单的程序例

156
00:08:38,520 --> 00:08:43,080
带大家呢，看一看指令在我们寄存器，唉

157
00:08:43,080 --> 00:08:46,070
CPU 当中它的一个流转过程

158
00:08:46,070 --> 00:08:48,050
这个过程重要吗

159
00:08:48,050 --> 00:08:49,550
其实不重要

160
00:08:49,550 --> 00:08:51,290
看到这个图啊

161
00:08:51,290 --> 00:08:52,770
看起来很复杂

162
00:08:52,770 --> 00:08:56,020
大家可以像听故事一样听一听

163
00:08:56,020 --> 00:08:58,640
了解一下指令的流转过程

164
00:08:58,640 --> 00:09:00,580
帮助大家记一记呢

165
00:09:00,580 --> 00:09:02,550
各个子部件的功能

166
00:09:02,550 --> 00:09:06,590
后面会以文字的形式给大家展示呢

167
00:09:06,590 --> 00:09:08,220
它的具体功能

168
00:09:08,220 --> 00:09:11,250
那我们首先呢，看一个指令

169
00:09:11,250 --> 00:09:14,170
这个简短的小程序啊

170
00:09:14,170 --> 00:09:16,940
是以呢伪代码的形式来写的

171
00:09:16,940 --> 00:09:20,500
所以大家啊，了解每一条指令是干嘛的就行了

172
00:09:20,500 --> 00:09:22,460
没有语法规则

173
00:09:22,880 --> 00:09:25,020
这个程序的目的呢

174
00:09:25,020 --> 00:09:27,160
是计算2+4加六

175
00:09:27,160 --> 00:09:29,640
然后赋值给 sum 

176
00:09:29,640 --> 00:09:31,880
通过 sum 来返回

177
00:09:31,880 --> 00:09:35,280
那它里面的过程包含了唉

178
00:09:35,280 --> 00:09:36,420
我们声明

179
00:09:36,420 --> 00:09:38,940
并且定义 sum 初值等于零

180
00:09:38,940 --> 00:09:40,590
计算 sum 的

181
00:09:40,590 --> 00:09:42,430
输出 sum 的值

182
00:09:42,430 --> 00:09:44,450
那在这个过程当中

183
00:09:44,450 --> 00:09:48,510
程序在计算机当中肯定是存储起来的

184
00:09:48,510 --> 00:09:51,740
存储的地址依次呢有个哎

185
00:09:51,740 --> 00:09:53,660
相应的地址编号

186
00:09:53,660 --> 00:09:56,620
我们在运算的过程当中

187
00:09:56,620 --> 00:09:58,770
先看的控制器

188
00:09:58,770 --> 00:10:03,420
控制器它会控制我们的计算机

189
00:10:03,420 --> 00:10:09,040
按照这些指令依次来完成相应的功能

190
00:10:09,040 --> 00:10:12,420
首先要想读取到程序的话

191
00:10:12,420 --> 00:10:18,390
我们会将程序的起始位置读入到指令诶

192
00:10:18,390 --> 00:10:21,840
它的程序计数器 PC 当中

193
00:10:21,840 --> 00:10:25,940
那我们呢会将1001记录进去

194
00:10:26,780 --> 00:10:29,860
1001 H 是一个地址

195
00:10:29,860 --> 00:10:31,690
根据地址我们呢

196
00:10:31,690 --> 00:10:34,170
可以找到指令 sum 等于零

197
00:10:34,170 --> 00:10:36,380
把这个指令啊

198
00:10:36,380 --> 00:10:40,190
放到指令寄存器当中去

199
00:10:41,280 --> 00:10:43,080
放进去之后

200
00:10:43,080 --> 00:10:45,750
这个1001有没有用啊

201
00:10:45,750 --> 00:10:48,370
没有用了，我们的内容已经找到了

202
00:10:48,370 --> 00:10:53,240
所以接下来我们会给 PC 一个新的赋值

203
00:10:53,240 --> 00:10:56,380
PC 等于 PC 加一

204
00:10:56,990 --> 00:11:01,390
变成了1002 H 

205
00:11:02,190 --> 00:11:05,880
这个过程呢，就是顺序读取的过程

206
00:11:05,880 --> 00:11:09,380
如果啊涉及到条件判断跳转的话

207
00:11:09,380 --> 00:11:14,500
这里呢可以是偏移量来替代加一这个过程

208
00:11:14,500 --> 00:11:18,240
那我们读到指令寄存器当中啊

209
00:11:18,240 --> 00:11:21,150
它的内容并不是 sum 等于零

210
00:11:21,150 --> 00:11:25,720
而是呢以一定的零、一、二进制字符串来表示

211
00:11:25,720 --> 00:11:30,780
这个字符串如何体现在我们计算机当中的

212
00:11:30,780 --> 00:11:31,770
软硬件呢

213
00:11:31,770 --> 00:11:36,450
会通过指令译码器 id 来进行翻译

214
00:11:36,450 --> 00:11:41,340
告诉我们的软硬件你要呢做哪些动作

215
00:11:41,340 --> 00:11:42,430
这就是呢

216
00:11:42,430 --> 00:11:42,750
唉

217
00:11:42,750 --> 00:11:44,950
我们的程序计数器 PC 

218
00:11:44,950 --> 00:11:47,190
指令寄存器 R 以及呢

219
00:11:47,190 --> 00:11:50,510
指令译码器 id 它的功能

220
00:11:50,510 --> 00:11:52,090
那在这中间的话

221
00:11:52,090 --> 00:11:54,210
还有一些呢控制信号

222
00:11:54,210 --> 00:11:55,590
时序信号呢

223
00:11:55,590 --> 00:11:59,690
会通过时序部件来进行传输

224
00:11:59,690 --> 00:12:03,390
这里面呢有一个地址寄存器没有提到

225
00:12:03,390 --> 00:12:05,790
它是我们呢用内存的时候

226
00:12:05,790 --> 00:12:08,170
用来呢保存内存地址的

227
00:12:08,170 --> 00:12:11,250
在考试当中出现的不多

228
00:12:11,250 --> 00:12:14,850
这些呢，就是程序控制器

229
00:12:15,380 --> 00:12:17,380
除了控制器以外

230
00:12:17,380 --> 00:12:20,040
CPU 呢，还有一部分是运算器

231
00:12:20,040 --> 00:12:22,670
部分运算器它就是呢

232
00:12:22,670 --> 00:12:24,250
做算术逻辑运算的

233
00:12:24,250 --> 00:12:25,490
就是做计算的

234
00:12:25,490 --> 00:12:26,970
那我们想一想

235
00:12:26,970 --> 00:12:33,270
我们在进行2+4加六的运算过程的时候

236
00:12:33,270 --> 00:12:36,940
大家是如何来顺序计算的

237
00:12:36,940 --> 00:12:41,620
首先第一步计算的是2+4=6

238
00:12:41,620 --> 00:12:46,380
第二步计算6+6=120000

239
00:12:46,380 --> 00:12:51,040
那在这中间出现的六怎么处理呢

240
00:12:51,040 --> 00:12:55,760
在这个过程当中进行加法运算的过程

241
00:12:55,760 --> 00:13:00,820
是在呢，算术逻辑单元 ALU 当中进行的

242
00:13:00,820 --> 00:13:03,720
中间这个六是个，唉

243
00:13:03,720 --> 00:13:07,860
中间数据我们暂存在累加寄存器

244
00:13:07,860 --> 00:13:10,240
也就是累加器 AC 当中

245
00:13:10,400 --> 00:13:15,560
可以给 LU 来提供我们的数据加工的材料吧

246
00:13:15,560 --> 00:13:19,600
也可以给 ALU 来提供工作区

247
00:13:19,600 --> 00:13:24,700
那得出的结果12是不是有个进位呀

248
00:13:24,700 --> 00:13:30,010
进位标志会记录在状态条件寄存器当中

249
00:13:30,010 --> 00:13:35,620
记录它的状态标志记录完之后

250
00:13:35,620 --> 00:13:38,460
如果这个状态标志当中啊

251
00:13:38,460 --> 00:13:41,510
有一些呢会用来做控制，哎

252
00:13:41,510 --> 00:13:42,730
做控制标志

253
00:13:42,730 --> 00:13:43,950
做控制条件

254
00:13:43,950 --> 00:13:49,000
这个时候呢，它也可以归于控制器的范畴

255
00:13:49,000 --> 00:13:53,540
那我们最终会输出 sum 等于12

256
00:13:53,540 --> 00:13:58,210
输出会通过输入输出设备来进行输出

257
00:13:58,210 --> 00:14:00,050
甚至呢，可能会诶

258
00:14:00,050 --> 00:14:02,610
写到我们的存储器当中去

259
00:14:02,610 --> 00:14:05,740
那与外部的这些内容做交互的话

260
00:14:05,740 --> 00:14:10,840
我们会通过缓冲寄存器来中转数据

261
00:14:10,840 --> 00:14:14,270
那这一些呢，就是运算器当

262
00:14:14,270 --> 00:14:16,630
它的具体过程

263
00:14:17,630 --> 00:14:19,370
下面我们呢

264
00:14:19,370 --> 00:14:23,680
看一下这些子部件功能的文字叙述

265
00:14:23,680 --> 00:14:25,690
运算器和控制器

266
00:14:25,690 --> 00:14:28,820
首先第一个层次了解它的分类

267
00:14:28,820 --> 00:14:31,720
运算器包含运算哎

268
00:14:31,720 --> 00:14:35,430
算术逻辑单元做运算的 AL 、 U 

269
00:14:35,430 --> 00:14:38,440
提供数据运算的这个数据

270
00:14:38,440 --> 00:14:42,880
以及呢，提供工作区的累加寄存器 AC 

271
00:14:42,880 --> 00:14:45,640
如果写内存做缓存

272
00:14:45,640 --> 00:14:48,460
数据缓冲寄存器 DR 

273
00:14:48,460 --> 00:14:51,920
中转数据的进

274
00:14:51,920 --> 00:14:54,800
借位一些特殊的状态记载呢

275
00:14:54,800 --> 00:14:57,650
状态条件寄存器 P 、 S 、 W 

276
00:14:57,650 --> 00:15:01,040
也可以称为条件状态字

277
00:15:01,040 --> 00:15:04,560
那它的分类是有争议的

278
00:15:04,560 --> 00:15:07,100
也可以归为控制器

279
00:15:07,100 --> 00:15:10,020
因为里面会存控制标志

280
00:15:10,020 --> 00:15:16,720
控制器包含存指令地址的程序计数器 PC 

281
00:15:16,720 --> 00:15:19,000
注意它存的是地址

282
00:15:19,000 --> 00:15:22,260
并且是下一条指令的地址

283
00:15:22,260 --> 00:15:26,970
存指令本身的是指令寄存器 I 哈

284
00:15:26,970 --> 00:15:31,050
它存的内容呢，是指令 IR 和 PC 

285
00:15:31,050 --> 00:15:32,030
容易混淆

286
00:15:32,030 --> 00:15:33,780
要注意区分

287
00:15:33,780 --> 00:15:34,760
翻译

288
00:15:34,760 --> 00:15:37,160
我们012进制这个指令啊

289
00:15:37,160 --> 00:15:38,940
是用来做什么的

290
00:15:38,940 --> 00:15:42,880
由指令译码器 id 进行翻译

291
00:15:42,880 --> 00:15:46,620
时序部件提供了时序控制信号

292
00:15:46,620 --> 00:15:51,300
它的分类和功能需要大家呢掌握

293
00:15:52,170 --> 00:15:57,770
下面我们看一下它在真题当中的考察形式

294
00:15:58,440 --> 00:16:03,960
计算机当中提供指令地址的程序计数器

295
00:16:03,960 --> 00:16:06,140
PC 在什么当中

296
00:16:06,140 --> 00:16:10,140
这里考察的是 PC 的分类

297
00:16:10,140 --> 00:16:15,220
CPU 当中的分类包含控制器和运算器

298
00:16:15,220 --> 00:16:20,320
存储器、 IO 设备不在我们的 CPU 当中

299
00:16:20,320 --> 00:16:23,070
IO 设备是输入输出设备

300
00:16:23,070 --> 00:16:26,060
常见的鼠标、键盘、显示器

301
00:16:26,060 --> 00:16:29,030
存储器包含内存、外存

302
00:16:29,030 --> 00:16:31,670
也叫呢主存和辅存

303
00:16:31,670 --> 00:16:35,030
CPU 当中呢分为运算器

304
00:16:35,030 --> 00:16:37,040
控制器两大块

305
00:16:37,040 --> 00:16:41,220
运算器当中有算术逻辑运算单元

306
00:16:41,220 --> 00:16:43,030
叫做呢 A 、 L 、 U 

307
00:16:43,030 --> 00:16:45,180
还有呢累加寄存

308
00:16:45,180 --> 00:16:48,560
AC 提供工作区提供数据

309
00:16:48,820 --> 00:16:50,760
写内存的时候

310
00:16:50,760 --> 00:16:56,060
中转由数据缓冲寄存器来进行中转

311
00:16:56,060 --> 00:17:01,460
存特殊标志的有状态条件寄存器

312
00:17:01,460 --> 00:17:05,109
它的分类也可以归于控制器

313
00:17:05,109 --> 00:17:06,609
控制器当中呢

314
00:17:06,609 --> 00:17:11,260
有程序计数器 PC 存指令的 IR 

315
00:17:11,260 --> 00:17:13,630
翻译指令的 i

316
00:17:13,630 --> 00:17:16,740
以及呢唉时序部件

317
00:17:16,740 --> 00:17:21,800
那这里程序计数器 PC 是属于控制器的

318
00:17:21,800 --> 00:17:26,990
与指令寄存器 IR 要注意区分

319
00:17:28,880 --> 00:17:30,820
下面这道题

320
00:17:30,820 --> 00:17:35,790
CPU 执行算术运算或者逻辑运算的时候

321
00:17:35,790 --> 00:17:41,140
长江原操作数和结果暂存在什么当中

322
00:17:41,140 --> 00:17:46,190
那这道题考察的是子部件的功能

323
00:17:46,190 --> 00:17:51,140
注意做题的时摸时候需要呢读完题再做

324
00:17:51,140 --> 00:17:54,880
有些同学啊，看到算术逻辑运

325
00:17:54,880 --> 00:17:57,050
就直接的考虑

326
00:17:57,050 --> 00:17:57,470
唉

327
00:17:57,470 --> 00:17:59,070
我们的 AALU 

328
00:17:59,070 --> 00:18:00,510
算术逻辑单元呢

329
00:18:00,510 --> 00:18:02,610
那一定呢要看

330
00:18:02,610 --> 00:18:05,330
在这里考的不是 AALU 

331
00:18:05,330 --> 00:18:07,600
虽然这里没有这个混淆项

332
00:18:07,600 --> 00:18:10,900
它考察的是暂存数据的

333
00:18:10,900 --> 00:18:14,880
应该是累加寄存器 AC 

334
00:18:14,880 --> 00:18:17,950
那这里也会涉及到一些简称

335
00:18:17,950 --> 00:18:20,820
大家呢，也要去了解一

336
00:18:20,820 --> 00:18:23,900
简称与子部件的对应关系

337
00:18:23,900 --> 00:18:25,000
有时候呢

338
00:18:25,000 --> 00:18:28,780
翻译可能会存在一些呢偏差

339
00:18:28,780 --> 00:18:32,820
自己呢，要注意其他选项

340
00:18:32,820 --> 00:18:34,980
程序计数器 PC 

341
00:18:34,980 --> 00:18:40,200
它是用来存放下一条即将执行的指令地址

342
00:18:40,200 --> 00:18:42,390
指令寄存器 IR 呢

343
00:18:42,390 --> 00:18:47,580
是存我们呢当前正要执行的这条指令地址

344
00:18:47,580 --> 00:18:49,160
寄存器 AR 呢

345
00:18:49,160 --> 00:18:51,670
它是用来写内存的时候

346
00:18:51,670 --> 00:18:54,300
读内存的时候读写过程当中啊

347
00:18:54,300 --> 00:18:58,830
保留我们主存地址的这些啊

348
00:18:58,830 --> 00:19:01,530
就是要求大家掌握

349
00:19:01,530 --> 00:19:03,350
计算机结构当中

350
00:19:03,350 --> 00:19:04,200
cpu 

351
00:19:04,200 --> 00:19:07,700
它的运算器与控制器里面的

352
00:19:07,700 --> 00:19:10,620
子部件分类和子部件的功能
