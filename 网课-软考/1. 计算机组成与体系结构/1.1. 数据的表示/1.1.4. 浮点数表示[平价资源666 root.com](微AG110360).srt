1
00:00:00,000 --> 00:00:04,200
下面我们看到的是数据的表示当中

2
00:00:04,200 --> 00:00:06,290
浮点数表示

3
00:00:06,290 --> 00:00:09,130
对于浮点数而言

4
00:00:09,130 --> 00:00:12,090
我们在软件设计师考试当中

5
00:00:12,090 --> 00:00:14,190
需要掌握它的格式

6
00:00:14,190 --> 00:00:17,820
它各个组成部分的特点和意义

7
00:00:17,820 --> 00:00:20,420
以及呢，浮点数运算

8
00:00:20,420 --> 00:00:21,600
它的逻辑过程

9
00:00:21,600 --> 00:00:24,870
尤其是对接的过程需要大家知道

10
00:00:24,870 --> 00:00:29,970
而它实际的运算在软件设计师考试当中

11
00:00:29,970 --> 00:00:32,500
目前并没有出现过

12
00:00:32,500 --> 00:00:35,570
首先我们看一下浮点数的格式

13
00:00:35,570 --> 00:00:38,000
对于浮点数表示而言

14
00:00:38,000 --> 00:00:42,120
它是尾数加奇数的指数次幂

15
00:00:42,120 --> 00:00:44,440
为什么要有浮点数

16
00:00:44,440 --> 00:00:49,570
我们在前面讲到相应数据表示的时候

17
00:00:49,570 --> 00:00:51,950
曾经提到定点整数

18
00:00:51,950 --> 00:00:54,590
定点小数它的表示范围

19
00:00:54,590 --> 00:00:57,910
所谓的定点是小数点

20
00:00:57,910 --> 00:01:00,730
固定在数值位后面的时候

21
00:01:00,730 --> 00:01:02,450
是定点整数

22
00:01:02,450 --> 00:01:04,040
也就是纯证书

23
00:01:04,040 --> 00:01:06,880
在小数点固定

24
00:01:06,880 --> 00:01:11,420
A 位于整个数值前面的时候呢

25
00:01:11,420 --> 00:01:13,620
它就是一个定点小数

26
00:01:13,620 --> 00:01:16,720
也就是呢，纯小数的形式

27
00:01:16,720 --> 00:01:21,050
而计算过程当中碰到纯整数

28
00:01:21,050 --> 00:01:24,360
纯小数是百分之百的吗

29
00:01:24,360 --> 00:01:25,600
不可能

30
00:01:25,600 --> 00:01:30,060
所以呀，还有小数点位置不固定的情况

31
00:01:30,060 --> 00:01:31,960
就是呢，浮点数

32
00:01:31,960 --> 00:01:34,400
作为浮点数而言呢

33
00:01:34,400 --> 00:01:40,180
它主要表示形式是尾数乘以奇数的指数次幂

34
00:01:40,180 --> 00:01:44,890
这里的指数也可以呢，叫做解码

35
00:01:44,890 --> 00:01:47,820
我们常说的层面形式

36
00:01:47,820 --> 00:01:48,890
基因数

37
00:01:48,890 --> 00:01:52,720
我们在进制表示的时候提到过

38
00:01:52,720 --> 00:01:56,780
二进制当中基数是固定为二的

39
00:01:56,780 --> 00:02:01,940
那尾数和指数分别是什么样的形式呢

40
00:02:01,940 --> 00:02:04,870
我们仍然以十进制为例

41
00:02:04,870 --> 00:02:08,240
来帮助大家理解各个部分

42
00:02:08,240 --> 00:02:11,480
首先我们看一个例子

43
00:02:15,560 --> 00:02:19,220
噗，这是十进制数吧

44
00:02:19,220 --> 00:02:21,360
在十进制数当中

45
00:02:21,360 --> 00:02:23,860
有一种表示方式呢

46
00:02:23,860 --> 00:02:26,160
叫做科学计数法

47
00:02:26,160 --> 00:02:31,990
以小数乘以十的 K 次方形式来进行表示

48
00:02:31,990 --> 00:02:33,710
这里的小数啊

49
00:02:33,710 --> 00:02:38,410
一般小数点前面保留一位数就可以了

50
00:02:38,410 --> 00:02:40,500
而解码的地方呢

51
00:02:40,500 --> 00:02:42,600
一般是整数部分

52
00:02:42,600 --> 00:02:44,370
基数就是十

53
00:02:44,370 --> 00:02:47,010
对应到二进制当中啊

54
00:02:47,010 --> 00:02:50,670
它的浮点数表示尾数部分

55
00:02:50,670 --> 00:02:52,810
就是呢，这里的小数

56
00:02:52,810 --> 00:02:56,860
它是定点小数的形式啊

57
00:03:04,100 --> 00:03:05,860
奇数部分呢

58
00:03:05,860 --> 00:03:07,820
固定是等于二的

59
00:03:07,820 --> 00:03:09,660
不会发生变化了

60
00:03:09,660 --> 00:03:12,750
指数部分就是这里的层面

61
00:03:12,750 --> 00:03:15,370
唉，也叫做呢解码

62
00:03:19,560 --> 00:03:23,980
这是浮点数，它的表示格式

63
00:03:23,980 --> 00:03:28,560
那各个部分它又有什么样的特点呢

64
00:03:28,560 --> 00:03:30,670
我们在解码当中啊

65
00:03:30,670 --> 00:03:31,690
出现的时候

66
00:03:31,690 --> 00:03:34,390
一般啊，是定点整数

67
00:03:41,660 --> 00:03:45,160
并且对应到马制来看的话

68
00:03:45,160 --> 00:03:47,700
我们曾经提到乙马

69
00:03:47,700 --> 00:03:50,220
它是一种特殊的码字

70
00:03:50,220 --> 00:03:54,480
一般呢是用在浮点数的阶码表示

71
00:03:54,480 --> 00:03:56,980
所以呀，这里的解码一般呢

72
00:03:56,980 --> 00:03:58,680
是用乙码来表示的

73
00:03:58,680 --> 00:04:00,850
那奇数用什么来表示

74
00:04:00,850 --> 00:04:04,840
基数在计算机当中是不需要存储的

75
00:04:04,840 --> 00:04:07,270
尾数用什么来表示呢

76
00:04:07,270 --> 00:04:11,160
尾数一般是用补码来表示的

77
00:04:11,160 --> 00:04:14,440
那有一类特殊的标准

78
00:04:14,440 --> 00:04:16,380
i 11754

79
00:04:16,380 --> 00:04:17,420
这一部分呢

80
00:04:17,420 --> 00:04:20,350
尾数可以用源码来表示

81
00:04:20,350 --> 00:04:22,990
了解到呢各个部分之后啊

82
00:04:22,990 --> 00:04:25,930
我们对比再来看一个数

83
00:04:30,040 --> 00:04:31,440
这

84
00:04:32,240 --> 00:04:37,590
两个数，首先大家觉得哪一个数更大一些啊

85
00:04:37,590 --> 00:04:41,330
我们对比的是从哪里判断大小呢

86
00:04:41,330 --> 00:04:44,070
会从解码来判断

87
00:04:44,070 --> 00:04:47,710
十的六次方是个百万的级别

88
00:04:47,710 --> 00:04:52,380
十的十次方是个 E 以上的级别了吧

89
00:04:52,380 --> 00:04:54,290
所以这样对比来看

90
00:04:54,290 --> 00:04:58,190
下面的数值范围肯定会更大

91
00:04:58,190 --> 00:05:02,650
解码可以影响数值表示的范围

92
00:05:02,650 --> 00:05:04,690
解码的位数越多

93
00:05:04,690 --> 00:05:07,270
表示的范围呢就越大

94
00:05:07,270 --> 00:05:10,500
那我们再来看尾数部分

95
00:05:10,500 --> 00:05:12,430
对于上面这个数

96
00:05:12,430 --> 00:05:16,370
它的最后一个五是精确到百分位吧

97
00:05:16,370 --> 00:05:20,190
下面的五是精确到了千分位

98
00:05:20,190 --> 00:05:22,800
哪一个更准一些呢

99
00:05:22,800 --> 00:05:28,010
这里所谓的精准指的是有效精度

100
00:05:28,010 --> 00:05:32,790
尾数可以表示数值的有效精度

101
00:05:32,790 --> 00:05:34,580
长度越大呢

102
00:05:34,580 --> 00:05:36,160
诶，位数越多

103
00:05:36,160 --> 00:05:39,110
表示呢，精度就越高

104
00:05:39,110 --> 00:05:42,910
这是啊，尾数和解码的意义所在

105
00:05:42,910 --> 00:05:47,500
那如果我们现在要对这两个数来进行

106
00:05:47,500 --> 00:05:49,280
加法运算的话

107
00:05:49,280 --> 00:05:53,210
能不能直接用尾数加尾数呢

108
00:05:53,210 --> 00:05:56,060
或者直接接码加接

109
00:05:56,060 --> 00:05:57,950
没有这种形式吧

110
00:05:57,950 --> 00:06:02,930
那我们在计算的时候是如何来操作的

111
00:06:02,980 --> 00:06:04,940
首先第一步

112
00:06:04,940 --> 00:06:07,620
让他们的接码对齐

113
00:06:07,620 --> 00:06:09,980
我们叫做呢对接

114
00:06:09,980 --> 00:06:13,920
如果要求两个解码一致

115
00:06:13,920 --> 00:06:17,750
一种呢，是让解码保持为六

116
00:06:17,750 --> 00:06:21,440
一种呢，是让解码保持为十

117
00:06:21,440 --> 00:06:25,040
如果解码保持为六的话

118
00:06:25,040 --> 00:06:28,440
下面的这个数我们要变成多少呢

119
00:06:28,440 --> 00:06:30,900
十的六次方的话

120
00:06:30,900 --> 00:06:33,520
前面和后面部分啊

121
00:06:33,520 --> 00:06:37,000
整个层面缩小了1万倍

122
00:06:37,000 --> 00:06:40,220
那前面的尾数就要扩大1万倍

123
00:06:40,220 --> 00:06:42,520
才能够保持平衡吧

124
00:06:42,520 --> 00:06:47,640
在这个过程当中进行加减运算之后啊

125
00:06:47,640 --> 00:06:50,820
还需要呢，重新调整解

126
00:06:50,820 --> 00:06:53,780
才能保证前面的尾数

127
00:06:53,780 --> 00:06:54,040
唉

128
00:06:54,040 --> 00:06:55,600
也就是小数部分的话

129
00:06:55,600 --> 00:06:58,660
是小数点前只保留一位吧

130
00:06:58,660 --> 00:07:02,000
所以这种形式并不可取

131
00:07:02,000 --> 00:07:04,730
我们在做对接的时候

132
00:07:04,730 --> 00:07:08,730
一般呢，是小数向大数看齐

133
00:07:08,730 --> 00:07:13,900
将十的六次方扩展为十的十次方

134
00:07:13,900 --> 00:07:16,780
后面扩大了1万倍

135
00:07:16,780 --> 00:07:19,560
乘法的另一部分就要呢

136
00:07:19,560 --> 00:07:21,060
缩小1万倍

137
00:07:21,060 --> 00:07:24,540
变成0.000125

138
00:07:25,160 --> 00:07:30,400
那接下来再对尾数进行加减运算

139
00:07:30,400 --> 00:07:37,020
变成了1.255125×10的十次方

140
00:07:37,020 --> 00:07:38,510
还需要调整吗

141
00:07:38,510 --> 00:07:40,130
其实就不需要了吧

142
00:07:40,130 --> 00:07:44,030
这就是呢，浮点数它的运算过程

143
00:07:44,030 --> 00:07:47,750
先对接再进行尾数计算

144
00:07:47,750 --> 00:07:50,880
那有一个特殊的地方是什么呢

145
00:07:50,880 --> 00:07:55,960
我们在二进制当中进行浮点数运算的时候

146
00:07:55,960 --> 00:07:59,460
还需要呢对结果进行格式化

147
00:07:59,460 --> 00:08:03,030
大家了解到结果需要格式化

148
00:08:03,030 --> 00:08:04,630
将我们的尾数啊

149
00:08:04,630 --> 00:08:08,900
限定在0.5和一之间就可以了

150
00:08:08,900 --> 00:08:11,380
其他具体的格式化过程

151
00:08:11,380 --> 00:08:14,120
不需要大家呢去了解

152
00:08:14,120 --> 00:08:16,210
那我们梳理一下

153
00:08:16,210 --> 00:08:19,090
刚刚给大家提到的一些特点

154
00:08:19,090 --> 00:08:23,480
首先，对于浮点数的表示格式

155
00:08:23,480 --> 00:08:26,120
尾数乘以奇数的指数

156
00:08:26,120 --> 00:08:29,620
次幂指数也叫做解码

157
00:08:29,620 --> 00:08:32,860
尾数呢，一般可以用补码表示

158
00:08:32,860 --> 00:08:35,690
阶码用移码来表示

159
00:08:35,690 --> 00:08:40,850
在 I 111754工业标准当中

160
00:08:40,850 --> 00:08:45,900
尾数也可以呢，用原码来表示

161
00:08:46,180 --> 00:08:48,900
这是一个特殊的用法

162
00:08:48,900 --> 00:08:53,520
通常我们看到的都是补码表示居多

163
00:08:53,520 --> 00:08:54,780
其次

164
00:08:54,780 --> 00:08:56,890
阶码它的位数呢

165
00:08:56,890 --> 00:08:59,910
可以决定数它的表示范围

166
00:08:59,910 --> 00:09:01,230
位数越多

167
00:09:01,230 --> 00:09:03,250
表示范围越大

168
00:09:03,250 --> 00:09:07,820
尾数的位数可以决定数的有效精度

169
00:09:07,820 --> 00:09:09,360
位数越多呢

170
00:09:09,360 --> 00:09:11,060
精度就越高

171
00:09:11,060 --> 00:09:13,350
我们前面呢，有对比

172
00:09:13,350 --> 00:09:18,050
在运算过程当中了解它的逻辑过程

173
00:09:18,050 --> 00:09:19,870
先对接再计算

174
00:09:19,870 --> 00:09:21,310
最后有个结果

175
00:09:21,310 --> 00:09:25,340
格式化对接是如何来做的呢

176
00:09:25,340 --> 00:09:28,330
小树向大树看齐

177
00:09:28,330 --> 00:09:31,130
当解码扩大的时候啊

178
00:09:31,130 --> 00:09:36,370
我们的尾数要随之缩小相应的倍数

179
00:09:36,370 --> 00:09:39,490
那这个缩小的过程当中

180
00:09:39,490 --> 00:09:41,840
我们会发现一、二、

181
00:09:41,840 --> 00:09:45,940
这个数字相对于小数点而言

182
00:09:45,940 --> 00:09:48,670
是不是向右移动啊

183
00:09:48,670 --> 00:09:50,920
移动的过程当中

184
00:09:50,920 --> 00:09:53,200
高位不足的位置呢

185
00:09:53,200 --> 00:09:54,940
补上了零

186
00:09:54,940 --> 00:09:56,830
那这里呢，哎

187
00:09:56,830 --> 00:10:00,830
对接需要小数向大数看齐

188
00:10:00,830 --> 00:10:04,290
并且尾数会右移

189
00:10:04,290 --> 00:10:06,980
在右移的过程当中

190
00:10:06,980 --> 00:10:09,600
如果说有符号位的话

191
00:10:09,600 --> 00:10:12,150
符号位是保持不变的

192
00:10:12,150 --> 00:10:16,240
这种呢，我们要也叫做算术右移

193
00:10:20,100 --> 00:10:24,580
这就是呢，我们要求大家掌握的浮点

194
00:10:24,580 --> 00:10:26,370
相关的内容

195
00:10:26,370 --> 00:10:28,040
这些特点啊

196
00:10:28,040 --> 00:10:29,670
一定要记住

197
00:10:29,670 --> 00:10:32,300
在软件设计师考试当中

198
00:10:32,300 --> 00:10:36,540
考的比较多的是相关的概念内容

199
00:10:36,540 --> 00:10:40,150
下面我们看一看浮点数

200
00:10:40,150 --> 00:10:45,550
它的表示在我们软设真题当中的体现

201
00:10:45,550 --> 00:10:47,940
首先下面这道题

202
00:10:47,940 --> 00:10:51,980
浮点数能够表示数的范围

203
00:10:51,980 --> 00:10:55,320
由谁来决定范围啊

204
00:10:55,320 --> 00:10:58,620
应该是解码决定范围

205
00:10:58,620 --> 00:11:01,150
尾数决定的是什么呢

206
00:11:01,150 --> 00:11:05,530
尾数决定的是有效精度

207
00:11:08,550 --> 00:11:10,790
我们记录的数值

208
00:11:10,790 --> 00:11:14,010
是精确到百分位还是千分位

209
00:11:14,010 --> 00:11:16,150
就是呢有效精度

210
00:11:16,150 --> 00:11:18,440
C 选项和 D 选

211
00:11:18,440 --> 00:11:20,620
我们前面呢并没有讲

212
00:11:20,620 --> 00:11:23,790
下面简单给大家介绍一下

213
00:11:23,790 --> 00:11:25,800
先看到接伏

214
00:11:25,800 --> 00:11:27,020
顾名思义

215
00:11:27,020 --> 00:11:30,460
接伏就是阶码的正负

216
00:11:30,970 --> 00:11:33,410
接码的符号位

217
00:11:35,920 --> 00:11:41,640
同样啊，我们以十进制先来看一下区别

218
00:11:41,640 --> 00:11:44,580
十的二次方表示多少啊

219
00:11:44,580 --> 00:11:46,200
表示100

220
00:11:46,200 --> 00:11:50,350
那它的符号位默认是正号的吧

221
00:11:50,350 --> 00:11:51,830
与之对应

222
00:11:51,830 --> 00:11:55,530
十的二次方负数表示什么呢

223
00:11:55,530 --> 00:11:58,050
表示1%

224
00:11:58,050 --> 00:12:01,520
也就是说，对于解码而言

225
00:12:01,520 --> 00:12:04,510
它一般呢，都是正数形式

226
00:12:04,510 --> 00:12:10,360
它的符号位决定整个数是整数呢还是小数

227
00:12:10,360 --> 00:12:12,390
如果是正号诶

228
00:12:12,390 --> 00:12:14,030
它是一个整数

229
00:12:14,030 --> 00:12:18,010
括号呢，会变成小数的形式

230
00:12:18,010 --> 00:12:22,880
这是接符 C 选项束缚

231
00:12:23,440 --> 00:12:26,120
为什么有束缚的概念呢

232
00:12:26,120 --> 00:12:27,840
我们提到过

233
00:12:27,840 --> 00:12:32,440
浮点数的结构是尾数

234
00:12:33,520 --> 00:12:36,600
乘以基数在这里

235
00:12:36,600 --> 00:12:38,460
二进制奇数就是二

236
00:12:38,460 --> 00:12:40,890
它的指数次幂吧

237
00:12:40,890 --> 00:12:43,010
或者说阶码次面

238
00:12:43,010 --> 00:12:45,490
那阶码我们看过了

239
00:12:45,490 --> 00:12:48,230
还有一部分是尾数了吧

240
00:12:48,230 --> 00:12:50,420
针对尾数来看

241
00:12:50,420 --> 00:12:52,560
它也有符号位

242
00:12:52,560 --> 00:12:58,250
那尾数的符号位对于0.125诶

243
00:12:58,250 --> 00:13:00,120
默认是正号

244
00:13:00,120 --> 00:13:03,290
以及呢负的0.125

245
00:13:03,290 --> 00:13:07,430
这是一个负数乘以十的平方

246
00:13:07,430 --> 00:13:11,180
这种情况下我们会发

247
00:13:11,180 --> 00:13:13,520
尾数的符号位

248
00:13:13,520 --> 00:13:16,500
它可以决定整个数的正负

249
00:13:16,500 --> 00:13:19,820
所以呢，我们称之为束缚

250
00:13:19,820 --> 00:13:24,170
束缚其实就是尾数部分的符号位

251
00:13:30,520 --> 00:13:35,680
这里啊，考察的是我们前面讲到的特点

252
00:13:35,680 --> 00:13:37,550
解码决定范围

253
00:13:37,550 --> 00:13:42,090
其他选项呢，稍微给大家进行了一些扩展

254
00:13:43,760 --> 00:13:45,540
下面这道题

255
00:13:45,540 --> 00:13:50,500
以下关于两个浮点数相加运算的叙述当中

256
00:13:50,500 --> 00:13:52,660
正确的是哪一个

257
00:13:52,660 --> 00:13:56,500
那我们浮点数相加的过程是什么呢

258
00:13:56,500 --> 00:13:58,240
先对接

259
00:13:58,240 --> 00:14:01,010
然后尾数运算

260
00:14:01,010 --> 00:14:03,710
然后结果格式化吧

261
00:14:03,710 --> 00:14:05,520
在这个过程当

262
00:14:05,520 --> 00:14:07,500
一定要先对接

263
00:14:07,500 --> 00:14:10,750
不对接没办法进行处理吧

264
00:14:10,750 --> 00:14:14,620
不需要对接的都是错误的选项

265
00:14:14,620 --> 00:14:17,940
并且对接之后是尾数相加

266
00:14:17,940 --> 00:14:21,130
没有呢解码相加的过程

267
00:14:21,130 --> 00:14:25,050
那对接的话 ab 两个选项

268
00:14:25,050 --> 00:14:27,820
后面说到了对接的过程

269
00:14:27,820 --> 00:14:31,990
对接是小数向大数看齐

270
00:14:31,990 --> 00:14:34,530
所以选择 B 选项

271
00:14:34,530 --> 00:14:37,720
A 选项的说法呢是错误的

272
00:14:37,720 --> 00:14:41,650
这是关于浮点数运算的过程

273
00:14:41,650 --> 00:14:45,180
我们要知道它运算的逻辑过程

274
00:14:45,180 --> 00:14:47,910
最后会有一个格式化的步骤

275
00:14:47,910 --> 00:14:49,970
了解对接的过程

276
00:14:49,970 --> 00:14:52,550
小数向大数看齐

277
00:14:52,550 --> 00:14:55,650
还有尾数右移

278
00:14:57,960 --> 00:15:03,880
这个 U 是我们的数码相对于小数点而言的

279
00:15:03,880 --> 00:15:05,930
如果不确定自己呢

280
00:15:05,930 --> 00:15:11,350
写两个十进制数来验证一下就可以了

281
00:15:12,460 --> 00:15:16,100
下面这道题呢，比较难

282
00:15:16,100 --> 00:15:20,140
这道题考察了浮点数的结构

283
00:15:20,140 --> 00:15:26,210
以及马字当中补码和移码的表示范围

284
00:15:26,210 --> 00:15:28,230
首先我们看题目

285
00:15:28,230 --> 00:15:30,990
设16位浮点数

286
00:15:30,990 --> 00:15:32,830
其中皆伏一位

287
00:15:32,830 --> 00:15:34,660
阶码六位

288
00:15:34,660 --> 00:15:35,890
束缚一位

289
00:15:35,890 --> 00:15:37,650
尾数八位

290
00:15:37,650 --> 00:15:40,910
若接码用以马来表示

291
00:15:40,910 --> 00:15:43,580
尾数用补码来表示

292
00:15:43,580 --> 00:15:45,170
这个情况下

293
00:15:45,170 --> 00:15:49,120
浮点数能够表示的范围是多少呢

294
00:15:49,120 --> 00:15:53,910
我们啊，把16位位置画成一个表格

295
00:15:54,140 --> 00:15:56,220
在表格当中

296
00:15:56,220 --> 00:16:00,100
根据浮点数它的表示形式来看

297
00:16:00,100 --> 00:16:04,050
它是尾数乘以奇数的指数次幂吧

298
00:16:04,050 --> 00:16:06,070
在这个过程当中

299
00:16:06,070 --> 00:16:08,270
街幅占据一位

300
00:16:08,270 --> 00:16:10,750
接码占据六位

301
00:16:10,750 --> 00:16:15,290
对于解码也就是指数部分而言

302
00:16:15,290 --> 00:16:18,320
它是一个定点整数

303
00:16:18,320 --> 00:16:21,120
那解码用移码来表示

304
00:16:21,120 --> 00:16:24,580
看到乙码表示大家想到了什么

305
00:16:24,580 --> 00:16:27,650
马制当中的人为定义

306
00:16:27,650 --> 00:16:31,080
卜马和以马是有特殊化的

307
00:16:31,080 --> 00:16:32,960
特殊在哪里

308
00:16:32,960 --> 00:16:37,400
将零的编码利用起来了啊

309
00:16:37,400 --> 00:16:41,020
那假设我们解码是乙码表是吧

310
00:16:41,020 --> 00:16:42,820
以码表示的时候

311
00:16:42,820 --> 00:16:47,320
这个零的编码能够表示最小范围

312
00:16:47,320 --> 00:16:48,750
它是多少呢

313
00:16:48,750 --> 00:16:50,910
符号位是负号

314
00:16:50,910 --> 00:16:55,020
再将整个数作为整体来判断

315
00:16:55,020 --> 00:16:57,420
负的64

316
00:16:57,450 --> 00:17:01,930
能够表示的最大数值范围是多少呢

317
00:17:01,930 --> 00:17:05,349
哎，符号位最大数肯定是个正数呀

318
00:17:05,349 --> 00:17:08,990
所以取零绝对值最大

319
00:17:08,990 --> 00:17:12,190
大家呢，都取腰作为数值

320
00:17:12,190 --> 00:17:14,270
这个结果是多少

321
00:17:14,270 --> 00:17:17,930
大家可以试着先补整再计算

322
00:17:17,930 --> 00:17:24,109
加上一得到的结果就是1000000

323
00:17:24,109 --> 00:17:25,780
也就是64吧

324
00:17:25,780 --> 00:17:29,040
那原本的数值是加一得到的

325
00:17:29,040 --> 00:17:32,100
现在减一，也就是呢，63

326
00:17:32,100 --> 00:17:35,320
这是解码的取值范围

327
00:17:35,320 --> 00:17:39,730
代入到浮点数表示格式当中来看

328
00:17:39,730 --> 00:17:43,110
它能够表示二的-64次方

329
00:17:43,110 --> 00:17:45,810
以及二的63次方吧

330
00:17:45,810 --> 00:17:49,550
我们来看一下四个选项当中

331
00:17:49,550 --> 00:17:53,920
能不能取到二的64次方啊

332
00:17:53,920 --> 00:17:55,140
取不到

333
00:17:55,140 --> 00:17:59,040
所以 AC 选项是错误的

334
00:17:59,880 --> 00:18:04,200
根据指数，也就是解码的位数

335
00:18:04,200 --> 00:18:06,400
我们能够判断出呢

336
00:18:06,400 --> 00:18:09,180
哎， N 等于七的时候

337
00:18:09,180 --> 00:18:13,870
七位二进制它能够表示的已码范围

338
00:18:13,870 --> 00:18:18,460
那同样再来看束缚和尾数

339
00:18:18,460 --> 00:18:22,500
在我们浮点数表示当中

340
00:18:22,500 --> 00:18:26,870
尾数的正负能够决定整个数的正负

341
00:18:26,870 --> 00:18:30,520
所以我们把它的符号位叫做束缚

342
00:18:30,520 --> 00:18:33,250
它是一个定点小数

343
00:18:33,250 --> 00:18:36,050
也就是纯小数的形式吧

344
00:18:36,050 --> 00:18:38,750
加起来八个数值位

345
00:18:38,750 --> 00:18:42,640
一个符号位 N 等于九的情况下

346
00:18:42,640 --> 00:18:47,740
九位二进制定点小数用补码表示的范围

347
00:18:47,740 --> 00:18:50,470
那这就是呢，我们这道题呀

348
00:18:50,470 --> 00:18:53,740
结合马制的一个考察

349
00:18:53,740 --> 00:18:57,550
看到补马想到什么

350
00:18:57,550 --> 00:19:00,110
在定点小数当

351
00:19:00,110 --> 00:19:01,850
人为定义了吧

352
00:19:01,850 --> 00:19:06,310
补码的最小值应该是一

353
00:19:07,080 --> 00:19:09,020
最大值唉

354
00:19:09,020 --> 00:19:12,260
往前面去取绝对值就可以了

355
00:19:12,260 --> 00:19:16,390
那我们对比 B 选项和 D 选项来看

356
00:19:16,390 --> 00:19:20,900
我们现在最大表示范围大家是一样

357
00:19:20,900 --> 00:19:23,010
最小表示范围

358
00:19:23,010 --> 00:19:28,690
B 选项是-1×2的63次方

359
00:19:29,300 --> 00:19:34,780
D 选项是-1+2的八次方

360
00:19:34,780 --> 00:19:37,410
乘以二的63次方

361
00:19:37,410 --> 00:19:39,270
那我们会发现，诶

362
00:19:39,270 --> 00:19:42,310
我们把负号放到括号里面去了吧

363
00:19:42,310 --> 00:19:44,510
在数轴上面

364
00:19:44,510 --> 00:19:47,640
零左侧的地方是小数

365
00:19:47,640 --> 00:19:51,450
一加上某一个整数部

366
00:19:51,450 --> 00:19:54,520
正数部分往前移动了吧

367
00:19:54,520 --> 00:19:57,330
这个过程当中会发现呢

368
00:19:57,330 --> 00:20:01,260
唉，我们在这里谁的范围更小

369
00:20:01,260 --> 00:20:04,760
B 选项的范围才是呢，最小的

370
00:20:04,760 --> 00:20:08,200
那这个范围到底能不能取到呢

371
00:20:08,200 --> 00:20:12,010
补码表示尾数可以用一

372
00:20:12,010 --> 00:20:15,840
所以正确答案应该是 B 选项

373
00:20:15,840 --> 00:20:19,660
B 选项的范围其实已经包括了

374
00:20:19,660 --> 00:20:21,220
囊括了 D 选项

375
00:20:21,220 --> 00:20:24,300
而为什么能取到一

376
00:20:24,300 --> 00:20:27,780
是补码表示的特殊化

377
00:20:27,780 --> 00:20:29,500
人为定义

378
00:20:29,500 --> 00:20:32,420
这道题呢，有一定的难度

379
00:20:32,420 --> 00:20:35,380
结合考察了浮点数结构

380
00:20:35,380 --> 00:20:38,790
以及码字当中表示范围

381
00:20:38,790 --> 00:20:42,240
大家回去之后自己动手呢，画一画

382
00:20:42,240 --> 00:20:44,300
思考一下这道题

383
00:20:44,300 --> 00:20:45,360
好

384
00:20:45,460 --> 00:20:46,700
以上啊

385
00:20:46,700 --> 00:20:51,240
就是给大家介绍到的浮点数相关的内容

386
00:20:51,240 --> 00:20:53,960
希望呢，能给大家带来一些启发
