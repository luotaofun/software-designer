1
00:00:00,000 --> 00:00:02,480
下面看到动态规划法的部分

2
00:00:02,480 --> 00:00:03,720
动态规划法呢

3
00:00:03,720 --> 00:00:06,270
相对来说它的实现是比较复杂的

4
00:00:06,270 --> 00:00:08,360
因为它会呢，涉及递归式

5
00:00:08,360 --> 00:00:10,820
那这种算法一般来说，实现之后

6
00:00:10,820 --> 00:00:13,640
时间效率上呢，是可以有所提高的

7
00:00:13,640 --> 00:00:15,030
动态规划法呢

8
00:00:15,030 --> 00:00:18,730
它在求解的时候也会将问题来进行划分

9
00:00:18,730 --> 00:00:20,320
只是划分之后啊

10
00:00:20,320 --> 00:00:23,200
为了考虑中间重复去求解

11
00:00:23,200 --> 00:00:26,420
那将这些重复子问题的解呢，记录下来

12
00:00:26,420 --> 00:00:28,380
用的时候查表就可以了

13
00:00:28,380 --> 00:00:31,890
从而呢，哎，优化了我们的解题过程

14
00:00:31,890 --> 00:00:34,290
那每一步都是呢，最优

15
00:00:34,290 --> 00:00:37,480
从而呢，来保证全局是最优的

16
00:00:37,480 --> 00:00:40,860
那一般题目会出现最优，子结构的描述

17
00:00:40,860 --> 00:00:43,100
会有递归式来进行表示

18
00:00:43,100 --> 00:00:46,460
然后呢，还有数组来记录中间解

19
00:00:46,460 --> 00:00:49,300
这就是呢，动态规划法它的特点

20
00:00:49,300 --> 00:00:51,730
将问题划分成子问题

21
00:00:51,730 --> 00:00:54,120
子问题记录在表格当中

22
00:00:54,120 --> 00:00:56,880
查表，找到子问题的解

23
00:00:56,880 --> 00:00:59,190
构造最终问题的解

24
00:00:59,190 --> 00:01:01,500
那我们需要呢，区分，诶

25
00:01:01,500 --> 00:01:04,340
将动态规划法与分制法区分开

26
00:01:04,340 --> 00:01:05,990
动态规划法的话

27
00:01:05,990 --> 00:01:07,930
它有记录子问题的解

28
00:01:07,930 --> 00:01:09,510
分治法不需要

29
00:01:09,510 --> 00:01:11,920
那与贪心法分开

30
00:01:11,920 --> 00:01:14,310
我们的动态规划法有递归

31
00:01:14,310 --> 00:01:16,190
有我们的递归式

32
00:01:16,190 --> 00:01:18,620
而贪心法是不需要的

33
00:01:18,620 --> 00:01:22,360
接下来我们看到这一部分在软件考试

34
00:01:22,360 --> 00:01:25,370
软件设计师考试真题当中的体现

35
00:01:25,370 --> 00:01:27,170
那下面已知呢

36
00:01:27,170 --> 00:01:30,350
矩阵 am 乘以 N 和 BN 乘以 P 

37
00:01:30,350 --> 00:01:34,570
相乘的时间复杂度是 M 乘以 N 乘以 P 

38
00:01:34,570 --> 00:01:38,690
矩阵相乘啊，是可以满足结合律的

39
00:01:38,690 --> 00:01:40,700
那什么是结合律呢

40
00:01:40,700 --> 00:01:44,420
唉，如果我们有三个矩阵 ABC 相乘的话

41
00:01:44,420 --> 00:01:48,720
我们的顺序可以是先做 A 乘以 B 再乘以 C 

42
00:01:48,720 --> 00:01:51,100
也可以先做 B 乘以 C 

43
00:01:51,100 --> 00:01:54,100
再与 A 与之相乘

44
00:01:54,100 --> 00:01:56,740
那为什么有不同的顺序呢

45
00:01:56,740 --> 00:01:59,560
因为不同的相乘顺序啊

46
00:01:59,560 --> 00:02:05,130
所需要进行的乘法次数会有呢，很大的差别

47
00:02:05,130 --> 00:02:07,600
那我们在这里呢

48
00:02:07,600 --> 00:02:12,920
如果要确定 N 个矩阵相乘的最优计算顺序

49
00:02:12,920 --> 00:02:15,000
那我们就可以得到一个呢

50
00:02:15,000 --> 00:02:16,900
最少的乘法次数

51
00:02:16,900 --> 00:02:19,680
这就是呢，矩阵链乘的问题

52
00:02:19,680 --> 00:02:21,900
有些同学之前不了解的时候

53
00:02:21,900 --> 00:02:25,250
可能呢，根本就不知道这道题在求什么

54
00:02:25,250 --> 00:02:28,350
他去求的都是呢，乘法次数啊

55
00:02:28,350 --> 00:02:29,890
那我们现在呢

56
00:02:29,890 --> 00:02:32,370
已知确定 N 个矩阵

57
00:02:32,370 --> 00:02:35,860
A 1到 a an 相乘的计算顺序

58
00:02:35,860 --> 00:02:37,960
具有最优子结构

59
00:02:37,960 --> 00:02:39,060
也就是说

60
00:02:39,060 --> 00:02:42,830
在 A 1到 an 相乘的计算顺序当中

61
00:02:42,830 --> 00:02:44,560
包含它的子问题

62
00:02:44,560 --> 00:02:46,280
A 1到 AK 相乘

63
00:02:46,280 --> 00:02:50,170
K 加一到 N 相乘的最优计算顺序

64
00:02:50,170 --> 00:02:53,940
那我们还可以列出它的递归式

65
00:02:54,310 --> 00:02:56,970
递归是它的中间

66
00:02:56,970 --> 00:03:01,590
结果是记录在二维数组 IJMIJ 里面的

67
00:03:01,590 --> 00:03:05,360
那 mi 接当 I 等于 J 的时候

68
00:03:05,360 --> 00:03:07,090
乘法次数是零

69
00:03:07,090 --> 00:03:10,010
当它 I 小于 J 的时候

70
00:03:10,010 --> 00:03:14,340
我们计算的过程当中要求一个最小值

71
00:03:14,340 --> 00:03:16,510
那最小值是呢

72
00:03:16,510 --> 00:03:19,290
划分之后查子问题的解

73
00:03:19,290 --> 00:03:23,400
再加上当前规模的维度相乘

74
00:03:23,400 --> 00:03:25,250
那我们现在唉

75
00:03:25,250 --> 00:03:27,390
其中 A 的维度

76
00:03:27,390 --> 00:03:32,220
AI 的维度记作 PI 减一乘以 PI 

77
00:03:32,220 --> 00:03:35,090
然后 mi j 表示的是

78
00:03:35,090 --> 00:03:38,410
A 1乘到 A 阶的最优计算顺序

79
00:03:38,410 --> 00:03:41,980
过程当中它的相乘次数

80
00:03:41,980 --> 00:03:44,360
那我们现在最终的目的

81
00:03:44,360 --> 00:03:46,030
其实返回的是

82
00:03:46,030 --> 00:03:48,670
切断的 K 的切割位置

83
00:03:48,670 --> 00:03:52,350
以及呢最后的相乘次数

84
00:03:54,480 --> 00:03:58,960
那我们现在呢，先采用自底向上的方

85
00:03:58,960 --> 00:04:01,650
来求它的最优顺序

86
00:04:01,650 --> 00:04:05,250
然后求解的算法策略是什么

87
00:04:05,250 --> 00:04:07,160
唉，有最优子结构

88
00:04:07,160 --> 00:04:08,200
有递归式

89
00:04:08,200 --> 00:04:10,930
还有数组记录中间结果吧

90
00:04:10,930 --> 00:04:14,890
这种情况就是典型的动态规划法

91
00:04:14,890 --> 00:04:17,810
解决矩阵练成问题

92
00:04:17,810 --> 00:04:20,880
那它的时间复杂度是多少呢

93
00:04:20,880 --> 00:04:24,080
我们在看时间复杂度的时候

94
00:04:24,080 --> 00:04:25,520
一般呢，可以

95
00:04:25,520 --> 00:04:28,770
诶，自己设计一下它的算法实现

96
00:04:28,770 --> 00:04:30,900
具体的算法实现过程

97
00:04:30,900 --> 00:04:33,250
其实就是对递归式的实现吧

98
00:04:33,250 --> 00:04:34,840
那这个递归式

99
00:04:34,840 --> 00:04:40,140
它的实现过程涉及到了变量 I 、 J 、 K 

100
00:04:40,630 --> 00:04:44,980
也就是说我们在最终的实现过程当中啊

101
00:04:44,980 --> 00:04:47,550
代码会涉及这三个变量

102
00:04:47,550 --> 00:04:50,670
并且三个变量的取值都会呢

103
00:04:50,670 --> 00:04:52,720
依次的去进行尝试

104
00:04:52,720 --> 00:04:55,160
所以最终形成的，诶

105
00:04:55,160 --> 00:04:59,340
代码应该是一个三层嵌套循环的结构

106
00:04:59,340 --> 00:05:02,010
那这种三层嵌套循环

107
00:05:02,010 --> 00:05:06,730
时间复杂度就是大 O 级 N 的三次方

108
00:05:06,730 --> 00:05:11,340
再看呢，第三空空间的复杂度是多少

109
00:05:11,340 --> 00:05:12,940
诶，时间复杂度

110
00:05:12,940 --> 00:05:15,120
我们说呢，根据变量来求

111
00:05:15,120 --> 00:05:17,150
空间复杂度是什么

112
00:05:17,150 --> 00:05:18,290
辅助空间

113
00:05:18,290 --> 00:05:20,850
或者说我们的临时空间吧

114
00:05:20,850 --> 00:05:24,490
那这个空间其实针对 MIIJ 

115
00:05:24,490 --> 00:05:27,610
就是我们中间结果的记录形式

116
00:05:27,610 --> 00:05:32,720
所以它的空间复杂度是一个二维数组

117
00:05:32,720 --> 00:05:33,220
诶

118
00:05:33,220 --> 00:05:35,300
二维的这种数组啊

119
00:05:35,300 --> 00:05:38,730
空间复杂度显然也是呢，二维的

120
00:05:38,730 --> 00:05:41,840
它是呢，大 O 级的 N 平方

121
00:05:41,840 --> 00:05:43,970
那我们，唉，有同学会说

122
00:05:43,970 --> 00:05:46,560
MIC 不是我们求取的结果吗

123
00:05:46,560 --> 00:05:50,360
其实我们最终只要返回一个结果就可以了吧

124
00:05:50,360 --> 00:05:52,240
并不需要整个数组

125
00:05:52,240 --> 00:05:55,960
这个整个数组是我们的临时变量

126
00:05:55,960 --> 00:05:58,800
用来暂存中间结果、查表

127
00:05:58,800 --> 00:06:02,470
然后呢，直到得到最终结果的一个过程

128
00:06:02,470 --> 00:06:06,910
所以 MIJ 呢，是一个临时变量辅助空间啊

129
00:06:06,910 --> 00:06:09,160
注意一下呢，这个区别

130
00:06:09,160 --> 00:06:12,490
那现在给定一个实例

131
00:06:12,680 --> 00:06:16,420
P 0、 P 1到 P 5，依次如下

132
00:06:16,420 --> 00:06:19,990
那我们最优的计算顺序是什么呢

133
00:06:19,990 --> 00:06:23,730
这道题如果出现在下午题当中

134
00:06:23,730 --> 00:06:25,060
会比较麻烦

135
00:06:25,060 --> 00:06:30,210
因为我们需要针对这五个维度来进行尝试

136
00:06:30,210 --> 00:06:32,870
但现在我们考的是什么啊

137
00:06:32,870 --> 00:06:34,770
是选择题啊

138
00:06:34,770 --> 00:06:39,500
选择题已经给大家列出了可选范围了

139
00:06:39,500 --> 00:06:43,860
那我们把这四个选项当中的计算次数

140
00:06:43,860 --> 00:06:45,100
给它算出来

141
00:06:45,100 --> 00:06:48,410
谁最小谁就是这里的最优解了

142
00:06:48,410 --> 00:06:51,670
那我们首先看 A 选项当中

143
00:06:51,670 --> 00:06:54,210
A 1与 A 2进行相乘

144
00:06:54,210 --> 00:06:56,610
哎，我们先把这个维度写上吧

145
00:06:56,610 --> 00:06:58,410
很多同学不是很明白

146
00:06:58,410 --> 00:07:00,190
那这个维度啊

147
00:07:00,190 --> 00:07:01,930
0~5的维度

148
00:07:01,930 --> 00:07:08,330
它依次应该是20×15的规模

149
00:07:08,330 --> 00:07:12,860
然后呢，是15×4的规模

150
00:07:12,860 --> 00:07:16,600
然后是4×10的规模

151
00:07:16,600 --> 00:07:20,230
接下来是10×20的规模

152
00:07:20,230 --> 00:07:22,990
20×25的规模

153
00:07:22,990 --> 00:07:26,150
这是矩阵的维度记录

154
00:07:26,350 --> 00:07:28,950
有同学可能会问老师

155
00:07:28,950 --> 00:07:31,830
我们明明记得是25、15、四

156
00:07:31,830 --> 00:07:34,100
为什么有两次15呢

157
00:07:34,100 --> 00:07:36,750
在做矩阵乘法的时候

158
00:07:36,750 --> 00:07:38,820
这里的行列数啊

159
00:07:38,820 --> 00:07:42,580
必须前面的列与后面的行相同

160
00:07:42,580 --> 00:07:44,920
才能够做矩阵乘法

161
00:07:44,920 --> 00:07:46,890
否则是做不了的

162
00:07:46,890 --> 00:07:50,690
这里呢，其实是属于一个数学常识问题了

163
00:07:50,690 --> 00:07:53,090
也就是说，我们在记录的时候啊

164
00:07:53,090 --> 00:07:55,590
只需要三个参数维度

165
00:07:55,590 --> 00:07:58,910
就可以表示两个矩阵的四维

166
00:07:58,910 --> 00:08:02,510
所以在这里呢，把相应的数据标出来

167
00:08:02,510 --> 00:08:04,770
A 选项它是呢

168
00:08:04,770 --> 00:08:08,410
哎，我们标一下，一、二、三、四、五

169
00:08:08,990 --> 00:08:10,590
它是 A 1

170
00:08:10,590 --> 00:08:11,950
先乘以 A 2

171
00:08:11,950 --> 00:08:14,030
那20×15

172
00:08:14,030 --> 00:08:15,310
15×4

173
00:08:15,310 --> 00:08:19,620
它的乘法次数是20×15乘以四

174
00:08:19,620 --> 00:08:22,800
接下来这个结果是多少呢

175
00:08:22,800 --> 00:08:25,540
得到的结果只有前面和后面

176
00:08:25,540 --> 00:08:28,520
所以是20×4的结果

177
00:08:28,520 --> 00:08:31,590
这个结果与 A 3相乘

178
00:08:31,590 --> 00:08:36,490
那与 A 3相乘应该是20×4乘以十

179
00:08:36,490 --> 00:08:38,760
与 A 3相乘之后

180
00:08:38,760 --> 00:08:41,159
我们的结果矩阵是多少啊

181
00:08:41,159 --> 00:08:43,980
应该是20×10

182
00:08:43,980 --> 00:08:47,750
接下来这个结果与 A 4再相乘

183
00:08:47,750 --> 00:08:52,030
那应该是20×10乘以20

184
00:08:52,030 --> 00:08:56,840
那相乘的矩阵结果是20×20的

185
00:08:56,840 --> 00:09:00,570
那再来将这个矩阵啊与 A 5相乘

186
00:09:00,570 --> 00:09:02,370
应该是呢，20

187
00:09:02,370 --> 00:09:04,510
20×25

188
00:09:05,520 --> 00:09:09,160
那把这些乘法次数加起来

189
00:09:09,160 --> 00:09:11,620
就是我们最终的哎

190
00:09:11,620 --> 00:09:15,160
矩阵乘法的执行乘法次数

191
00:09:15,160 --> 00:09:17,150
那这个数值是多少呢

192
00:09:17,150 --> 00:09:20,880
这里应该是1200

193
00:09:21,380 --> 00:09:24,120
这里应该是800

194
00:09:24,120 --> 00:09:27,100
这里呢，应该是4000

195
00:09:28,380 --> 00:09:32,500
这里应该是1万

196
00:09:33,820 --> 00:09:38,860
那最终的结果应该是1万6000次

197
00:09:39,310 --> 00:09:43,610
所以他执行的乘法次数其实是比较多的吧

198
00:09:43,610 --> 00:09:46,570
那我们再来看 B 选项当中

199
00:09:46,570 --> 00:09:49,420
A 1乘以括号 A 2

200
00:09:49,420 --> 00:09:54,400
那我们应该先算括号内部的 A 4乘以 A 5

201
00:09:54,400 --> 00:09:58,780
应该是呢10×20乘以25

202
00:09:58,780 --> 00:10:01,380
结果是10×25的

203
00:10:01,380 --> 00:10:03,080
与 A 3相

204
00:10:03,080 --> 00:10:06,330
应该是4×10乘以25

205
00:10:06,330 --> 00:10:08,730
结果是4×25的

206
00:10:08,730 --> 00:10:11,070
那接下来4×25

207
00:10:11,070 --> 00:10:12,650
再与 A 2相乘

208
00:10:12,650 --> 00:10:16,560
应该是15×4乘以25

209
00:10:16,910 --> 00:10:20,320
结果是15×25

210
00:10:20,320 --> 00:10:22,810
然后呢，再与 A 1相乘

211
00:10:22,810 --> 00:10:26,090
应该是20×15乘以25

212
00:10:26,090 --> 00:10:27,810
那这个过程诶

213
00:10:27,810 --> 00:10:32,030
我们把相应的这个乘法次数累加起来

214
00:10:32,030 --> 00:10:34,650
应该呢是等于啊

215
00:10:34,650 --> 00:10:37,930
这里应该是5000

216
00:10:38,870 --> 00:10:41,010
这里应该是呢

217
00:10:41,010 --> 00:10:43,150
哎，有1000

218
00:10:43,700 --> 00:10:48,880
这里呢，应该是115001千五

219
00:10:48,880 --> 00:10:52,220
那这里呢，应该是等于

220
00:10:53,440 --> 00:10:55,720
7500

221
00:10:56,710 --> 00:10:58,970
加起来的结果呢

222
00:10:58,970 --> 00:11:01,750
应该是1万5000次

223
00:11:01,750 --> 00:11:04,180
那我们再来看 C 选项

224
00:11:04,180 --> 00:11:07,260
C 选项它的乘法过程当中

225
00:11:07,260 --> 00:11:12,050
应该是先做 A 1加 A 2以 A 1乘 A 2

226
00:11:12,050 --> 00:11:15,730
也就是20×5乘以四

227
00:11:15,730 --> 00:11:18,550
接下来这个结果乘以 A 3

228
00:11:18,550 --> 00:11:21,130
那刚好应该是这一部分

229
00:11:21,130 --> 00:11:24,100
20×4乘以十

230
00:11:24,100 --> 00:11:26,220
结果是20×10的

231
00:11:26,220 --> 00:11:29,130
再来做 A 4乘 A 5

232
00:11:29,130 --> 00:11:31,140
A 4乘 A 5

233
00:11:31,140 --> 00:11:35,400
应该是10×20乘以25

234
00:11:35,400 --> 00:11:36,560
结果是

235
00:11:36,560 --> 00:11:38,360
哎，10×25吧

236
00:11:38,360 --> 00:11:41,420
这两个结果相乘应该是呢

237
00:11:41,420 --> 00:11:44,490
20×10乘以25

238
00:11:44,490 --> 00:11:48,100
那最终把这些内容累加起来

239
00:11:48,100 --> 00:11:51,670
哎，这里应该是啊，1200

240
00:11:51,670 --> 00:11:54,150
这里是等于800

241
00:11:54,150 --> 00:11:57,370
这里呢是等于5000

242
00:11:58,390 --> 00:12:02,490
那这里应该是等于也是呢

243
00:12:02,490 --> 00:12:03,470
5000

244
00:12:04,660 --> 00:12:08,780
加起来应该是1万2000次

245
00:12:10,980 --> 00:12:13,920
最后再来看一下 D 选项

246
00:12:13,920 --> 00:12:16,620
D 选项它的计算过程

247
00:12:16,620 --> 00:12:19,040
首先 A 1乘 A 2唉

248
00:12:19,040 --> 00:12:21,480
应该是20×15乘以四吧

249
00:12:21,480 --> 00:12:24,590
结果是1万两一千两百次的

250
00:12:24,590 --> 00:12:25,650
再来看呢

251
00:12:25,650 --> 00:12:29,230
下面是 A 3乘 A 4发生变化了

252
00:12:29,230 --> 00:12:33,950
A 3乘 A 4应该是4×1

253
00:12:33,950 --> 00:12:36,090
再乘以20的

254
00:12:37,050 --> 00:12:40,110
那4×10乘以20的结果

255
00:12:40,110 --> 00:12:41,690
是4×20了吧

256
00:12:41,690 --> 00:12:44,750
最终呢，这个结果再与 A 5相乘

257
00:12:44,750 --> 00:12:48,030
那应该是4×20乘以25

258
00:12:48,030 --> 00:12:50,450
结果是4×25的

259
00:12:50,450 --> 00:12:54,470
4×25与20×4的结果相乘

260
00:12:54,470 --> 00:12:56,550
A 1乘 A 2的结果相乘

261
00:12:56,550 --> 00:12:57,980
那应该是呢

262
00:12:57,980 --> 00:13:00,910
20×4乘以25

263
00:13:00,910 --> 00:13:02,950
那这个最终结果呀

264
00:13:02,950 --> 00:13:04,550
我们累加之后

265
00:13:04,550 --> 00:13:08,850
它应该呢是等于6000次的

266
00:13:11,360 --> 00:13:13,780
那这里呢，是 D 选项

267
00:13:13,780 --> 00:13:15,180
它的计算过程

268
00:13:15,180 --> 00:13:18,120
大家自己呢，可以累加一下试一试

269
00:13:18,120 --> 00:13:19,140
这是1200

270
00:13:19,140 --> 00:13:20,140
这是800

271
00:13:20,140 --> 00:13:24,010
然后呢，这里是等于2000的

272
00:13:24,010 --> 00:13:26,790
然后这里呢，是等于2000的

273
00:13:26,790 --> 00:13:28,950
所以最终的结果呀

274
00:13:28,950 --> 00:13:31,300
应该是等于6000次

275
00:13:31,300 --> 00:13:32,560
那谁最小

276
00:13:32,560 --> 00:13:34,480
显然6000最小吧

277
00:13:34,480 --> 00:13:38,280
所以它的最优解应该呢，是 D 选项

278
00:13:38,280 --> 00:13:40,920
那这是呢，利用动态规划法

279
00:13:40,920 --> 00:13:44,460
求矩阵乘法次数的求解过程

280
00:13:44,460 --> 00:13:47,650
那这一类啊，求解过程当中

281
00:13:47,650 --> 00:13:52,450
其实也可以先用贪心来查看他的，诶

282
00:13:52,450 --> 00:13:53,830
相对满意解

283
00:13:53,830 --> 00:13:56,860
再来呢，看他的这个最终结果

284
00:13:56,860 --> 00:13:59,160
我们在求解的过程当中啊

285
00:13:59,160 --> 00:14:00,280
我们会发现

286
00:14:00,280 --> 00:14:03,090
当最大维度藏在中间的时候

287
00:14:03,090 --> 00:14:05,350
是可以把这个维度消除掉

288
00:14:05,350 --> 00:14:07,100
防止后面再用的

289
00:14:07,100 --> 00:14:10,680
那如果这道题先算10×22

290
00:14:10,680 --> 00:14:12,690
乘以20×25的话

291
00:14:12,690 --> 00:14:15,600
其实是可以将20藏起来的

292
00:14:15,600 --> 00:14:17,620
但这道题又比较特殊

293
00:14:17,620 --> 00:14:18,380
在哪儿呢

294
00:14:18,380 --> 00:14:20,640
因为25藏不起来

295
00:14:20,640 --> 00:14:23,270
所以以这种方式来分析的时候

296
00:14:23,270 --> 00:14:25,950
很容易呢，让25多次相乘

297
00:14:25,950 --> 00:14:28,660
那我们把25放在一边

298
00:14:28,660 --> 00:14:31,090
先看其他维度的话

299
00:14:31,090 --> 00:14:34,670
哎，首先最大维度应该呢，是20

300
00:14:34,670 --> 00:14:37,620
但是它前面没有消除的地方

301
00:14:37,620 --> 00:14:41,300
所以我们首先消除的是15这个维度

302
00:14:41,300 --> 00:14:43,930
那 A 1乘 A 2

303
00:14:43,930 --> 00:14:47,540
我们可以呢，让15消除吧

304
00:14:47,540 --> 00:14:50,640
结果变成了20×4

305
00:14:50,640 --> 00:14:54,010
那接下来再比较大的维度是多少呢

306
00:14:54,010 --> 00:14:56,930
唉，是十较大可以消除

307
00:14:56,930 --> 00:15:00,420
所以 A 3乘以 A 4

308
00:15:00,770 --> 00:15:05,880
它所消除的结果变成了4×20

309
00:15:05,880 --> 00:15:07,640
那此时啊

310
00:15:07,640 --> 00:15:10,140
我们当前能够消除的最大维度

311
00:15:10,140 --> 00:15:11,660
应该是20了吧

312
00:15:11,660 --> 00:15:14,500
所以，唉，我们与 A 5相乘

313
00:15:14,500 --> 00:15:16,020
把 A 20呢

314
00:15:16,020 --> 00:15:18,420
唉，中间的20消除掉

315
00:15:18,420 --> 00:15:22,440
最终呢，再与前面的这一部分进行相乘

316
00:15:22,440 --> 00:15:24,320
从而呢，得到结果

317
00:15:24,320 --> 00:15:27,750
这也是呢，可以分析出最优方案的吧

318
00:15:27,750 --> 00:15:30,340
但是在这个分析的过程当中呢

319
00:15:30,340 --> 00:15:32,960
主要注意25是处理不了的

320
00:15:32,960 --> 00:15:36,240
所以呢，应该最后才去呢，考虑25

321
00:15:36,240 --> 00:15:37,420
把25呢

322
00:15:37,420 --> 00:15:39,140
诶，首先忽略掉了

323
00:15:39,140 --> 00:15:41,120
那这个计算过程当中啊

324
00:15:41,120 --> 00:15:43,420
注意呢，我们可以啊

325
00:15:43,420 --> 00:15:47,180
用贪心的策略来找到某一个

326
00:15:47,180 --> 00:15:49,000
满意或者最优解

327
00:15:49,000 --> 00:15:52,190
再通过一些动态调整的过程当中呢

328
00:15:52,190 --> 00:15:54,170
最终达到最优解

329
00:15:54,170 --> 00:15:56,160
为什么介绍这个过程呢

330
00:15:56,160 --> 00:15:59,180
因为如果在下午的案例题当中

331
00:15:59,180 --> 00:16:01,050
出现实例问题的话

332
00:16:01,050 --> 00:16:02,520
一般动态规划

333
00:16:02,520 --> 00:16:05,790
大家呢，很少能够递归的去代入计算

334
00:16:05,790 --> 00:16:06,990
那怎么办呢

335
00:16:06,990 --> 00:16:10,200
要么是凭经验去找最优方案

336
00:16:10,200 --> 00:16:13,350
要么呢，就是利用我们贪心的思维

337
00:16:13,350 --> 00:16:14,410
先去找呢

338
00:16:14,410 --> 00:16:16,630
一个相对满意的结果

339
00:16:16,630 --> 00:16:19,400
再来进行分析和调整

340
00:16:19,400 --> 00:16:22,030
直到呢，找到最优解为止

341
00:16:22,030 --> 00:16:24,130
如果说这种方案啊

342
00:16:24,130 --> 00:16:26,040
理解起来容易混淆的话

343
00:16:26,040 --> 00:16:28,180
也可以呢，把它放在一边

344
00:16:28,180 --> 00:16:29,280
这是一个呢

345
00:16:29,280 --> 00:16:32,750
诶，由较偏的思路来求解的过程

346
00:16:32,750 --> 00:16:35,560
那这些呢，就是要求大家掌握的

347
00:16:35,560 --> 00:16:37,840
关于动态规划法的部分
