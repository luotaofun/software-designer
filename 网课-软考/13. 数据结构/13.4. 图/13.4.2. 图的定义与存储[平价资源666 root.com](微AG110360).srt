1
00:00:00,000 --> 00:00:02,220
接下来我们来看一下图

2
00:00:02,220 --> 00:00:05,510
它是如何来定义和存储的

3
00:00:05,510 --> 00:00:09,290
那我们呢，包括图的存储和它的特性啊

4
00:00:09,290 --> 00:00:11,330
经常会结合起来考察

5
00:00:11,330 --> 00:00:14,020
大家针对图来看的话

6
00:00:14,020 --> 00:00:16,280
我们在前面介绍到，图呢

7
00:00:16,280 --> 00:00:18,240
它是一种逻辑结构

8
00:00:18,240 --> 00:00:19,780
那这种逻辑结构

9
00:00:19,780 --> 00:00:24,220
它是没有典型的这种层次关系和父子关系的

10
00:00:24,220 --> 00:00:25,260
相对来说

11
00:00:25,260 --> 00:00:28,540
图这种数据结构其实是最复杂的

12
00:00:28,540 --> 00:00:29,980
因为它的逻辑啊

13
00:00:29,980 --> 00:00:32,490
经常看起来无厘头、很乱

14
00:00:32,490 --> 00:00:34,880
那其中有一些特殊的图呢

15
00:00:34,880 --> 00:00:36,200
需要大家了解到

16
00:00:36,200 --> 00:00:38,810
首先呢，关于完全图

17
00:00:38,810 --> 00:00:40,630
什么是完全图呢

18
00:00:40,630 --> 00:00:44,270
唉，我们发现它分无向图和有向图的完全图

19
00:00:44,270 --> 00:00:47,380
那我们在图当中会看到啊

20
00:00:47,380 --> 00:00:51,940
它由节点和节点之间的连线来构成

21
00:00:51,940 --> 00:00:54,800
那我们一般把它叫做连接顶点

22
00:00:54,800 --> 00:00:56,700
或者单独呢，叫做顶点

23
00:00:56,700 --> 00:00:59,200
这里呢，叫做连接边

24
00:00:59,200 --> 00:01:01,380
那对于这种边而言

25
00:01:01,380 --> 00:01:03,100
如果没有箭头

26
00:01:03,100 --> 00:01:05,600
这种图示就叫无向图

27
00:01:05,600 --> 00:01:07,670
有箭头的情况下呢

28
00:01:07,670 --> 00:01:09,850
就叫做有向图

29
00:01:09,850 --> 00:01:12,170
那在无向图当中

30
00:01:12,170 --> 00:01:15,110
要求完全图的定义是

31
00:01:15,110 --> 00:01:19,150
任意两个顶点之间都存在一条边

32
00:01:19,150 --> 00:01:22,010
那一和二存在一条边

33
00:01:22,010 --> 00:01:24,130
意味着1~2有边

34
00:01:24,130 --> 00:01:26,140
2~1也有边

35
00:01:26,140 --> 00:01:29,510
所以无向图呢，它的完全图啊

36
00:01:29,510 --> 00:01:35,250
只要求每对顶点之间有一条边相连就可以了

37
00:01:35,250 --> 00:01:38,040
而在有向图当中呢

38
00:01:38,040 --> 00:01:40,730
由于箭头的区分

39
00:01:40,730 --> 00:01:43,760
1~2有一条箭头，哎

40
00:01:43,760 --> 00:01:45,440
或者叫做有向弧

41
00:01:45,440 --> 00:01:47,380
它还不够

42
00:01:47,530 --> 00:01:50,170
我们还需要呢

43
00:01:50,170 --> 00:01:54,430
2~1也存在一条呢，有向弧

44
00:01:54,430 --> 00:01:56,090
这种情况下呢

45
00:01:56,090 --> 00:01:59,670
唉，我们才叫这两个顶点之间啊

46
00:01:59,670 --> 00:02:02,870
是任意可以进行连接的

47
00:02:02,870 --> 00:02:05,160
那在有向图当中

48
00:02:05,160 --> 00:02:08,780
每个顶点每两个顶点之间啊

49
00:02:08,780 --> 00:02:12,370
都有两条有向边相互连接

50
00:02:12,370 --> 00:02:16,670
那这一种呢，就叫做有效的完全图

51
00:02:16,670 --> 00:02:18,620
那这是完全图的概念

52
00:02:18,620 --> 00:02:19,780
我们会发现啊

53
00:02:19,780 --> 00:02:22,190
在图这种结构当中

54
00:02:22,190 --> 00:02:28,150
完全图已经囊括了所有可能存在的边了

55
00:02:28,150 --> 00:02:31,150
最后再来看一下连通图

56
00:02:31,150 --> 00:02:33,630
连通图的定义呢，比较特殊

57
00:02:33,630 --> 00:02:37,780
它要求任意两个顶点之间都有一个呢

58
00:02:37,780 --> 00:02:39,180
路径连接

59
00:02:39,180 --> 00:02:41,000
那什么叫路径呢

60
00:02:41,000 --> 00:02:44,630
哎，比如说我们只有三个节点

61
00:02:44,630 --> 00:02:49,600
这种情况下，1~2是有边的吧

62
00:02:49,600 --> 00:02:52,380
然而1~3有没有边呢

63
00:02:52,380 --> 00:02:53,320
没有边

64
00:02:53,320 --> 00:02:57,220
但是我们说它可以通过二来到达

65
00:02:57,220 --> 00:03:01,340
所以1~3它是存在路径的

66
00:03:01,340 --> 00:03:03,060
那我们会发现，诶

67
00:03:03,060 --> 00:03:04,940
一二有边就有路径

68
00:03:04,940 --> 00:03:06,530
一三有路径

69
00:03:06,530 --> 00:03:08,990
二三有边也有路径吧

70
00:03:08,990 --> 00:03:14,030
这种情况下我们就称它为呢，唉，连通图

71
00:03:14,030 --> 00:03:17,050
那这就是呢，连通图的概念

72
00:03:17,050 --> 00:03:21,090
路径与边不是呢，完全一致的

73
00:03:21,090 --> 00:03:22,780
有边就有路径

74
00:03:22,780 --> 00:03:27,710
而通过其他节点相连的也叫做呢路径

75
00:03:27,710 --> 00:03:30,740
关于呢，完全图和连通图

76
00:03:30,740 --> 00:03:33,560
以及呢，图的一个基本形态

77
00:03:33,560 --> 00:03:35,510
大家呢了解一下

78
00:03:35,510 --> 00:03:39,300
接下来呢，我们来看一下这种图的结

79
00:03:39,300 --> 00:03:41,190
如何来存储呢

80
00:03:41,190 --> 00:03:44,450
我们说图当中它其实是有两个要素吧

81
00:03:44,450 --> 00:03:45,570
一个是节点

82
00:03:45,570 --> 00:03:46,530
一个是边

83
00:03:46,530 --> 00:03:48,960
那这个边可能是有向边

84
00:03:48,960 --> 00:03:50,940
可能呢是无相边

85
00:03:50,940 --> 00:03:53,780
那针对这样的两个元素

86
00:03:53,780 --> 00:03:56,540
我们可以用顺序存储的方式

87
00:03:56,540 --> 00:03:59,880
也就是邻接矩阵来进行存储

88
00:03:59,880 --> 00:04:02,270
它用矩阵来表示

89
00:04:02,270 --> 00:04:04,130
顶点与顶点之

90
00:04:04,130 --> 00:04:06,610
到底有没有边存在

91
00:04:06,610 --> 00:04:09,960
那我们的二维矩阵当中，诶

92
00:04:09,960 --> 00:04:12,690
它的阶就是顶点的个数

93
00:04:12,690 --> 00:04:16,230
那其中的每一个元素 IJ 呢

94
00:04:16,230 --> 00:04:22,880
下标表示的是 I 到 J 是否有连接边的情况

95
00:04:22,880 --> 00:04:24,540
如果有的话

96
00:04:24,540 --> 00:04:25,860
可以用一表示

97
00:04:25,860 --> 00:04:26,740
或者呢

98
00:04:26,740 --> 00:04:31,350
如果我们的边上面有数字表示全职的话

99
00:04:31,350 --> 00:04:34,730
也可以呢，把全职记录上去

100
00:04:34,730 --> 00:04:35,870
那这是呢

101
00:04:35,870 --> 00:04:39,210
关于 RIJ 它所表示的含义

102
00:04:39,210 --> 00:04:42,480
那如果说没有顶点存在

103
00:04:42,480 --> 00:04:45,480
我们一般呢，唉，如果没有边存在

104
00:04:45,480 --> 00:04:48,720
我们一般呢用零来进行表示

105
00:04:48,720 --> 00:04:53,350
那这种啊，看到零和非零元素的这种呢

106
00:04:53,350 --> 00:04:56,680
一般是我们的无向图

107
00:04:56,680 --> 00:04:58,060
用这种形式

108
00:04:58,060 --> 00:05:01,100
如果是有向图的话

109
00:05:02,110 --> 00:05:05,750
我们在不存在邻接边的情况下

110
00:05:05,750 --> 00:05:08,050
一般呢用无穷大来表示啊

111
00:05:08,050 --> 00:05:11,120
会有呢这样的一些表示情况

112
00:05:11,120 --> 00:05:13,420
那针对临接矩阵啊

113
00:05:13,420 --> 00:05:14,880
我们会发

114
00:05:14,880 --> 00:05:18,080
在有向图和无向图的邻接矩阵

115
00:05:18,080 --> 00:05:19,420
进行对比的时候

116
00:05:19,420 --> 00:05:20,700
我们会发现呢

117
00:05:20,700 --> 00:05:22,500
诶，针对无向图

118
00:05:22,500 --> 00:05:25,160
1~2存在一条边

119
00:05:25,160 --> 00:05:29,350
那么2~1必定也有边的存在吧

120
00:05:29,350 --> 00:05:31,260
因为它是无向图

121
00:05:31,260 --> 00:05:35,160
它的这个连接边连接的是两个顶点

122
00:05:35,160 --> 00:05:38,300
双向都是能表示连通的

123
00:05:38,300 --> 00:05:40,650
那有了这种关系之后

124
00:05:40,650 --> 00:05:41,690
我们会发现

125
00:05:41,690 --> 00:05:43,370
诶，3~2有边

126
00:05:43,370 --> 00:05:45,900
2~3肯定也有编吧

127
00:05:45,900 --> 00:05:50,810
这种情况下，它会形成一个呢对称的矩阵

128
00:05:50,810 --> 00:05:52,530
所以我们会知道呢

129
00:05:52,530 --> 00:05:55,950
哎，如果是对称矩阵的话

130
00:05:58,800 --> 00:06:03,160
它可能是无向图

131
00:06:05,860 --> 00:06:08,480
有没有可能是有向图呢

132
00:06:08,480 --> 00:06:11,680
诶，无向图肯定是对称的邻接矩阵啊

133
00:06:11,680 --> 00:06:13,180
那有向图的话

134
00:06:13,180 --> 00:06:15,250
它可以不对称啊

135
00:06:15,250 --> 00:06:19,760
并且呢，如果它是完全有向图的话

136
00:06:19,760 --> 00:06:21,710
它也是对称的

137
00:06:21,710 --> 00:06:24,800
如果这里用有向图来表示

138
00:06:24,800 --> 00:06:26,180
1~2有边

139
00:06:26,180 --> 00:06:27,900
2~1也有边

140
00:06:27,900 --> 00:06:29,420
这种情况下呢

141
00:06:29,420 --> 00:06:32,660
它同样可以满足对称的形态

142
00:06:32,660 --> 00:06:36,170
所以有向图它在呢

143
00:06:36,170 --> 00:06:37,930
完全图的情况下

144
00:06:37,930 --> 00:06:40,110
它也是呢对称的

145
00:06:40,110 --> 00:06:43,000
这是它的形态的特点啊

146
00:06:43,000 --> 00:06:46,850
有向图，普通的这种有向图

147
00:06:46,850 --> 00:06:49,510
它一般呢，是不对称的

148
00:06:49,510 --> 00:06:53,370
一定呢，要区分对称和不不对称啊

149
00:06:53,370 --> 00:06:55,830
它所出现的具体情况

150
00:06:55,830 --> 00:06:56,900
有时候呢

151
00:06:56,900 --> 00:06:59,180
诶，一方面是给大家一个图

152
00:06:59,180 --> 00:07:01,800
让大家判断这个图有什么特点

153
00:07:01,800 --> 00:07:05,360
另一方面呢，会可能出现这样的考察

154
00:07:05,360 --> 00:07:06,240
告诉大

155
00:07:06,240 --> 00:07:08,300
这是一个有向图或者无向图

156
00:07:08,300 --> 00:07:11,340
让大家判断呢，以下说法是否正确

157
00:07:11,340 --> 00:07:12,470
那注意呢

158
00:07:12,470 --> 00:07:14,250
唉，我们的无向图

159
00:07:14,250 --> 00:07:16,830
它的邻接矩阵一定是对称的

160
00:07:16,830 --> 00:07:22,610
但反过来，对称的邻接矩阵不一定是无向图

161
00:07:22,610 --> 00:07:24,930
这里呢，要注意区分一下

162
00:07:24,930 --> 00:07:28,190
它有呢，两种可能性的存在

163
00:07:28,190 --> 00:07:32,600
那这是呢，关于邻接矩阵存储的情况

164
00:07:32,600 --> 00:07:35,370
那我们除了用矩阵存储的话

165
00:07:35,370 --> 00:07:38,010
还可以用链式来存储

166
00:07:38,010 --> 00:07:39,090
哎，就是呢

167
00:07:39,090 --> 00:07:42,850
连接表链式存储的过程当中呢

168
00:07:42,850 --> 00:07:46,880
同样我们要表示它的边和它的顶点吧

169
00:07:46,880 --> 00:07:50,000
我们用一个呢，头节点的数

170
00:07:50,000 --> 00:07:52,300
来记录所有的顶点

171
00:07:52,300 --> 00:07:54,580
那这里有12345678

172
00:07:54,580 --> 00:07:56,620
那我们把1234567

173
00:07:56,620 --> 00:07:58,990
全部呢，顶点标出来

174
00:07:58,990 --> 00:08:02,330
那接下来关于边的记录

175
00:08:02,330 --> 00:08:03,910
我们会发现呢，哎

176
00:08:03,910 --> 00:08:06,370
与 V 1相关的边有哪些呀

177
00:08:06,370 --> 00:08:09,010
有246吧

178
00:08:09,170 --> 00:08:11,030
那我们可以呢

179
00:08:11,030 --> 00:08:15,610
在这个头节点后面增加相关的节点

180
00:08:15,610 --> 00:08:20,480
那这个表节点的个数就是与 V 1相关的

181
00:08:20,480 --> 00:08:22,280
连接边的个数吧

182
00:08:22,280 --> 00:08:25,730
这就是它连接顶点这样的一个关系

183
00:08:25,730 --> 00:08:29,270
那我们把这种表叫做呢临接表

184
00:08:29,270 --> 00:08:32,480
如果后面没有其他节点呢

185
00:08:32,480 --> 00:08:34,080
唉，用这种表示呢

186
00:08:34,080 --> 00:08:36,090
空表示结束

187
00:08:36,090 --> 00:08:40,240
那二、四、六的顺序有没有必要诶

188
00:08:40,240 --> 00:08:42,380
去纠结谁先谁后啊

189
00:08:42,380 --> 00:08:44,550
其实都一样

190
00:08:44,550 --> 00:08:48,300
那我们一般呢会按顺序来进行记录

191
00:08:48,300 --> 00:08:51,920
那这种情况如果先写四再写二

192
00:08:51,920 --> 00:08:54,790
它也是合法的邻接表

193
00:08:54,790 --> 00:08:55,980
注意一下呢

194
00:08:55,980 --> 00:08:59,660
这是它的邻接表的表示形式

195
00:08:59,660 --> 00:09:01,740
我们一般无向

196
00:09:01,740 --> 00:09:04,200
用邻接矩阵表示的多一些

197
00:09:04,200 --> 00:09:08,180
有向图呢，用邻接表表示的多一些

198
00:09:08,180 --> 00:09:12,930
如果用 N 来表示顶点个数

199
00:09:15,540 --> 00:09:19,660
E 来表示邻接边的个数

200
00:09:25,460 --> 00:09:28,920
那么我们在临接矩阵当中

201
00:09:28,920 --> 00:09:32,470
会看到它的这个邻接矩阵啊

202
00:09:32,470 --> 00:09:35,960
一定呢，是 N 乘以 N 的二维矩阵吧

203
00:09:35,960 --> 00:09:39,510
那在 N 乘以 N 的二维矩阵当中

204
00:09:39,510 --> 00:09:44,380
唉，我们的有向图非零元素有亿个

205
00:09:44,380 --> 00:09:46,260
表示连接边吧

206
00:09:46,260 --> 00:09:49,100
如果是无向图诶

207
00:09:49,100 --> 00:09:50,340
它有多少个呢

208
00:09:50,340 --> 00:09:51,600
大家想一想

209
00:09:51,600 --> 00:09:54,780
无向图一条边会记录两次

210
00:09:54,780 --> 00:09:58,720
所以非零元素有2亿个

211
00:10:01,440 --> 00:10:04,900
其实表示就是他编的个数吧

212
00:10:04,900 --> 00:10:08,370
只是呢，无向图记录了两次

213
00:10:08,370 --> 00:10:11,610
那如果是邻接表的话

214
00:10:12,650 --> 00:10:14,170
啊啊

215
00:10:27,160 --> 00:10:31,580
邻接表它的表头有多少个节点呢

216
00:10:31,580 --> 00:10:34,120
应该是顶点数

217
00:10:37,240 --> 00:10:42,640
那对于它的这个表节点有多少个呢

218
00:10:44,260 --> 00:10:46,940
就是它边的个数吧

219
00:10:46,940 --> 00:10:51,010
同样有向图的话只有一个节点

220
00:10:51,010 --> 00:10:55,010
而无向图的话会有呢，2亿个节点

221
00:10:55,010 --> 00:10:58,600
因为它的边也会呢记录两次

222
00:10:58,600 --> 00:11:00,350
这是顶点个数

223
00:11:00,350 --> 00:11:01,710
连接边的个数

224
00:11:01,710 --> 00:11:05,930
与我们存储结构相应的一个呢对应关系

225
00:11:05,930 --> 00:11:09,980
这是呢，关于我们图它的存储

226
00:11:09,980 --> 00:11:13,600
包括呢，我们前面讲到的定义

227
00:11:14,090 --> 00:11:17,370
下面我们来看一下这一部分

228
00:11:17,370 --> 00:11:20,950
在软件设计师考试真题当中的体现

229
00:11:20,950 --> 00:11:23,990
以下关于无向图，诶

230
00:11:23,990 --> 00:11:27,020
无向连通图基的说法当中

231
00:11:27,020 --> 00:11:29,160
不正确的是什么

232
00:11:29,160 --> 00:11:34,660
注意，我们找的是无相连通图错误的说法

233
00:11:34,660 --> 00:11:39,380
那我们说连通图指的是任意两个顶点之间

234
00:11:39,380 --> 00:11:42,660
应该是存在路径就可以了吧

235
00:11:42,660 --> 00:11:44,690
是否需要存在编啊

236
00:11:44,690 --> 00:11:45,710
不需要

237
00:11:45,710 --> 00:11:48,980
所以 A 的说法呢，就是错误的

238
00:11:48,980 --> 00:11:51,600
而我们 C 选项当中呢

239
00:11:51,600 --> 00:11:53,720
唉，从 G 当中

240
00:11:53,720 --> 00:11:56,610
从图击中任意顶点出发

241
00:11:56,610 --> 00:11:59,620
可以呢遍历图中所有的顶点

242
00:11:59,620 --> 00:12:02,770
那存在路径就是呢，可便利的

243
00:12:02,770 --> 00:12:05,340
所以这种说法呢，是正确的

244
00:12:05,340 --> 00:12:07,780
由于这是一个无向图

245
00:12:07,780 --> 00:12:09,920
所以它的邻接矩阵

246
00:12:09,920 --> 00:12:12,200
唉，是不是一定对称啊

247
00:12:12,200 --> 00:12:14,840
这个说法呢，也是正确的

248
00:12:14,840 --> 00:12:18,110
只有 A 选项的说法是错误的

249
00:12:18,110 --> 00:12:22,170
这是呢，对无向连通图定义的考察

250
00:12:22,170 --> 00:12:24,350
还结合了存储吧

251
00:12:24,350 --> 00:12:26,380
再来看下面这道题

252
00:12:26,380 --> 00:12:30,190
对，如下所示的有向图来看

253
00:12:30,190 --> 00:12:34,710
它的邻接矩阵应该是 A 几乘几的

254
00:12:34,710 --> 00:12:36,990
那第一问涉及到几乘

255
00:12:36,990 --> 00:12:38,610
是顶点个数吧

256
00:12:38,610 --> 00:12:40,300
一共有五个顶

257
00:12:40,300 --> 00:12:41,280
一、二、三、四、五

258
00:12:41,280 --> 00:12:45,170
所以它是5×5的邻接矩阵

259
00:12:45,170 --> 00:12:48,890
那如果采用邻接表来存储的时候

260
00:12:48,890 --> 00:12:53,330
顶点一它的表节点个数有两个

261
00:12:53,330 --> 00:12:55,530
这是它的临界边相关的吧

262
00:12:55,530 --> 00:12:59,880
顶点五它没有具体的节点指向了

263
00:12:59,880 --> 00:13:01,160
所以它没有呢

264
00:13:01,160 --> 00:13:03,120
表节点个数为零

265
00:13:03,120 --> 00:13:06,170
那顶点二和三来看的话

266
00:13:06,170 --> 00:13:09,260
顶点二有两个连接，唉

267
00:13:09,260 --> 00:13:10,820
连接边的出现吧

268
00:13:10,820 --> 00:13:12,680
所以它的顶点个数呢

269
00:13:12,680 --> 00:13:15,650
应该是两个表节点

270
00:13:15,650 --> 00:13:18,420
那顶点三它有呢

271
00:13:18,420 --> 00:13:21,220
唉，两个有向弧的出现

272
00:13:21,220 --> 00:13:22,910
也就是它的连接边

273
00:13:22,910 --> 00:13:25,560
所以它的表节点个数呢

274
00:13:25,560 --> 00:13:28,730
诶，表示它的连接顶点也有两个

275
00:13:28,730 --> 00:13:31,160
那这种情况我们就发现呢

276
00:13:31,160 --> 00:13:35,670
唉，二和三表节点的个数分别是二和二

277
00:13:35,670 --> 00:13:37,940
那表节点

278
00:13:39,660 --> 00:13:45,040
节点的序号其实就是它的连接顶点吧

279
00:13:45,040 --> 00:13:48,760
就是它箭头指向的邻接顶点

280
00:13:48,760 --> 00:13:54,720
那它的本质含义其实就是邻接边的个数

281
00:13:54,720 --> 00:13:58,550
当前顶点与连接顶点连起来

282
00:13:58,550 --> 00:14:01,200
我们一般呢，把这个叫做连接边

283
00:14:01,200 --> 00:14:04,440
其实提到的连接顶点就是顶点

284
00:14:04,440 --> 00:14:06,470
连接边呢，就是边

285
00:14:06,470 --> 00:14:08,270
在有向图当中

286
00:14:08,270 --> 00:14:10,480
它指的是有向弧

287
00:14:10,480 --> 00:14:14,650
区分一下有向弧它是有方向的啊

288
00:14:14,650 --> 00:14:16,360
没有方向的情况下

289
00:14:16,360 --> 00:14:17,440
我们在这里

290
00:14:17,440 --> 00:14:20,420
五是没有任何箭头可以指向别人的

291
00:14:20,420 --> 00:14:23,990
所以没有以它出发的临界边了

292
00:14:23,990 --> 00:14:27,050
它的表节点个数呢才是零

293
00:14:27,050 --> 00:14:31,110
这道题啊，是对有向图存储的考察

294
00:14:31,110 --> 00:14:36,160
包括连接表和邻接矩阵的两种存储形式

295
00:14:36,160 --> 00:14:37,730
来考察大家

296
00:14:37,730 --> 00:14:40,540
那这是呢，要求大家掌握的

297
00:14:40,540 --> 00:14:44,540
关于图的定义和存储相关的内容
