1
00:00:00,000 --> 00:00:03,780
下面我们再来看一下关于数的操作

2
00:00:03,780 --> 00:00:06,560
那我们针对数的操作来看的话

3
00:00:06,560 --> 00:00:09,100
主要呢，就是它的便利操作

4
00:00:09,100 --> 00:00:10,280
所谓便利啊

5
00:00:10,280 --> 00:00:13,410
就是从树的某一个节点出发

6
00:00:13,410 --> 00:00:16,810
然后呢，对每一个节点来进行访问

7
00:00:16,810 --> 00:00:20,230
并且只访问一次这样的一个过程

8
00:00:20,230 --> 00:00:22,920
那他访问是有一定逻辑的

9
00:00:22,920 --> 00:00:24,260
我们在这里呢

10
00:00:24,260 --> 00:00:26,600
对于二叉树的遍历啊

11
00:00:26,600 --> 00:00:29,800
主要呢，涉及到四种遍历顺序

12
00:00:29,800 --> 00:00:32,830
第一种呢，是前序遍历的序列

13
00:00:32,830 --> 00:00:34,170
第二种是中序

14
00:00:34,170 --> 00:00:35,670
第三种是后续

15
00:00:35,670 --> 00:00:38,550
以及呢，第四种层次便利

16
00:00:38,550 --> 00:00:41,280
那我们一棵二叉树的话

17
00:00:41,280 --> 00:00:44,510
从根开始，它的层次是一吧

18
00:00:44,510 --> 00:00:45,810
然后呢，哎

19
00:00:45,810 --> 00:00:47,050
自上而下

20
00:00:47,050 --> 00:00:49,860
它的层次会依次递增

21
00:00:49,860 --> 00:00:51,590
我们先看层次

22
00:00:51,590 --> 00:00:54,290
建层次遍历它比较简单

23
00:00:54,290 --> 00:00:57,890
它是呢，从每一层自上而下

24
00:00:57,890 --> 00:01:01,570
从左往右将所有的节点访问一遍

25
00:01:01,570 --> 00:01:04,840
那这里的话，首先访问第一层

26
00:01:04,840 --> 00:01:09,440
然后第二层、第三层、第四层、第五层

27
00:01:09,440 --> 00:01:11,000
那我们在这里呢

28
00:01:11,000 --> 00:01:13,700
所涉及到的层次遍历的序

29
00:01:13,700 --> 00:01:14,660
就是呢

30
00:01:14,660 --> 00:01:17,220
唉，一、二、三、四、五、六、七

31
00:01:19,700 --> 00:01:24,310
这是它的层次遍历的结果

32
00:01:24,310 --> 00:01:27,570
那前序、中序和后序遍历啊

33
00:01:27,570 --> 00:01:28,830
它是一个呢

34
00:01:28,830 --> 00:01:31,620
能够递归实现的过程

35
00:01:31,620 --> 00:01:36,250
前中后它指的是根的位置

36
00:01:36,250 --> 00:01:39,400
那我们说针对一棵二叉树来看

37
00:01:39,400 --> 00:01:41,420
它只有，唉

38
00:01:41,420 --> 00:01:43,660
没有子树的情况

39
00:01:43,660 --> 00:01:45,620
只有一棵子树的情况

40
00:01:45,620 --> 00:01:48,350
以及两棵子树的情况吧

41
00:01:48,350 --> 00:01:51,560
所以针对一棵二叉树来看

42
00:01:51,560 --> 00:01:57,040
它的左和右的区分是非常重要的

43
00:01:57,300 --> 00:02:00,940
那放在左右不同的位置上

44
00:02:00,940 --> 00:02:02,120
那我们在这里呢

45
00:02:02,120 --> 00:02:04,320
会形成不同的序列

46
00:02:04,320 --> 00:02:06,280
那我们整棵树啊

47
00:02:06,280 --> 00:02:10,840
大致可以划分成根以及左子树

48
00:02:10,840 --> 00:02:12,250
右子树不分

49
00:02:12,250 --> 00:02:15,150
根据我们逻辑思维来看的话

50
00:02:15,150 --> 00:02:17,910
左右它是一个顺序过程吧

51
00:02:17,910 --> 00:02:23,030
现在区别的只是根的作用跟它的位置

52
00:02:23,030 --> 00:02:24,640
根在前面

53
00:02:24,640 --> 00:02:28,020
我们把这个序列呢，叫做前序序列

54
00:02:28,020 --> 00:02:31,980
那它遍历的顺序就是先访问根

55
00:02:31,980 --> 00:02:34,220
再访问左子树

56
00:02:34,220 --> 00:02:36,890
接着访问右子树

57
00:02:36,890 --> 00:02:38,900
那我们以这棵树来看

58
00:02:38,900 --> 00:02:41,980
首先整棵树的根节点是谁呢

59
00:02:41,980 --> 00:02:44,120
哎，应该是节点一

60
00:02:44,120 --> 00:02:49,550
接下来我们要访问左子树和右子树部分吧

61
00:02:49,550 --> 00:02:53,580
那它的左子树，诶，又是一棵树

62
00:02:53,580 --> 00:02:55,930
右子树也是一棵树

63
00:02:55,930 --> 00:03:00,010
那我们接下来去做的就是针对这棵树

64
00:03:00,010 --> 00:03:02,490
接着来进行便利

65
00:03:02,490 --> 00:03:05,810
同样呢，按照前序的序列

66
00:03:05,810 --> 00:03:10,340
那对于左侧的 L 1这棵树来看的话

67
00:03:10,340 --> 00:03:12,280
它的根是谁呢

68
00:03:12,280 --> 00:03:14,880
哎，它的根是二

69
00:03:14,930 --> 00:03:19,030
然后接下来访问它的左子树

70
00:03:19,030 --> 00:03:21,430
唉，也就是4号节点

71
00:03:21,430 --> 00:03:24,430
那它的柚子树，这棵树

72
00:03:24,430 --> 00:03:25,910
诶，还没有找到吧

73
00:03:25,910 --> 00:03:28,540
那这是呢，另外一棵树了

74
00:03:28,540 --> 00:03:32,810
那针对我们的 R 1这棵树来看的话

75
00:03:32,810 --> 00:03:36,310
它的根是3号节点吧

76
00:03:36,310 --> 00:03:38,190
那有没有左子树

77
00:03:38,190 --> 00:03:38,930
没有

78
00:03:38,930 --> 00:03:39,830
那我们呢

79
00:03:39,830 --> 00:03:41,630
左子树是空的

80
00:03:41,630 --> 00:03:43,690
右子树是六

81
00:03:43,690 --> 00:03:47,390
那这是我们呢，在下一个层次遍历到的内容吧

82
00:03:47,390 --> 00:03:48,740
然后呢，唉

83
00:03:48,740 --> 00:03:51,040
R 2这棵柚子树

84
00:03:51,040 --> 00:03:53,940
我们接着对它来进行便利

85
00:03:53,940 --> 00:03:58,590
它的根是我们的5号节点，节点五

86
00:03:58,590 --> 00:04:01,730
左子树是一棵树

87
00:04:01,970 --> 00:04:04,330
柚子数是为空的

88
00:04:04,330 --> 00:04:07,250
所以这是呢，哎 L 2

89
00:04:07,950 --> 00:04:09,810
L 2找到之后

90
00:04:09,810 --> 00:04:12,530
对 L 2接着进行遍历

91
00:04:12,530 --> 00:04:14,550
哎，它的根是七

92
00:04:14,550 --> 00:04:16,200
左子树是空

93
00:04:16,200 --> 00:04:18,149
柚子数是八

94
00:04:18,149 --> 00:04:21,269
那我们在进行遍历的过程当中

95
00:04:21,269 --> 00:04:23,810
首先访问的是序号一

96
00:04:23,810 --> 00:04:26,480
然后访问的是左子树

97
00:04:26,480 --> 00:04:29,680
那左子树要进行递归的便利

98
00:04:29,680 --> 00:04:31,940
也可以用非递归实现啊

99
00:04:31,940 --> 00:04:33,650
但是从逻辑上来看

100
00:04:33,650 --> 00:04:35,630
它是呢重复递归的

101
00:04:35,630 --> 00:04:37,440
重复便秘的过程

102
00:04:37,440 --> 00:04:39,660
那 L 1访问，哎

103
00:04:39,660 --> 00:04:42,060
我们的节点二、节点四

104
00:04:42,060 --> 00:04:45,300
下面是一个 R 2，诶，柚子树

105
00:04:45,300 --> 00:04:47,920
接着对这棵子树进行遍历

106
00:04:47,920 --> 00:04:51,010
找到的是节点五和一个子树

107
00:04:51,010 --> 00:04:55,590
那这个指数接着遍历的结果是七和八的序列

108
00:04:55,590 --> 00:04:58,000
全部访问完了，哎

109
00:04:58,000 --> 00:05:01,420
访问返回上一层节点

110
00:05:01,420 --> 00:05:02,870
返回之后

111
00:05:02,870 --> 00:05:06,250
我们接下来找到的是柚子树部分

112
00:05:06,250 --> 00:05:09,540
对柚子树 R 1来进行遍历

113
00:05:09,540 --> 00:05:11,950
序列呢是三和六

114
00:05:11,950 --> 00:05:15,740
所以最终前序遍历的结

115
00:05:15,740 --> 00:05:18,060
它应该是

116
00:05:20,420 --> 00:05:26,660
12457836

117
00:05:29,140 --> 00:05:31,540
那这是前序遍历

118
00:05:31,540 --> 00:05:34,520
它也叫做呢先序遍历

119
00:05:34,520 --> 00:05:38,100
它指的就是跟左右的顺序

120
00:05:38,100 --> 00:05:40,710
那我们再来看中序遍历

121
00:05:40,710 --> 00:05:45,570
它的过程呢，是将根放在我们的中间

122
00:05:45,570 --> 00:05:48,570
所以是左子树根

123
00:05:48,570 --> 00:05:52,380
然后右子树的顺序来进行访问

124
00:05:52,380 --> 00:05:53,520
那我们呢

125
00:05:53,520 --> 00:05:56,200
唉，再来以这棵树看一下

126
00:05:56,200 --> 00:05:58,520
我们的遍历序

127
00:05:58,520 --> 00:06:01,560
是左跟右的顺序吧

128
00:06:01,560 --> 00:06:06,420
所以接下来先访问左子树 L 1

129
00:06:06,930 --> 00:06:11,250
然后跟一以及柚子数不分

130
00:06:11,250 --> 00:06:14,440
那对 L 1的话就是一棵子树

131
00:06:14,440 --> 00:06:17,540
所以接着要对这棵树进行便利

132
00:06:17,540 --> 00:06:20,130
同样是，诶，左跟右吧

133
00:06:20,130 --> 00:06:22,210
那左侧是序号

134
00:06:22,210 --> 00:06:24,020
四根是二

135
00:06:24,020 --> 00:06:26,540
右侧是一棵子树

136
00:06:26,540 --> 00:06:28,140
哎，我们前面写 L 1

137
00:06:28,140 --> 00:06:29,700
后面写 L 2

138
00:06:29,700 --> 00:06:32,740
那针对这个 R 1、 R 2啊

139
00:06:32,740 --> 00:06:34,880
针对 R 2再来看的话

140
00:06:34,880 --> 00:06:39,560
哎，这一棵子树同样呢，先看左子树

141
00:06:40,080 --> 00:06:42,800
根以及柚子树

142
00:06:42,800 --> 00:06:47,050
那左子树 L 2的话，对它进行遍历

143
00:06:47,050 --> 00:06:49,530
左侧节点是空的

144
00:06:49,530 --> 00:06:51,020
根是七

145
00:06:51,020 --> 00:06:53,230
右侧节点是八

146
00:06:53,230 --> 00:06:55,570
那整棵树遍历完了吧

147
00:06:55,570 --> 00:06:57,890
然后返回找到根

148
00:06:57,890 --> 00:07:00,680
再对柚子树进行遍历

149
00:07:00,680 --> 00:07:04,000
同样是左跟右

150
00:07:04,000 --> 00:07:08,040
那我们以这种上尖角符号表示空啊

151
00:07:08,040 --> 00:07:10,130
就是说节点不存在

152
00:07:10,130 --> 00:07:13,590
那我们这里的遍历序列的结果就是呢

153
00:07:13,590 --> 00:07:19,960
唉，四、二、七、八、五、一、三、六

154
00:07:20,050 --> 00:07:23,510
这是呢，中序遍历的结果

155
00:07:23,510 --> 00:07:26,350
那中序找到了之后

156
00:07:26,350 --> 00:07:30,710
最后呢，还有一种遍历顺序叫做后序遍历

157
00:07:30,710 --> 00:07:32,250
后续遍历呢

158
00:07:32,250 --> 00:07:35,740
唉，同样后指的是根的位置

159
00:07:35,740 --> 00:07:38,530
那将根放在左右之后

160
00:07:38,530 --> 00:07:40,290
那它的序列就是呢

161
00:07:40,290 --> 00:07:42,930
左子树、右子树根的顺

162
00:07:42,930 --> 00:07:44,560
来进行编辑了

163
00:07:44,560 --> 00:07:46,260
那我们刚刚呢

164
00:07:46,260 --> 00:07:48,140
以拓展的方式来写

165
00:07:48,140 --> 00:07:50,760
有些同学呢，可能找不到先后顺序

166
00:07:50,760 --> 00:07:51,940
我们现在呢

167
00:07:51,940 --> 00:07:53,400
以括号的形

168
00:07:53,400 --> 00:07:56,520
再来呢，给大家写一次后续遍历

169
00:07:56,520 --> 00:07:59,360
那后续遍历它是呢

170
00:07:59,360 --> 00:08:04,310
唉，左子树、柚子树以及根的顺序吧

171
00:08:04,310 --> 00:08:05,790
根是一

172
00:08:05,790 --> 00:08:08,800
那左子树对它进行展开

173
00:08:08,800 --> 00:08:12,220
左子树的左右

174
00:08:12,280 --> 00:08:15,540
然后柚子树 R 1，哎

175
00:08:15,540 --> 00:08:18,680
我们也可以对它写成左右跟

176
00:08:18,680 --> 00:08:23,990
那这个地方应该是六三杠一

177
00:08:23,990 --> 00:08:27,840
那我们接着对 R 2的子数进行展开

178
00:08:27,840 --> 00:08:30,680
那它的序列就变成了四诶

179
00:08:30,680 --> 00:08:31,980
右子数里面

180
00:08:31,980 --> 00:08:33,020
左

181
00:08:34,700 --> 00:08:35,900
又

182
00:08:36,580 --> 00:08:37,860
跟

183
00:08:39,740 --> 00:08:43,809
然后，唉，后面的序列631不变

184
00:08:43,809 --> 00:08:46,830
那 L 2再对它进行展开

185
00:08:46,830 --> 00:08:49,910
还是呢，后续遍历把它写成了

186
00:08:49,910 --> 00:08:51,550
诶，左跟右的顺序

187
00:08:51,550 --> 00:08:53,450
那左侧是空的啊

188
00:08:53,450 --> 00:08:54,550
左右跟的顺序

189
00:08:54,550 --> 00:08:55,990
左侧是空的

190
00:08:55,990 --> 00:08:58,810
右侧是八，根是七

191
00:08:58,810 --> 00:09:01,450
然后接着是一个空

192
00:09:01,450 --> 00:09:02,850
以及呢，哎

193
00:09:02,850 --> 00:09:07,210
跟五、跟二以及631

194
00:09:07,210 --> 00:09:08,390
这就是呢

195
00:09:08,390 --> 00:09:11,310
唉，我们后续的遍历序列

196
00:09:11,310 --> 00:09:13,550
将我们的数啊

197
00:09:13,550 --> 00:09:16,810
把它呢依次的以括号的形式展开

198
00:09:16,810 --> 00:09:18,710
位置呢，保持不变

199
00:09:18,710 --> 00:09:19,970
可以得到呢

200
00:09:19,970 --> 00:09:23,680
比较明确的这种不容易混淆的序列

201
00:09:23,680 --> 00:09:30,660
后序遍历的序列应该是四、八、七、五、二、631

202
00:09:31,790 --> 00:09:34,670
那这是我们呢，给大家讲到的

203
00:09:34,670 --> 00:09:39,940
先序、中序、后序以及层次遍历的序列便利

204
00:09:39,940 --> 00:09:43,810
是要求大家一定要掌握的啊

205
00:09:43,810 --> 00:09:46,150
那我们在考试当中啊

206
00:09:46,150 --> 00:09:49,450
可能会涉及到遍历序列的考察

207
00:09:49,450 --> 00:09:51,530
还有可能涉及到呢

208
00:09:51,530 --> 00:09:57,390
根据先序与中序或者后序与中序结合来，哎

209
00:09:57,390 --> 00:10:00,490
判断它的反向构造的过程

210
00:10:00,490 --> 00:10:02,270
那我们下面呢，唉

211
00:10:02,270 --> 00:10:04,620
来看一下反向构造

212
00:10:04,620 --> 00:10:05,950
反向构造啊

213
00:10:05,950 --> 00:10:08,750
它一般是少不了中序遍历的

214
00:10:08,750 --> 00:10:10,410
因为中序的序列

215
00:10:10,410 --> 00:10:12,270
它能够明确地划分

216
00:10:12,270 --> 00:10:14,990
左侧的指数和右侧的子数

217
00:10:14,990 --> 00:10:16,480
那我们看到呢

218
00:10:16,480 --> 00:10:20,100
由前序的序列和中序的序列

219
00:10:20,100 --> 00:10:23,700
我们可以反向把这棵树呢进行还原

220
00:10:23,700 --> 00:10:27,290
那还原的这棵树有什么样的一些特点

221
00:10:27,290 --> 00:10:29,100
它的另一个序列

222
00:10:29,100 --> 00:10:32,380
我们都可以根据反向构造的结果

223
00:10:32,380 --> 00:10:34,250
来进行判断吧

224
00:10:34,250 --> 00:10:37,250
所以反向构造的过程掌握了

225
00:10:37,250 --> 00:10:39,230
那它的延展性的题型呢

226
00:10:39,230 --> 00:10:42,270
大家基本上也都能能够掌握了

227
00:10:42,270 --> 00:10:45,250
那我们来看一下反向构造诶

228
00:10:45,250 --> 00:10:49,130
首先，先序遍历当中第一个字符

229
00:10:49,130 --> 00:10:51,580
它是整棵树的根吧

230
00:10:51,580 --> 00:10:54,530
所以我们在这里其实能够看到呢

231
00:10:54,530 --> 00:10:57,020
AA 是整棵树的根

232
00:10:57,020 --> 00:11:00,410
而中序遍历以 A 来划分的话

233
00:11:00,410 --> 00:11:02,850
这是左侧指数的序列

234
00:11:02,850 --> 00:11:05,430
这是右侧指数的序列

235
00:11:05,430 --> 00:11:09,910
所以我们可以把它呢换成两个部分

236
00:11:09,910 --> 00:11:12,790
h 、 b 、 e 、 d 、 f 

237
00:11:13,240 --> 00:11:15,640
以及呢， G 、 C 

238
00:11:16,340 --> 00:11:19,100
那我们说整个便利的过程

239
00:11:19,100 --> 00:11:21,270
它其实是一个递归的过程吧

240
00:11:21,270 --> 00:11:23,540
下面仍然是一个呢

241
00:11:23,540 --> 00:11:26,620
满足遍历序列的一个呢数

242
00:11:26,620 --> 00:11:29,590
那针对下面这棵树来看的话

243
00:11:29,590 --> 00:11:33,710
这是这下面这棵树它的先序遍历吧

244
00:11:33,710 --> 00:11:37,610
那这个先序遍历说明这棵树的根是谁啊

245
00:11:37,610 --> 00:11:39,350
是 B 节点

246
00:11:39,350 --> 00:11:43,290
以 B 节点在中序序列来划分的话

247
00:11:43,290 --> 00:11:45,790
它的左侧是 H 

248
00:11:45,790 --> 00:11:49,010
右侧是 E 、 D 、 F 

249
00:11:50,100 --> 00:11:53,980
而根据后面的 G 、 C 来看的话

250
00:11:53,980 --> 00:11:55,000
谁是根啊

251
00:11:55,000 --> 00:11:56,750
C 是它的根

252
00:11:56,750 --> 00:12:02,060
那 G 在 C 的左侧就是它的左子树的节点

253
00:12:02,060 --> 00:12:03,340
那我们呢

254
00:12:03,340 --> 00:12:04,820
这样去调整的话

255
00:12:04,820 --> 00:12:09,790
ETF 能够找到 EDF 它的这棵子树

256
00:12:09,790 --> 00:12:10,770
谁是根呢

257
00:12:10,770 --> 00:12:12,620
唉， F 是根

258
00:12:12,620 --> 00:12:16,540
那1 D 是它的左子树，不分

259
00:12:17,030 --> 00:12:19,530
再针对 ED 来看

260
00:12:19,530 --> 00:12:21,370
D 是它的根

261
00:12:21,370 --> 00:12:23,890
E 呢是它的左子树

262
00:12:23,890 --> 00:12:26,710
这样呢，就可以将整棵树啊

263
00:12:26,710 --> 00:12:28,410
依次的把它呢

264
00:12:28,410 --> 00:12:31,020
反反向构造还原

265
00:12:31,020 --> 00:12:34,790
那我们首先呢，根据先序和中序

266
00:12:34,790 --> 00:12:39,680
将树化成左右子树和根两三个部分

267
00:12:39,680 --> 00:12:40,860
然后呢

268
00:12:40,860 --> 00:12:46,520
再根据某一棵子树划分成根、左、右三个部分

269
00:12:46,520 --> 00:12:48,100
以此类推

270
00:12:48,100 --> 00:12:52,110
直直到将所有节点都把它呢

271
00:12:52,110 --> 00:12:55,120
划分成单一的节点为止

272
00:12:55,120 --> 00:12:58,710
那这就是呢，反向构造的过程

273
00:12:58,710 --> 00:13:02,230
最终呢，可以构造出这样的一棵树

274
00:13:02,230 --> 00:13:04,890
那这棵树如果问大家，哎

275
00:13:04,890 --> 00:13:06,770
它的后续遍历序列

276
00:13:06,770 --> 00:13:09,780
它的层次，它是什么样的一棵树

277
00:13:09,780 --> 00:13:12,510
其实把这棵树画出来

278
00:13:12,510 --> 00:13:14,980
结果就能够得到了吧

279
00:13:14,980 --> 00:13:16,000
这就是呢

280
00:13:16,000 --> 00:13:20,920
关于二叉树它的便利反向构造的问题

281
00:13:21,090 --> 00:13:24,070
下面我们来看一下这类问题啊

282
00:13:24,070 --> 00:13:27,790
在我们软件设计师考试真题当中的体现

283
00:13:27,790 --> 00:13:29,210
某个二叉树

284
00:13:29,210 --> 00:13:32,690
它的先序序列是 A 、 B 、 C 、 D 、 E 、 F 

285
00:13:32,690 --> 00:13:35,740
中序序列呢，是 B 、 A 、 D 、 C 、 F 1

286
00:13:35,740 --> 00:13:37,570
那它的二叉树高度

287
00:13:37,570 --> 00:13:39,150
也就是它的层次

288
00:13:39,150 --> 00:13:41,010
层次数应该是多少呢

289
00:13:41,010 --> 00:13:43,950
哎，把这棵树反向构造出来就行了

290
00:13:43,950 --> 00:13:45,950
整棵树的根是谁

291
00:13:45,950 --> 00:13:47,430
应该是 A 

292
00:13:47,430 --> 00:13:49,720
那以 A 为根

293
00:13:49,720 --> 00:13:51,960
遍历它的这棵树

294
00:13:51,960 --> 00:13:54,470
左侧是节点 B 

295
00:13:54,470 --> 00:13:57,110
右侧是一棵子

296
00:13:57,110 --> 00:13:59,790
D 、 C 、 F 1吧

297
00:13:59,790 --> 00:14:02,230
那 A 和 B 找到了之后

298
00:14:02,230 --> 00:14:04,510
对于 D 、 C 、 F 1，哎

299
00:14:04,510 --> 00:14:07,410
这棵子树 C 是它的根

300
00:14:07,410 --> 00:14:12,060
所以接下来我们把 C 呢找出来作为根

301
00:14:12,060 --> 00:14:14,380
那以 C 来划分

302
00:14:14,380 --> 00:14:16,760
左侧是节点 D 

303
00:14:16,760 --> 00:14:20,420
右侧是一棵子树 F 1

304
00:14:20,560 --> 00:14:23,740
再来根据 F 1来划分

305
00:14:23,740 --> 00:14:25,290
谁是它的根

306
00:14:25,290 --> 00:14:27,540
E 是它的根 F 

307
00:14:27,540 --> 00:14:31,780
哎，在这里应该是它的左侧节点

308
00:14:32,730 --> 00:14:34,850
根据中序来看

309
00:14:34,850 --> 00:14:37,440
它是呢，在左子树部分吧

310
00:14:37,440 --> 00:14:40,100
所以这是它的左侧节点

311
00:14:40,100 --> 00:14:42,000
那这棵树画出来了

312
00:14:42,000 --> 00:14:44,040
它的层次数就比较明确了吧

313
00:14:44,040 --> 00:14:47,910
哎，一、二、三、四根是第一层

314
00:14:47,910 --> 00:14:49,930
依次往下累加

315
00:14:49,930 --> 00:14:51,760
所以它的层次数呢

316
00:14:51,760 --> 00:14:53,980
应该是等于四的

317
00:14:53,980 --> 00:14:57,550
那这是呢，它的反向构造的考察

318
00:14:57,550 --> 00:15:02,540
那这一部分呢，是我们在考数与二叉树当中

319
00:15:02,540 --> 00:15:04,540
经常出现的一类题型

320
00:15:04,540 --> 00:15:05,870
大家回去之后呢

321
00:15:05,870 --> 00:15:07,530
可以自己练习一下

322
00:15:07,530 --> 00:15:09,110
尤其是便利

323
00:15:09,110 --> 00:15:11,050
这一部分呢，是基础

324
00:15:11,050 --> 00:15:12,530
先学会便利

325
00:15:12,530 --> 00:15:15,110
再看呢，反向构造的过程
