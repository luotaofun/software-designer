1
00:00:00,000 --> 00:00:02,380
接下来我们再来看一下呢

2
00:00:02,380 --> 00:00:04,000
矩阵这一部分

3
00:00:04,000 --> 00:00:04,870
矩阵啊

4
00:00:04,870 --> 00:00:07,710
它跟我们的二维数组基本上呢

5
00:00:07,710 --> 00:00:09,320
是同一个概念了

6
00:00:09,320 --> 00:00:12,820
矩阵的话，它的行和列是相等的

7
00:00:12,820 --> 00:00:13,980
我们在这里呢

8
00:00:13,980 --> 00:00:16,680
主要介绍到的是一些特殊的矩阵

9
00:00:16,680 --> 00:00:19,990
在求读取、转存为一维数组的时

10
00:00:19,990 --> 00:00:22,130
是如何来存储的

11
00:00:22,130 --> 00:00:24,610
那对于特殊的这种

12
00:00:24,610 --> 00:00:26,730
呃，二维的矩阵来看的话

13
00:00:26,730 --> 00:00:29,450
它的定义啊，其实并不是很明确啊

14
00:00:29,450 --> 00:00:31,540
首先，上三角矩阵

15
00:00:31,540 --> 00:00:33,100
它表示的是我们啊

16
00:00:33,100 --> 00:00:36,940
在对角线元素以上的这一部分呢

17
00:00:36,940 --> 00:00:38,360
叫做上三角

18
00:00:38,360 --> 00:00:39,770
下三角矩阵呢

19
00:00:39,770 --> 00:00:42,550
是在对角线以下的这一部分元素

20
00:00:42,550 --> 00:00:44,000
叫做呢，下三角

21
00:00:44,000 --> 00:00:46,060
这些矩阵是什么含义呢

22
00:00:46,060 --> 00:00:47,660
它是啊，一一类呢

23
00:00:47,660 --> 00:00:49,640
叫做稀疏矩阵的东西

24
00:00:49,640 --> 00:00:53,650
所谓的稀疏矩阵是因为矩阵它的维度呢

25
00:00:53,650 --> 00:00:54,550
是二维的

26
00:00:54,550 --> 00:00:56,230
里面有很多元素

27
00:00:56,230 --> 00:01:00,840
这些元素只有零与非零的区别

28
00:01:00,840 --> 00:01:03,690
那零与非零的区别

29
00:01:03,690 --> 00:01:05,019
我们会发现呢

30
00:01:05,019 --> 00:01:06,780
哎，这里的元素啊

31
00:01:06,780 --> 00:01:08,020
只有呢，哎

32
00:01:08,020 --> 00:01:09,800
上三角是非零的

33
00:01:09,800 --> 00:01:11,400
下三角都是为零

34
00:01:11,400 --> 00:01:13,700
或者下三角是非零的

35
00:01:13,700 --> 00:01:15,500
上三角都是等于零的

36
00:01:15,500 --> 00:01:17,820
那有了这样的规律之后

37
00:01:17,820 --> 00:01:20,300
为零的元素需不需要记录啊

38
00:01:20,300 --> 00:01:21,650
不需要记录了

39
00:01:21,650 --> 00:01:24,930
所以稀疏矩阵它是可以压缩存的

40
00:01:24,930 --> 00:01:26,850
压缩存储的时候

41
00:01:26,850 --> 00:01:31,220
为零的这一部分元素我们可以不做转存

42
00:01:31,220 --> 00:01:34,340
只对非零元素进行存储

43
00:01:34,340 --> 00:01:37,970
那我们以左侧的这个上三角矩阵为例

44
00:01:37,970 --> 00:01:39,090
来看一看

45
00:01:39,090 --> 00:01:43,760
唉，如果把左上角的这一部分元素啊

46
00:01:43,760 --> 00:01:47,430
把它呢，转存到一维数组当中去

47
00:01:47,430 --> 00:01:50,300
那我们对于 AI 接

48
00:01:51,540 --> 00:01:56,560
下标 I ，下标为 I 为接的这个元素

49
00:01:56,560 --> 00:01:59,510
那它所存储的，哎

50
00:01:59,510 --> 00:02:01,590
上面有多少行呢

51
00:02:01,590 --> 00:02:03,810
哎，假设这是 AI 级

52
00:02:04,050 --> 00:02:09,350
前面所对应的是零到 II 减一行吧

53
00:02:09,350 --> 00:02:12,250
那一共有 I 个行

54
00:02:12,250 --> 00:02:14,500
一共有多少个列呢

55
00:02:14,500 --> 00:02:17,340
诶，应该是有啊

56
00:02:17,340 --> 00:02:20,940
接减零到阶减一接个列吧

57
00:02:20,940 --> 00:02:23,600
那这个元素有什么规律啊

58
00:02:23,600 --> 00:02:27,600
我们发现每一行会减去一个元素吧

59
00:02:27,600 --> 00:02:31,130
第一行它有 N 个元素

60
00:02:31,500 --> 00:02:35,280
第二行有 N 减一个元素

61
00:02:35,280 --> 00:02:37,200
那第 I 行的话

62
00:02:37,200 --> 00:02:39,440
它有多少个非零元素呢

63
00:02:39,440 --> 00:02:43,380
应该是 N 减去 I 减一个元素

64
00:02:43,380 --> 00:02:46,730
这是可以根据它的规律来推导的

65
00:02:46,730 --> 00:02:49,730
那找到这个规律之后啊

66
00:02:49,730 --> 00:02:51,710
我们是可以啊

67
00:02:51,710 --> 00:02:54,990
根据它的规律来求和

68
00:02:54,990 --> 00:02:56,860
N 加上 N 减一

69
00:02:56,860 --> 00:02:58,200
加上 N 减二

70
00:02:58,200 --> 00:03:01,140
直到加上 N 减去 I 减一

71
00:03:01,140 --> 00:03:03,720
这是一个等差数列

72
00:03:03,720 --> 00:03:09,070
等差数列求和上底加下底

73
00:03:11,580 --> 00:03:13,620
乘以高

74
00:03:15,180 --> 00:03:16,820
除以二

75
00:03:17,110 --> 00:03:18,570
那这是呢

76
00:03:18,570 --> 00:03:22,770
哎，上面的零到 I 减一行元素的个数

77
00:03:22,770 --> 00:03:28,490
化简一下应该是2 N 减 I 加一

78
00:03:28,490 --> 00:03:31,950
然后乘以二分之 I 

79
00:03:32,750 --> 00:03:36,430
那前面的 I 减一行看完了

80
00:03:36,430 --> 00:03:39,370
当前第 I 行有多少个元素呢

81
00:03:39,370 --> 00:03:41,770
哎，应该是到底接列吧

82
00:03:41,770 --> 00:03:45,160
所以前面有零到阶减一

83
00:03:45,160 --> 00:03:47,540
也就是接个元素

84
00:03:47,540 --> 00:03:50,440
这就是呢元素的个数

85
00:03:50,440 --> 00:03:52,840
所以转存为一维的时候

86
00:03:52,840 --> 00:03:57,560
我们相当于前面存了这么一些下标吧

87
00:03:57,560 --> 00:03:59,900
所以在这里我们可以看到，诶

88
00:03:59,900 --> 00:04:03,720
它的公式应该是2 N 减 I 

89
00:04:03,720 --> 00:04:07,960
然后加上1×2分之 I 加上 J 

90
00:04:07,960 --> 00:04:09,050
这是我们呢

91
00:04:09,050 --> 00:04:11,130
求取相应的，诶

92
00:04:11,130 --> 00:04:13,480
上三角矩阵转存的过程

93
00:04:13,480 --> 00:04:16,690
我们再来看一下呢，下三角矩阵

94
00:04:16,690 --> 00:04:20,760
我们以左下三角矩阵的规律来分析

95
00:04:20,760 --> 00:04:23,230
那同样是 AI 

96
00:04:23,230 --> 00:04:27,670
前面应该是零到 I 减一行

97
00:04:27,670 --> 00:04:30,190
每一行的元素个数

98
00:04:30,190 --> 00:04:32,310
零行是一个，哎

99
00:04:32,310 --> 00:04:33,870
一行有两个

100
00:04:33,870 --> 00:04:36,930
那 I 减一行应该是 A 减1+1

101
00:04:36,930 --> 00:04:38,420
也就是 I 个

102
00:04:38,420 --> 00:04:40,790
那前面 I 减一行

103
00:04:40,790 --> 00:04:44,260
元素总个数同样是等差数列

104
00:04:44,260 --> 00:04:48,350
上底加下底乘以高除以二

105
00:04:48,350 --> 00:04:52,870
当前诶， DJ 第 I 行来看的话

106
00:04:52,870 --> 00:04:57,970
接它的下标前面应该是零到接减一吧

107
00:04:57,970 --> 00:05:01,580
所以仍然是加上 J 作为它的呢

108
00:05:01,580 --> 00:05:05,500
唉，我们的转存计算的元素未知

109
00:05:05,500 --> 00:05:10,050
那这是我们涉及到的关于二维数组

110
00:05:10,050 --> 00:05:12,830
那这是我们讲到的关于呢

111
00:05:12,830 --> 00:05:14,990
稀疏矩阵转存的问题

112
00:05:14,990 --> 00:05:15,810
注意啊

113
00:05:15,810 --> 00:05:18,390
我们这里求的其实是下标

114
00:05:18,390 --> 00:05:19,390
正常来讲

115
00:05:19,390 --> 00:05:21,890
下标元素的个数我们是应该呢

116
00:05:21,890 --> 00:05:24,520
唉，再加上一才是它的下标吧

117
00:05:24,520 --> 00:05:26,740
但是元素下标从零开始

118
00:05:26,740 --> 00:05:28,340
编号默认的情况下

119
00:05:28,340 --> 00:05:29,700
所以这个加一呢

120
00:05:29,700 --> 00:05:31,640
减一就抵消掉了

121
00:05:31,640 --> 00:05:36,030
我们直接呢，把元素总个数作为下标就足够了

122
00:05:36,030 --> 00:05:39,070
那这一类问题是不是一定要记公式呢

123
00:05:39,070 --> 00:05:39,880
不是啊

124
00:05:39,880 --> 00:05:41,800
我们给大家的建议啊

125
00:05:41,800 --> 00:05:47,060
还是呢，代入实例来验算选项会更快速一些

126
00:05:47,060 --> 00:05:49,000
比如说 AA 00

127
00:05:49,000 --> 00:05:50,980
它一定是存在唉

128
00:05:50,980 --> 00:05:52,870
我们的 M 0当中

129
00:05:52,870 --> 00:05:55,950
或者告诉大家存在 M 1当中

130
00:05:55,950 --> 00:05:59,250
把 IJ 和最终的下标带入

131
00:05:59,250 --> 00:06:01,290
验证一下就足够了

132
00:06:01,290 --> 00:06:03,040
那我们剩下的第二个

133
00:06:03,040 --> 00:06:08,030
第三个基本上验证3~4个数值就可以了

134
00:06:08,030 --> 00:06:10,580
那这是呢，上下三角矩阵

135
00:06:10,580 --> 00:06:12,560
还有特殊的矩阵

136
00:06:12,560 --> 00:06:14,260
叫做对角矩阵

137
00:06:14,260 --> 00:06:15,830
对角矩阵啊

138
00:06:15,830 --> 00:06:17,810
它是我们矩阵当

139
00:06:17,810 --> 00:06:19,290
非零元素呢

140
00:06:19,290 --> 00:06:21,960
都集中在对角线这里

141
00:06:21,960 --> 00:06:26,510
要么就是以对角线对称的方式来存在的

142
00:06:26,510 --> 00:06:29,490
那我们的非零元素呢

143
00:06:29,490 --> 00:06:33,020
唉，它是有呢，唉， AI 阶非零的话

144
00:06:33,020 --> 00:06:37,370
那么它的 AJI 对称元素一定呢

145
00:06:37,370 --> 00:06:39,130
也是非零的

146
00:06:39,130 --> 00:06:43,100
所以这里呢，有一个对称相关的关系

147
00:06:43,100 --> 00:06:45,510
那我们对于这里啊

148
00:06:45,510 --> 00:06:47,050
除了对角线

149
00:06:47,050 --> 00:06:50,390
那对角线都是 I 等于 J 的元素

150
00:06:50,390 --> 00:06:51,610
上三角

151
00:06:51,610 --> 00:06:53,650
那这里存在的，唉

152
00:06:53,650 --> 00:06:57,470
元素的下标 I 都是小于等于 J 的

153
00:06:57,470 --> 00:07:01,150
下三角 I 都是大于等于 J 的

154
00:07:01,150 --> 00:07:06,560
并且它们存在对称的关系就叫做呢对角矩阵

155
00:07:06,560 --> 00:07:08,940
那对角矩阵转存的时候

156
00:07:08,940 --> 00:07:12,710
同样呢，我们建议大家不要去找公式了

157
00:07:12,710 --> 00:07:16,420
直接呢，找一些实例来进行验证

158
00:07:16,420 --> 00:07:19,450
那这里啊，在考试当中呢

159
00:07:19,450 --> 00:07:24,680
曾经出现过给的规律是上三角填空的选项呢

160
00:07:24,680 --> 00:07:27,420
要求大家填写下三角

161
00:07:27,420 --> 00:07:30,090
所以要注意去读题

162
00:07:30,090 --> 00:07:32,190
接下来我们看一下这部分

163
00:07:32,190 --> 00:07:35,100
在软件设计师考试真题当中的体现

164
00:07:35,100 --> 00:07:39,640
首先呢，这道题假设某 N 阶的三对角矩阵

165
00:07:39,640 --> 00:07:41,400
唉，它是 N 乘以 N 的

166
00:07:41,400 --> 00:07:43,840
那它的示意图如下所示

167
00:07:43,840 --> 00:07:47,500
若将这个三对角矩阵的非零元素啊

168
00:07:47,500 --> 00:07:53,250
非零元素在这里暗行存储在一维数组当中

169
00:07:53,250 --> 00:07:56,540
那按行存储在一维数组的时候

170
00:07:56,540 --> 00:07:59,850
注意后面给出了 K 的取值

171
00:07:59,850 --> 00:08:03,230
一维数组的下标是从一开始的

172
00:08:03,230 --> 00:08:05,020
并不是从零开始

173
00:08:05,020 --> 00:08:08,840
那 K 与 IJ 的对应关系是什么呢

174
00:08:08,840 --> 00:08:11,060
这一类题目我们直接呢

175
00:08:11,060 --> 00:08:12,920
建议大家带实例

176
00:08:12,920 --> 00:08:14,700
那按行存储

177
00:08:14,700 --> 00:08:16,160
这是第一个元素

178
00:08:16,160 --> 00:08:17,120
第二个元素

179
00:08:17,120 --> 00:08:18,060
第三个元素

180
00:08:18,060 --> 00:08:19,350
第四个元素吧

181
00:08:19,350 --> 00:08:21,390
所以显然这个数值啊

182
00:08:21,390 --> 00:08:23,730
它的这个元素转存的顺序

183
00:08:23,730 --> 00:08:25,540
我们很明确的能够看到

184
00:08:25,540 --> 00:08:28,000
那 I 等于一的时候

185
00:08:28,000 --> 00:08:29,600
J 等于一的时候

186
00:08:29,600 --> 00:08:31,260
K 是等于一的

187
00:08:31,260 --> 00:08:33,799
下标都是从一开始

188
00:08:33,799 --> 00:08:35,380
I 等于一的时候

189
00:08:35,380 --> 00:08:36,840
J 等于二的时候

190
00:08:36,840 --> 00:08:39,059
K 是等于二的

191
00:08:39,059 --> 00:08:40,510
I 等于二

192
00:08:40,510 --> 00:08:42,169
J 等于一

193
00:08:42,169 --> 00:08:44,550
K 是等于三的

194
00:08:44,550 --> 00:08:47,030
那有了这些数据之后

195
00:08:47,030 --> 00:08:50,990
带入 A 、 B 、 C 、 D 4个选项来进行验证

196
00:08:50,990 --> 00:08:52,940
那首先一和一

197
00:08:52,940 --> 00:08:55,080
I 等于一皆等于一

198
00:08:55,080 --> 00:08:56,180
代入之后

199
00:08:56,180 --> 00:08:57,450
我们会发

200
00:08:57,450 --> 00:09:00,830
A 选项它的取值是等于一的

201
00:09:00,830 --> 00:09:04,160
B 选项它的取值是等于三的

202
00:09:04,160 --> 00:09:08,210
C 选项它的取值也是等于三的

203
00:09:08,210 --> 00:09:13,110
那我们的 D 选项它的取值是等于四的

204
00:09:13,110 --> 00:09:16,470
那显然满足要求的只有 A 选项

205
00:09:16,470 --> 00:09:19,070
那一个实例就找到了答案

206
00:09:19,070 --> 00:09:21,130
如果一个实力不够

207
00:09:21,130 --> 00:09:24,760
我们还有二、三、四、五、六给大家呢代入

208
00:09:24,760 --> 00:09:29,920
基本上是两到三个实例就足够了啊

209
00:09:29,920 --> 00:09:31,960
一个实例就能解题

210
00:09:31,960 --> 00:09:33,720
这种情况并不多

211
00:09:33,720 --> 00:09:36,580
需要五六个实例才能解题

212
00:09:36,580 --> 00:09:39,680
这种实，这种试题呢，也不多

213
00:09:39,680 --> 00:09:40,800
所以我们一般啊

214
00:09:40,800 --> 00:09:42,480
是两到三个实例解题

215
00:09:42,480 --> 00:09:43,920
这种情况呢，会

216
00:09:43,920 --> 00:09:45,410
呃，普遍一些

217
00:09:45,410 --> 00:09:46,430
那这是呢

218
00:09:46,430 --> 00:09:49,250
关于我们的三对角矩

219
00:09:49,250 --> 00:09:51,620
按行存储的情况

220
00:09:51,620 --> 00:09:54,110
下面再来看这一道题

221
00:09:54,110 --> 00:09:57,040
对于一个 N 阶的对称矩阵 A 

222
00:09:57,040 --> 00:09:59,520
它的下三角区域元素

223
00:09:59,520 --> 00:10:02,100
按行存储在一维数组当中

224
00:10:02,100 --> 00:10:05,420
那 AI 接存在 SK 当中

225
00:10:05,420 --> 00:10:09,320
且 S 1它存储的是 A 00

226
00:10:09,320 --> 00:10:12,930
那么 K 与 I 、 J 的对应关系应该是什么

227
00:10:12,930 --> 00:10:13,850
注意啊

228
00:10:13,850 --> 00:10:16,800
我们的下三角矩阵

229
00:10:16,800 --> 00:10:20,600
它的 I 的取值是大于等于 J 的

230
00:10:20,600 --> 00:10:24,180
上三角矩阵才是 I 小于等于 J 

231
00:10:24,180 --> 00:10:30,210
所以给出的规律是上三角是下三角矩阵

232
00:10:30,210 --> 00:10:34,950
而要求给出的表达式是上三角矩阵的

233
00:10:34,950 --> 00:10:37,170
所以看清楚这道题呢

234
00:10:37,170 --> 00:10:39,070
这是一个陷阱

235
00:10:39,070 --> 00:10:41,040
那我们来验证一下

236
00:10:41,040 --> 00:10:45,120
首先我们所分析的规律应该是

237
00:10:45,120 --> 00:10:48,700
元素 AI 接存在 SK 当中

238
00:10:48,700 --> 00:10:51,880
S 1是等于 A 00的

239
00:10:51,880 --> 00:10:56,160
S 1存储的应该是 A 1，

240
00:10:56,160 --> 00:10:58,440
应该是 A 00

241
00:10:58,890 --> 00:11:02,590
那 A 00 I 等于一

242
00:11:02,590 --> 00:11:04,330
I 等于零

243
00:11:04,670 --> 00:11:06,730
J 等于零

244
00:11:06,730 --> 00:11:10,140
K 的取值是等于一的

245
00:11:10,140 --> 00:11:13,340
把这个实例带入验证一下

246
00:11:13,340 --> 00:11:15,000
我们会发现，唉

247
00:11:15,000 --> 00:11:18,330
A 里面 I 等于零

248
00:11:18,330 --> 00:11:19,990
J 等于零的时候

249
00:11:19,990 --> 00:11:21,610
它是等于一的

250
00:11:21,610 --> 00:11:24,820
那 CD 里面也是等于一的

251
00:11:24,820 --> 00:11:27,940
所以 A 和 D 都是错误的选项

252
00:11:27,940 --> 00:11:31,510
那我们还剩下 B 和 C 来进行验证

253
00:11:31,510 --> 00:11:36,810
接下来，下三角区域存储的下一个元素是谁啊

254
00:11:36,810 --> 00:11:38,230
按行存储

255
00:11:38,230 --> 00:11:40,930
下一个存储的是 A 

256
00:11:41,840 --> 00:11:43,240
110

257
00:11:43,240 --> 00:11:44,330
注意啊

258
00:11:44,330 --> 00:11:47,010
A 10是不是我们的目标呢

259
00:11:47,010 --> 00:11:51,540
不是，我们接下来找的是对称位置上

260
00:11:51,540 --> 00:11:57,390
它在对称位置上所求的应该是 A 01

261
00:11:57,390 --> 00:12:00,660
那 A 01 I 等于零

262
00:12:00,660 --> 00:12:02,280
J 等于一

263
00:12:02,280 --> 00:12:04,740
K 应该是等于二的

264
00:12:04,740 --> 00:12:06,650
把 I 等于零

265
00:12:06,650 --> 00:12:08,390
然后 J 等于一

266
00:12:08,390 --> 00:12:09,730
代入来看的话

267
00:12:09,730 --> 00:12:11,920
唉，我们的 B 和 C 啊

268
00:12:11,920 --> 00:12:14,140
它都是呢等于二的

269
00:12:14,140 --> 00:12:15,680
所以无法验证

270
00:12:15,680 --> 00:12:18,380
那我们再来看接下来的元素

271
00:12:18,380 --> 00:12:20,800
应该是 A 11吧

272
00:12:21,670 --> 00:12:27,470
A 11它的对称位置还是 A 11

273
00:12:31,860 --> 00:12:33,840
I 等于一

274
00:12:33,840 --> 00:12:35,380
J 等于一

275
00:12:35,380 --> 00:12:37,790
K 是等于三的

276
00:12:37,790 --> 00:12:39,780
代入验证一下

277
00:12:39,780 --> 00:12:43,040
哎，好像它仍然是满足的吧

278
00:12:43,040 --> 00:12:45,250
B 和 C 还不能排除

279
00:12:45,250 --> 00:12:48,240
那我们再来看下一个元素

280
00:12:48,240 --> 00:12:51,060
应该是 A 20呢

281
00:12:53,080 --> 00:12:56,200
它的对称位置

282
00:12:57,000 --> 00:13:00,080
应该是 A 02

283
00:13:02,420 --> 00:13:04,340
A 02的时候

284
00:13:04,340 --> 00:13:06,120
I 等于零

285
00:13:06,120 --> 00:13:07,740
J 等于二

286
00:13:07,740 --> 00:13:09,920
K 是等于四的

287
00:13:09,920 --> 00:13:12,460
那我们在这里就会发现呢

288
00:13:12,460 --> 00:13:15,420
哎， I 等于零的时候

289
00:13:15,420 --> 00:13:17,240
我们代入之后呢

290
00:13:17,240 --> 00:13:20,730
会发现 I 等于零阶等于二的时候

291
00:13:20,730 --> 00:13:23,240
我们的 C 是等于三的

292
00:13:23,240 --> 00:13:25,420
只有 B 呢，是等于四的

293
00:13:25,420 --> 00:13:29,360
所以符合要求的选项呢，是 B 选项

294
00:13:29,360 --> 00:13:30,600
那我们这里呢

295
00:13:30,600 --> 00:13:33,740
四个元素的实例就能够呢找到答案

296
00:13:33,740 --> 00:13:34,840
但是注意

297
00:13:34,840 --> 00:13:37,500
我们在描述规

298
00:13:37,500 --> 00:13:40,180
存储的其实是下三角吧

299
00:13:40,180 --> 00:13:42,460
我们根据它的对称位置

300
00:13:42,460 --> 00:13:44,710
可以找到上三角的元素

301
00:13:44,710 --> 00:13:46,930
所以看的是下三角

302
00:13:46,930 --> 00:13:49,870
但是对应关系呢，是上三角的

303
00:13:49,870 --> 00:13:52,700
这里呢，存在一个转换的问题

304
00:13:52,700 --> 00:13:55,140
那我们代入实例的时候

305
00:13:55,140 --> 00:13:57,730
大家可以自己呢再去验证一下

306
00:13:57,730 --> 00:14:01,880
还可以呢，通过规律来进行归纳

307
00:14:01,880 --> 00:14:06,020
那我们首先呢，针对下三角矩阵来看的话

308
00:14:06,020 --> 00:14:09,500
我们所对应的相应位置

309
00:14:09,500 --> 00:14:10,800
AI 接

310
00:14:13,840 --> 00:14:15,980
可以分为两部分吧

311
00:14:15,980 --> 00:14:18,640
一部分是已经存储的

312
00:14:18,640 --> 00:14:20,420
存储元素的个数

313
00:14:20,420 --> 00:14:23,050
分别是一、二、三

314
00:14:23,050 --> 00:14:26,650
唉，直到呢，我们的 I 加上一吧

315
00:14:26,650 --> 00:14:31,390
那我们在这里第零行放置的是一个元素

316
00:14:31,390 --> 00:14:33,750
第一行放置两个元素

317
00:14:33,750 --> 00:14:37,040
那我们在这里应该 I 减一行

318
00:14:37,040 --> 00:14:39,700
存放的是 I 个元素

319
00:14:39,700 --> 00:14:41,150
累加一下

320
00:14:41,150 --> 00:14:45,840
上底加下底乘以高 AI 

321
00:14:45,840 --> 00:14:47,660
然后呢除以二

322
00:14:47,660 --> 00:14:50,120
这是上面没有呢

323
00:14:50,120 --> 00:14:53,710
呃，上面完全存储的元素个数

324
00:14:53,710 --> 00:14:57,730
那当前我们要存的第 I 行

325
00:14:57,730 --> 00:15:01,420
那里面待存元素应该有多少呢

326
00:15:01,420 --> 00:15:03,370
列数为阶

327
00:15:03,370 --> 00:15:05,590
那列数为阶的时候

328
00:15:05,590 --> 00:15:07,110
前面都存了吧

329
00:15:07,110 --> 00:15:11,650
应该呢是零到阶减一加上的阶

330
00:15:11,650 --> 00:15:14,670
那这个数值求出来之后

331
00:15:14,670 --> 00:15:19,420
我们当前元素的下标从一开始吧

332
00:15:19,420 --> 00:15:22,330
那这是从零开始存储的

333
00:15:22,330 --> 00:15:26,280
从一开始下标呢，还需要加上一

334
00:15:26,280 --> 00:15:28,300
找到这个数值之后

335
00:15:28,300 --> 00:15:30,520
这是下三角的情况吧

336
00:15:30,520 --> 00:15:34,060
我们接下来再来验证上三角

337
00:15:34,060 --> 00:15:37,740
上三角与下三角它是有对称关系的

338
00:15:37,740 --> 00:15:41,280
所以它是呢，对 IJ 进行了一个转换

339
00:15:41,280 --> 00:15:44,880
把公式当中 I 的位置写成 J 

340
00:15:44,880 --> 00:15:47,080
就是呢最终的结果了

341
00:15:47,080 --> 00:15:50,480
那它所对应的也就是呢 B 选项

342
00:15:50,480 --> 00:15:53,580
那这里同样呢是先求下三角

343
00:15:53,580 --> 00:15:56,820
再找对称的上三角位置

344
00:15:56,820 --> 00:16:01,900
那我们这是呢关于对称矩阵它的分析过程

345
00:16:01,900 --> 00:16:03,540
目前在考试当中

346
00:16:03,540 --> 00:16:05,360
对角矩阵考得多一些

347
00:16:05,360 --> 00:16:07,260
这种对称矩阵呢

348
00:16:07,260 --> 00:16:09,840
相对来说考察的少一些

349
00:16:09,840 --> 00:16:13,960
那这是呢，我们讲到的矩阵相关的内容
