1
00:00:00,000 --> 00:00:04,790
接下来，我们展开来看一下进程它的状态变迁

2
00:00:04,790 --> 00:00:07,460
我们说呢，进程它是动态的

3
00:00:07,460 --> 00:00:10,600
可以创建，也可能会消亡

4
00:00:10,600 --> 00:00:13,110
那它是一个动态变化的过程

5
00:00:13,110 --> 00:00:15,010
我们对于进进程啊

6
00:00:15,010 --> 00:00:16,470
它的状态变迁呢

7
00:00:16,470 --> 00:00:19,610
有多种模型可以呢去参照

8
00:00:19,610 --> 00:00:24,080
那每一种模型都有它自己特殊的一些呢特点

9
00:00:24,080 --> 00:00:26,140
也有呢一定的道理

10
00:00:26,140 --> 00:00:28,640
我们在软件设计师考试当中呢

11
00:00:28,640 --> 00:00:32,810
主要需要大家掌握三态模型和五态模型

12
00:00:32,810 --> 00:00:35,270
首先看三态模型

13
00:00:35,270 --> 00:00:39,080
三态模型将进程转换成了运行态

14
00:00:39,080 --> 00:00:41,380
就绪态和阻塞状态

15
00:00:41,380 --> 00:00:43,430
我们分别来看一下

16
00:00:43,430 --> 00:00:45,470
首先运行态

17
00:00:45,470 --> 00:00:50,850
运行态它表示的是我们进程在 CPU 当中运行

18
00:00:50,850 --> 00:00:53,450
那此时呢，就叫做运行态

19
00:00:53,450 --> 00:00:56,020
如果是单 CPU 的话

20
00:00:56,020 --> 00:00:57,640
单处理机系统的话

21
00:00:57,640 --> 00:01:02,140
一次只能允许一个进程在 CPU 当中运行

22
00:01:02,140 --> 00:01:04,739
那其他进程怎么办呢

23
00:01:04,739 --> 00:01:07,220
唉，如果说一个进程啊

24
00:01:07,220 --> 00:01:10,330
它处于就绪状态的话

25
00:01:10,330 --> 00:01:15,280
那说明它所具备的资源除了 CPU 以外

26
00:01:15,280 --> 00:01:18,440
都已经呢，满足了万事俱备

27
00:01:18,440 --> 00:01:20,870
只欠东风的状态

28
00:01:20,870 --> 00:01:25,220
那此时只要有 CPU 资源分配给他了

29
00:01:25,220 --> 00:01:26,100
调度它了

30
00:01:26,100 --> 00:01:28,900
唉，我们就可以进入运行态

31
00:01:28,900 --> 00:01:31,970
就绪态，它是除 CPU 以外

32
00:01:31,970 --> 00:01:34,680
其他资源全部满足

33
00:01:34,680 --> 00:01:37,320
我们在运行的过程当中

34
00:01:37,320 --> 00:01:40,530
可以将 CPU 当成资源来处理

35
00:01:40,530 --> 00:01:44,340
将 CPU 它所能够运行的时间呢

36
00:01:44,340 --> 00:01:46,460
划分成一些小的片段

37
00:01:46,460 --> 00:01:48,180
那这个过程当中

38
00:01:48,180 --> 00:01:49,690
时间片到了

39
00:01:49,690 --> 00:01:51,210
也就意味着，唉

40
00:01:51,210 --> 00:01:56,940
我们在运行态当中所占据到的 CPU 资源用完了

41
00:01:56,940 --> 00:01:59,580
那此时会回到就绪态

42
00:01:59,580 --> 00:02:02,800
排队等着新的 CPU 资源

43
00:02:02,800 --> 00:02:06,140
而一旦被 CPU 调度的话

44
00:02:06,140 --> 00:02:10,240
就会呢，从就绪态进入运行态

45
00:02:10,479 --> 00:02:14,020
在就绪态相应的这些进程啊

46
00:02:14,020 --> 00:02:17,750
会排队形成一个就绪队列

47
00:02:17,750 --> 00:02:22,870
其次呢，唉，我们还有一个状态叫做呢，等待状态

48
00:02:22,870 --> 00:02:25,100
也叫做阻塞状态

49
00:02:25,100 --> 00:02:27,780
或者呢叫做睡眠状态

50
00:02:27,780 --> 00:02:29,880
指的都是这个状态

51
00:02:29,880 --> 00:02:31,350
运行态啊

52
00:02:31,350 --> 00:02:33,390
它在时间片到了

53
00:02:33,390 --> 00:02:35,890
也就是 CPU 资源耗费之后

54
00:02:35,890 --> 00:02:38,860
耗光之后呢，会回到就绪态排队

55
00:02:38,860 --> 00:02:42,320
那我们所占据的资源除了 CPU 以外

56
00:02:42,320 --> 00:02:45,780
还有一些呢，非 CPU 资源

57
00:02:47,660 --> 00:02:50,980
如果这一类资源不足的话

58
00:02:50,980 --> 00:02:54,800
我们会从就绪态进入阻塞状态

59
00:02:54,800 --> 00:02:56,990
或者叫做等待状态

60
00:02:56,990 --> 00:03:02,020
那他所谓的等待是等待某个事件

61
00:03:02,020 --> 00:03:06,190
或者叫做呢，诶，等待某个资源的释放

62
00:03:06,190 --> 00:03:09,210
当他等待的资源回来了

63
00:03:09,210 --> 00:03:10,410
诶，给他了

64
00:03:10,410 --> 00:03:13,310
那我们呢就会进入就绪态

65
00:03:13,310 --> 00:03:18,340
注意，没有等待直接到运行态的变迁

66
00:03:18,340 --> 00:03:22,550
它只能通过就绪态才能进入运行态

67
00:03:22,550 --> 00:03:25,450
并且在就绪状态的话

68
00:03:25,450 --> 00:03:27,610
我们默认它的资源呢

69
00:03:27,610 --> 00:03:30,340
是不会被抢占、剥夺的

70
00:03:30,340 --> 00:03:32,740
所以在这里的话，不用考虑呢

71
00:03:32,740 --> 00:03:35,460
就绪态回到等待状态了

72
00:03:35,460 --> 00:03:39,190
那这三个状态形成的状态图

73
00:03:39,190 --> 00:03:42,070
他们之间的变迁和变迁条件

74
00:03:42,070 --> 00:03:44,140
大家呢，也需要了解

75
00:03:44,140 --> 00:03:49,690
这其中，等待某个事件和等待的事件发生了

76
00:03:49,690 --> 00:03:52,740
注意是两种不同的描述

77
00:03:52,740 --> 00:03:56,470
一个呢，是我们这个事件啊

78
00:03:56,470 --> 00:03:58,630
它还没有发生

79
00:03:58,630 --> 00:04:01,210
一个呢，是这个事件发生了

80
00:04:01,210 --> 00:04:02,330
这个地方的话

81
00:04:02,330 --> 00:04:03,960
不要呢混淆了

82
00:04:03,960 --> 00:04:07,090
等待某个事件发生

83
00:04:07,090 --> 00:04:09,100
说明这个事件，唉

84
00:04:09,100 --> 00:04:10,420
划分成三个部分

85
00:04:10,420 --> 00:04:12,700
说明这个事件还没有发生吧

86
00:04:12,700 --> 00:04:17,740
所以是在阻塞状态运行到阻塞的条件变迁

87
00:04:17,740 --> 00:04:20,740
而等待事件发生了

88
00:04:20,740 --> 00:04:24,450
这里等待事件是一个修饰之后的事件

89
00:04:24,450 --> 00:04:27,120
我们等待的事情刚好发生了

90
00:04:27,120 --> 00:04:29,140
比如说等待 IO 空闲

91
00:04:29,140 --> 00:04:31,380
那 IO 空闲发生了

92
00:04:31,380 --> 00:04:34,940
我们会从等待状态进入就绪状态

93
00:04:34,940 --> 00:04:37,780
两个说法呢，稍微区分一下

94
00:04:37,780 --> 00:04:40,320
这就是三代模型

95
00:04:40,690 --> 00:04:43,190
我们以生活中的一个例子啊

96
00:04:43,190 --> 00:04:46,450
简单的给大家说明一下这个三态的变换

97
00:04:46,450 --> 00:04:49,200
呃，比如说呢，我们现在，呃

98
00:04:49,200 --> 00:04:52,340
医院是很繁忙的一个呢，机构

99
00:04:52,340 --> 00:04:55,710
那在医院当中谁是最核心的

100
00:04:55,710 --> 00:04:58,160
应该是医生最核心吧

101
00:04:58,160 --> 00:05:02,880
那我们整个核心的空间应该是在就诊室，诶

102
00:05:02,880 --> 00:05:04,250
让医生就诊

103
00:05:04,250 --> 00:05:06,930
但是我们在看病的时候会先干嘛呢

104
00:05:06,930 --> 00:05:08,450
首先第一步是挂号

105
00:05:08,450 --> 00:05:10,070
然后交费干嘛干嘛

106
00:05:10,070 --> 00:05:12,590
那这个过程做完之后

107
00:05:12,590 --> 00:05:13,810
大家会去哪儿呢

108
00:05:13,810 --> 00:05:18,750
去就诊室门口排队等医生叫号

109
00:05:18,750 --> 00:05:21,700
那我们简单的把就诊室啊

110
00:05:21,700 --> 00:05:22,900
当做一个呢

111
00:05:22,900 --> 00:05:25,260
就绪队列的空间

112
00:05:26,280 --> 00:05:30,220
把我们啊，就诊室外面排队等待的区域啊

113
00:05:30,220 --> 00:05:32,850
当作就诊就绪队列的空间

114
00:05:32,850 --> 00:05:36,980
就诊室当做呢 CPU 运行的空间

115
00:05:36,980 --> 00:05:38,750
那我们首先看到

116
00:05:38,750 --> 00:05:41,550
当医生把你叫进去了

117
00:05:41,550 --> 00:05:44,360
那医生就在对你进行诊断吧

118
00:05:44,360 --> 00:05:46,340
诊断的过程当中

119
00:05:46,340 --> 00:05:46,800
唉

120
00:05:46,800 --> 00:05:50,810
如果说你的整个看病过程

121
00:05:50,810 --> 00:05:53,070
需要花费两个小时左右

122
00:05:53,070 --> 00:05:55,470
那这个医生会不会真的在你身上

123
00:05:55,470 --> 00:05:56,630
花两个小时呢

124
00:05:56,630 --> 00:05:57,800
一般不会吧

125
00:05:57,800 --> 00:06:00,640
他会呢，让一些助手给你呢

126
00:06:00,640 --> 00:06:02,700
做一些辅助性的检查啊

127
00:06:02,700 --> 00:06:06,750
那这个过程每一个医生心里会有一杆秤

128
00:06:06,750 --> 00:06:09,380
然后他会预估一下这个时间

129
00:06:09,380 --> 00:06:11,260
当时间到了

130
00:06:11,260 --> 00:06:15,620
它会让你呢去其他地方等着他再次教你

131
00:06:15,620 --> 00:06:16,960
那可以理解为呢

132
00:06:16,960 --> 00:06:19,450
它会让你进入就绪队列

133
00:06:19,450 --> 00:06:20,730
时间片到了

134
00:06:20,730 --> 00:06:22,190
你只能站5分钟

135
00:06:22,190 --> 00:06:25,770
10分钟不能占据医生两个小时的时间

136
00:06:25,770 --> 00:06:30,130
那医生叫号就是一个调度的过程

137
00:06:30,440 --> 00:06:33,620
医生安排你做新的检查

138
00:06:33,620 --> 00:06:34,700
你要去缴费

139
00:06:34,700 --> 00:06:35,860
去做新的检查

140
00:06:35,860 --> 00:06:39,220
就进入了阻塞或者等待队列

141
00:06:39,220 --> 00:06:41,660
当你拿到检查报告之后

142
00:06:41,660 --> 00:06:44,980
你会呢，再次回到等待室

143
00:06:44,980 --> 00:06:48,680
唉，再次回到呢，就诊室门口去排队

144
00:06:48,680 --> 00:06:50,620
等着医生来叫号

145
00:06:50,620 --> 00:06:54,290
这里呢，跟我们运行、就绪、等待的状态呢

146
00:06:54,290 --> 00:06:56,050
有一定的相似性

147
00:06:56,050 --> 00:07:01,440
大家可以呢，参照来理解一下这个三态模型

148
00:07:01,440 --> 00:07:04,040
那我们在三代模型以外呢

149
00:07:04,040 --> 00:07:06,350
还可以有五态模型啊

150
00:07:06,350 --> 00:07:11,740
五态模型可以在三态的基础上有创建和消亡

151
00:07:11,740 --> 00:07:14,670
那这个模型在我们考试当

152
00:07:14,670 --> 00:07:15,890
基本没涉及

153
00:07:15,890 --> 00:07:17,670
我们考试当中啊

154
00:07:17,670 --> 00:07:23,740
涉及到的五态模型是具有挂起行为的固态

155
00:07:23,740 --> 00:07:26,370
在五态模型当中呢

156
00:07:26,370 --> 00:07:31,350
它的基础底部仍然是三态模

157
00:07:31,350 --> 00:07:33,590
这里的活跃、阻塞

158
00:07:33,590 --> 00:07:33,870
诶

159
00:07:33,870 --> 00:07:37,850
这个阻塞、等待、睡眠都是呢，相同的含义

160
00:07:37,850 --> 00:07:40,680
那有了挂起之后啊

161
00:07:40,680 --> 00:07:46,080
阻塞状态的挂起有活跃和静止的区别

162
00:07:46,080 --> 00:07:48,770
那为什么会有挂起呢

163
00:07:48,770 --> 00:07:51,560
挂起的原因主要有两大类

164
00:07:51,560 --> 00:07:53,600
一类呢，是进程太多了

165
00:07:53,600 --> 00:07:55,520
储存资源不足了

166
00:07:55,520 --> 00:07:58,610
那我们这个时候呢，会把进程挂起

167
00:07:58,610 --> 00:08:01,500
然后呢，放到磁盘的兑换区

168
00:08:01,500 --> 00:08:04,180
那这个过程他都不在内存

169
00:08:04,180 --> 00:08:06,120
我们就用不了它吧

170
00:08:06,120 --> 00:08:11,850
所以挂起之后的这些进程必须唤醒

171
00:08:11,850 --> 00:08:14,250
或者说呢，激活恢复

172
00:08:14,250 --> 00:08:16,230
把它呢送回储存

173
00:08:16,230 --> 00:08:17,170
才能够呢

174
00:08:17,170 --> 00:08:19,550
唉，持续的去执行

175
00:08:19,550 --> 00:08:24,060
同样，对于就绪状态和运行状态来看

176
00:08:24,060 --> 00:08:26,430
就绪状态也有挂起

177
00:08:26,430 --> 00:08:27,390
它可以呢

178
00:08:27,390 --> 00:08:30,280
挂起之后就变成了禁止就绪

179
00:08:30,280 --> 00:08:33,200
恢复或者激活呢，就会变成活跃

180
00:08:33,200 --> 00:08:36,059
就需注意有一个区别

181
00:08:36,059 --> 00:08:39,270
运行状态是没有禁止运行的

182
00:08:39,270 --> 00:08:41,390
它一旦被挂起

183
00:08:41,390 --> 00:08:44,440
一定呢是进入就绪队列

184
00:08:44,440 --> 00:08:47,700
那由于涉及到挂起禁止，诶

185
00:08:47,700 --> 00:08:51,010
所以呢，是禁止就绪的状态

186
00:08:51,010 --> 00:08:53,170
所有挂起的地方啊

187
00:08:53,170 --> 00:08:55,190
都是呢进入就绪

188
00:08:55,190 --> 00:08:57,550
都是呢进入静止状态的

189
00:08:57,550 --> 00:09:01,350
那需要恢复和激活才会进入活跃状态

190
00:09:01,350 --> 00:09:03,360
运形态挂起之后

191
00:09:03,360 --> 00:09:05,540
进入的是静止就绪

192
00:09:05,540 --> 00:09:08,840
他不会立即再次被调度

193
00:09:08,840 --> 00:09:13,370
需要呢进入就绪备就绪队列重新排队

194
00:09:13,370 --> 00:09:16,420
那这是呢，五态模型挂

195
00:09:16,420 --> 00:09:17,620
还有一个原因呢

196
00:09:17,620 --> 00:09:19,920
是可能用户的自定义调

197
00:09:19,920 --> 00:09:22,320
自定义调试也可以呢

198
00:09:22,320 --> 00:09:24,370
作为挂起的原因

199
00:09:24,370 --> 00:09:27,160
我们也需要了解这个五态模型啊

200
00:09:27,160 --> 00:09:31,560
它的状态变迁、相应的条件、位置

201
00:09:32,400 --> 00:09:35,160
下面我们来看一下进程

202
00:09:35,160 --> 00:09:36,320
它的状态变迁

203
00:09:36,320 --> 00:09:40,960
在软件设计师考试当中所考察的形式

204
00:09:41,110 --> 00:09:43,850
在单处理机系统当中

205
00:09:43,850 --> 00:09:45,550
单处理机进程啊

206
00:09:45,550 --> 00:09:47,850
我们的 CPU 只能运行一个进程

207
00:09:47,850 --> 00:09:49,730
运行态只有一个进程

208
00:09:49,730 --> 00:09:53,510
采用先来先服务调度算法没有提到

209
00:09:53,510 --> 00:09:56,270
但我们可以能望文思义啊

210
00:09:56,270 --> 00:09:57,780
先来先服务

211
00:09:57,780 --> 00:10:00,380
谁先申请我们就先服务谁

212
00:10:00,380 --> 00:10:02,680
系统当中有四个进程

213
00:10:02,680 --> 00:10:04,110
P 1、二、三、四

214
00:10:04,110 --> 00:10:05,900
按这个顺序到达

215
00:10:05,900 --> 00:10:08,620
也就是先后顺序一、二、三、四

216
00:10:08,620 --> 00:10:11,980
服务顺序也应该是一、二、三、四

217
00:10:11,980 --> 00:10:15,740
那其中 P 1它是运行态的

218
00:10:19,060 --> 00:10:21,820
P 2是就绪态

219
00:10:25,680 --> 00:10:29,600
P 3、 P 4是等待状态

220
00:10:30,830 --> 00:10:34,290
那对于这个四个进程来看

221
00:10:34,290 --> 00:10:35,990
P 1做了什么

222
00:10:35,990 --> 00:10:38,190
唉，注意两个空要一起看哦

223
00:10:38,190 --> 00:10:40,380
因为第一个空没有任何意义

224
00:10:40,380 --> 00:10:42,340
那么 P 1、 P 2、 P 3、 P 

225
00:10:42,340 --> 00:10:45,280
分别达到的状态应该是谁

226
00:10:45,280 --> 00:10:46,540
那我们呢

227
00:10:46,540 --> 00:10:49,390
唉， A 前面的四个选项啊

228
00:10:49,390 --> 00:10:53,080
是他所做的 P 1所发生的变化

229
00:10:53,080 --> 00:10:55,140
后面呢，是发生变化之后

230
00:10:55,140 --> 00:10:57,660
四个进程它的状态变化

231
00:10:57,660 --> 00:10:59,170
那我们想一想

232
00:10:59,170 --> 00:11:02,100
这里只提到了三个状态吧

233
00:11:02,100 --> 00:11:04,250
运行、就绪以及等待

234
00:11:04,250 --> 00:11:05,310
大家想一想

235
00:11:05,310 --> 00:11:08,260
三态模型有什么特殊的地方啊

236
00:11:08,260 --> 00:11:13,740
等待状态是没有办法进入运行态的吧

237
00:11:15,570 --> 00:11:19,340
所以我们会发现 P 3和 P 4

238
00:11:19,340 --> 00:11:22,260
它是不可能在运形态的

239
00:11:22,260 --> 00:11:25,640
D 选项首先呢就可以排除了

240
00:11:25,640 --> 00:11:29,950
然后单处理机系统我们之前强调过

241
00:11:29,950 --> 00:11:33,470
里面只会有一个运行状态的进程

242
00:11:33,470 --> 00:11:35,850
会不会有两个运行态呢

243
00:11:35,850 --> 00:11:36,620
不会

244
00:11:36,620 --> 00:11:39,950
所以 B 选项呢，也是错误的

245
00:11:39,950 --> 00:11:42,410
那我们现在看到的只有

246
00:11:42,410 --> 00:11:44,450
A 选项和 C 选项了吧

247
00:11:44,450 --> 00:11:47,230
A 选项和 C 选项当中

248
00:11:47,230 --> 00:11:50,320
其中 A 选项有没有运行态啊

249
00:11:50,320 --> 00:11:51,120
没有

250
00:11:51,120 --> 00:11:55,700
它所发生的变化是 P 1从运行进入了等待

251
00:11:55,700 --> 00:11:58,930
那此时 CPU 是不是空闲的

252
00:11:58,930 --> 00:12:00,550
应该是空闲的

253
00:12:00,550 --> 00:12:02,470
而空闲情况下

254
00:12:02,470 --> 00:12:05,710
就绪队列的进程会被调度

255
00:12:05,710 --> 00:12:09,150
所以就绪队列当中如果有

256
00:12:09,150 --> 00:12:11,880
一定会变成运行状态

257
00:12:11,880 --> 00:12:15,400
A 选项这个说法呢，就是错误的

258
00:12:15,400 --> 00:12:17,510
那针对 C 选项来看

259
00:12:17,510 --> 00:12:22,570
唉，我们的 P 2从就绪变成了运行

260
00:12:25,720 --> 00:12:28,440
而就绪状态

261
00:12:28,440 --> 00:12:32,040
P 1从运行变成了就绪

262
00:12:32,460 --> 00:12:35,640
P 1从运行变成就绪

263
00:12:35,640 --> 00:12:37,740
说明发生了什么

264
00:12:39,720 --> 00:12:44,680
运行到就绪态是因为时间片到了

265
00:12:44,680 --> 00:12:47,780
所以在这里啊，应该是 A 选

266
00:12:47,780 --> 00:12:49,140
时间片到了

267
00:12:49,140 --> 00:12:51,890
所以 P 1进入了就绪态

268
00:12:51,890 --> 00:12:55,970
此时进程 AP 2会被 CPU 调度

269
00:12:55,970 --> 00:12:59,090
从就绪态进入运行状态

270
00:12:59,090 --> 00:13:01,660
这就是呢，这道题的分析过程

271
00:13:01,660 --> 00:13:04,360
前后两个空一起分析

272
00:13:04,360 --> 00:13:06,770
先排除错误的选项

273
00:13:06,770 --> 00:13:07,870
再来看呢

274
00:13:07,870 --> 00:13:13,250
诶，在正确的条件下去判断它所发生的变化

275
00:13:13,250 --> 00:13:17,650
这道题就是对进程状态变迁的考察

276
00:13:17,650 --> 00:13:21,880
那这里呢，给大家介绍到了进程的状态变迁

277
00:13:21,880 --> 00:13:23,380
大家需要掌握呢

278
00:13:23,380 --> 00:13:27,260
三态模型、五态模型它的变迁条件
