1
00:00:00,000 --> 00:00:04,800
下面我们展开来看一下段页式存储当中，诶

2
00:00:04,800 --> 00:00:09,430
段页式这种方式它有什么样的一些呢内容

3
00:00:09,430 --> 00:00:11,290
在这里我们主要呢

4
00:00:11,290 --> 00:00:13,650
需要大家了解到这种方式啊

5
00:00:13,650 --> 00:00:15,850
它的地址格式的分析

6
00:00:15,850 --> 00:00:18,010
对于断页式存储

7
00:00:18,010 --> 00:00:19,470
它其实是一种呢

8
00:00:19,470 --> 00:00:21,440
折中权衡的思想呢

9
00:00:21,440 --> 00:00:26,410
他折中选择了我们段式和夜市的一个呢

10
00:00:26,410 --> 00:00:27,680
组合方式

11
00:00:27,680 --> 00:00:28,950
他首先啊

12
00:00:28,950 --> 00:00:32,100
会将程序按逻辑呢划分成段

13
00:00:32,100 --> 00:00:33,610
那分段之后

14
00:00:33,610 --> 00:00:35,230
因为段太大了

15
00:00:35,230 --> 00:00:39,160
所以呢会造成内存空间碎片大浪费

16
00:00:39,160 --> 00:00:41,140
唉，然后内存利用率低吧

17
00:00:41,140 --> 00:00:42,600
那我们再把段呢

18
00:00:42,600 --> 00:00:44,140
划分的更小一些

19
00:00:44,140 --> 00:00:45,940
就可以呢形成页了

20
00:00:45,940 --> 00:00:50,280
从而呢，哎，又掌握到了页式存储它的一些优点

21
00:00:50,280 --> 00:00:51,940
把它呢结合进去了

22
00:00:51,940 --> 00:00:56,360
这就是呢，段页式存储它的整个方式啊

23
00:00:56,360 --> 00:01:00,870
首先呢，会将我们的程序划分成段

24
00:01:00,870 --> 00:01:03,250
那记录相应的段表

25
00:01:03,250 --> 00:01:04,610
它的段号

26
00:01:04,610 --> 00:01:06,190
那这种段

27
00:01:06,190 --> 00:01:10,030
我们原本呢，是记录段的基地值和断肠吧

28
00:01:10,030 --> 00:01:12,790
现在我们只需要呢

29
00:01:12,790 --> 00:01:15,170
将段划分成页之后

30
00:01:15,170 --> 00:01:18,560
记录相应它的页表形式

31
00:01:18,560 --> 00:01:23,080
再根据页表来调用到内存当中

32
00:01:23,080 --> 00:01:25,860
那找到对应的内存关系

33
00:01:25,860 --> 00:01:29,050
这是一个呢，相对比较复杂的过程啊

34
00:01:29,050 --> 00:01:30,750
那我们在这里呢

35
00:01:30,750 --> 00:01:32,930
了解到这种方式

36
00:01:32,930 --> 00:01:34,660
它的地址格式

37
00:01:34,660 --> 00:01:36,730
因为它既有夜市

38
00:01:36,730 --> 00:01:39,670
所以呢，它会有业内地址

39
00:01:39,670 --> 00:01:44,200
那业内地址的长度是固定大小的

40
00:01:44,200 --> 00:01:46,660
除了业内地址以外呢

41
00:01:46,660 --> 00:01:51,120
哎，它也有相应的页号记录在页表当中

42
00:01:51,120 --> 00:01:54,020
那这个页的大小的话

43
00:01:54,020 --> 00:01:55,440
唉，它是固定的

44
00:01:55,440 --> 00:01:58,860
那页的个数的话是不确定的

45
00:01:58,860 --> 00:02:01,090
一个段可能只有一个页

46
00:02:01,090 --> 00:02:03,230
可能呢有100个页

47
00:02:03,230 --> 00:02:04,980
那我们在这里呢

48
00:02:04,980 --> 00:02:10,720
页号的范围只是限定了页的个数的最大值

49
00:02:10,720 --> 00:02:13,470
它不是一个呢固定的取值

50
00:02:13,470 --> 00:02:14,720
大家要注意

51
00:02:14,720 --> 00:02:17,020
那我们除了叶以外

52
00:02:17,020 --> 00:02:18,240
它还有段码

53
00:02:18,240 --> 00:02:21,060
那最高位的是它的端号

54
00:02:21,060 --> 00:02:23,750
段的个数是不是确定的

55
00:02:23,750 --> 00:02:24,610
不是

56
00:02:24,610 --> 00:02:26,670
同样可以有一个段

57
00:02:26,670 --> 00:02:28,450
也可以有十个段

58
00:02:28,450 --> 00:02:31,170
那段号的数据范

59
00:02:31,170 --> 00:02:35,820
只是呢，限定了我们段的多少

60
00:02:35,820 --> 00:02:38,440
它的最大限定

61
00:02:38,450 --> 00:02:40,470
是不是固定值呢

62
00:02:40,470 --> 00:02:42,750
同样不是固定值

63
00:02:42,750 --> 00:02:44,210
那我们知道呢

64
00:02:44,210 --> 00:02:46,880
这里给我们的范围啊

65
00:02:46,880 --> 00:02:50,680
只是呢，说到了页面大小固定为

66
00:02:56,140 --> 00:02:58,820
固定为0~12位

67
00:02:58,820 --> 00:02:59,980
有多少位啊

68
00:02:59,980 --> 00:03:02,450
最大值减最小值加一

69
00:03:02,450 --> 00:03:06,030
固定为二的13次方大小

70
00:03:06,030 --> 00:03:08,200
那页的个数

71
00:03:08,200 --> 00:03:10,880
每个段可以有一个段

72
00:03:10,880 --> 00:03:12,400
一个叶，也可以呢

73
00:03:12,400 --> 00:03:13,880
有多个页哎

74
00:03:13,880 --> 00:03:16,580
页的个数最大为

75
00:03:17,880 --> 00:03:19,200
多少呢

76
00:03:19,200 --> 00:03:22,100
23-13加一

77
00:03:22,100 --> 00:03:24,380
二的11次方个

78
00:03:24,380 --> 00:03:27,600
那它的段的个数有多少呢

79
00:03:27,600 --> 00:03:29,920
诶，铜同样不是固定的

80
00:03:29,920 --> 00:03:33,000
它的段的个数同样呢，是最大

81
00:03:33,000 --> 00:03:34,550
或者说最多

82
00:03:34,550 --> 00:03:36,370
哎，为多少个

83
00:03:36,370 --> 00:03:39,730
那31-24加一

84
00:03:39,730 --> 00:03:42,130
应该是二的八次方个

85
00:03:42,130 --> 00:03:46,770
那这里呢，就是关于它的地址的一个呢，分析

86
00:03:46,770 --> 00:03:49,780
了解到这种分析过程就可以了

87
00:03:49,780 --> 00:03:52,010
目前在软件设计师考试

88
00:03:52,010 --> 00:03:53,910
对于段页式存储

89
00:03:53,910 --> 00:03:57,590
只考到了它的地址格式的分析

90
00:03:58,060 --> 00:04:01,930
那段页式存储有什么样的优点呢

91
00:04:01,930 --> 00:04:03,320
它可以啊

92
00:04:03,320 --> 00:04:05,540
解决空间浪费的问题吧

93
00:04:05,540 --> 00:04:07,640
空间浪费变小了

94
00:04:07,640 --> 00:04:11,430
那我们同样呢，可以按段来进行共享

95
00:04:11,430 --> 00:04:13,670
保护起来更容易了

96
00:04:13,670 --> 00:04:16,300
可以呢，有动态的链接

97
00:04:16,300 --> 00:04:21,029
但是很显然它的整个过程管理起来更复杂了

98
00:04:21,029 --> 00:04:22,120
那我们呢

99
00:04:22,120 --> 00:04:25,580
管理软件增加复杂性和开销呢

100
00:04:25,580 --> 00:04:27,190
也会随之增大

101
00:04:27,190 --> 00:04:31,080
我们需要保存更多的段表和页表

102
00:04:31,080 --> 00:04:35,630
占据的一些呢，硬件空间也会呢更多一些

103
00:04:35,630 --> 00:04:37,820
执行效率有多次

104
00:04:37,820 --> 00:04:40,680
查表速度呢，也会大大下降

105
00:04:40,680 --> 00:04:45,470
那关于页式存储、段式存储、段页式存

106
00:04:45,470 --> 00:04:47,640
它的形式和优缺

107
00:04:47,640 --> 00:04:51,560
也有可能呢，出现在一些理论考察当中

108
00:04:51,560 --> 00:04:53,690
让大家来判断正误

109
00:04:53,690 --> 00:04:55,970
而我们在软件设计师考试当中

110
00:04:55,970 --> 00:04:57,190
考得比较多的

111
00:04:57,190 --> 00:04:57,970
还是呢

112
00:04:57,970 --> 00:05:00,510
关于页式存储的地址转换

113
00:05:00,510 --> 00:05:02,980
段式存储的合法断地址判断

114
00:05:02,980 --> 00:05:06,770
以及呢段页式存储它的地址格式的分析

115
00:05:06,770 --> 00:05:11,540
还有意式存储当中页面置换的判断依据

116
00:05:11,540 --> 00:05:14,670
下面呢，我们来看一个段页式存储

117
00:05:14,670 --> 00:05:18,510
在软件设计师考察当中的真题体现

118
00:05:18,510 --> 00:05:20,140
那假设呢

119
00:05:20,140 --> 00:05:23,580
段页式存储格式呢，如以下结构

120
00:05:23,580 --> 00:05:26,520
那么该系统有什么样的特点呢

121
00:05:26,520 --> 00:05:29,180
其实这是我们刚刚举到的一个例子

122
00:05:29,180 --> 00:05:30,940
但是呢，没有讲完整

123
00:05:30,940 --> 00:05:33,390
那大致针对结构来看的话

124
00:05:33,390 --> 00:05:37,300
它的页面大小应该呢，是固定的

125
00:05:37,300 --> 00:05:40,040
二的13次方

126
00:05:40,040 --> 00:05:41,670
这个数值啊

127
00:05:41,670 --> 00:05:44,050
可以转换成 K 的话

128
00:05:44,050 --> 00:05:47,310
K 1 K 是二的十次方

129
00:05:47,500 --> 00:05:52,850
所以叶的大小是8 K 那段的大小

130
00:05:52,850 --> 00:05:54,870
每个段都有这么多

131
00:05:54,870 --> 00:05:57,290
还是最大允许有这么多呢

132
00:05:57,290 --> 00:06:00,210
唉，它的大小不是固定的

133
00:06:00,210 --> 00:06:05,320
所以是最大允许有二的十十一次方

134
00:06:05,320 --> 00:06:08,750
也就是2048个亿

135
00:06:08,750 --> 00:06:11,010
那对于盾来说

136
00:06:11,010 --> 00:06:14,050
最多呢，有二的八次方

137
00:06:14,050 --> 00:06:17,000
也就是256个端

138
00:06:17,000 --> 00:06:19,440
这就是对段页式存

139
00:06:19,440 --> 00:06:21,860
它地址格式的分析

140
00:06:21,860 --> 00:06:24,510
注意哪些是固定大小

141
00:06:24,510 --> 00:06:28,410
哪些是最多允许拥有的格书

142
00:06:28,410 --> 00:06:31,100
以上呢，就是给大家介绍的

143
00:06:31,100 --> 00:06:34,200
关于断页式存储三种方式

144
00:06:34,200 --> 00:06:36,940
大家呢，再自己啊巩固一下
