1
00:00:00,000 --> 00:00:02,160
下面我们展开来看一下

2
00:00:02,160 --> 00:00:04,660
加密技术与认证技术当中的

3
00:00:04,660 --> 00:00:07,250
对称加密与非对称加密

4
00:00:07,250 --> 00:00:08,960
那这是我们呢

5
00:00:08,960 --> 00:00:12,900
在加密技术里面的一个基础内容

6
00:00:12,900 --> 00:00:15,260
那我们首先呢，看到啊

7
00:00:15,260 --> 00:00:17,770
为什么要有加密呢

8
00:00:17,770 --> 00:00:22,320
唉，我们在网络当中通信的时候特别担心

9
00:00:22,320 --> 00:00:24,920
现在经常说到隐私权的问题吧

10
00:00:24,920 --> 00:00:29,880
特别担心呢，我们的一些隐私数据被泄露了

11
00:00:29,880 --> 00:00:31,160
所以加密啊

12
00:00:31,160 --> 00:00:32,720
它最主要的目的呢

13
00:00:32,720 --> 00:00:34,380
其实在于防泄漏

14
00:00:34,380 --> 00:00:37,600
那在我们的软件设计师考试当中

15
00:00:37,600 --> 00:00:40,820
对于加密与非对称加密的考察呢

16
00:00:40,820 --> 00:00:43,640
主要体现在两大类

17
00:00:43,640 --> 00:00:45,630
算法的归类问题

18
00:00:45,630 --> 00:00:47,030
会给大家呢

19
00:00:47,030 --> 00:00:48,730
一些算法选项

20
00:00:48,730 --> 00:00:49,550
问大家呢

21
00:00:49,550 --> 00:00:52,250
它是属于对称的还是呢非对称的

22
00:00:52,250 --> 00:00:55,320
或者呢，可能还会涉及到摘要算

23
00:00:55,320 --> 00:00:57,020
进行了一个混淆

24
00:00:57,020 --> 00:00:59,340
让大家呢，来进行匹配

25
00:00:59,340 --> 00:01:01,050
那我们在这里呢

26
00:01:01,050 --> 00:01:03,520
除了了解加密算法以外啊

27
00:01:03,520 --> 00:01:06,520
还需要去掌握对称以及呢

28
00:01:06,520 --> 00:01:09,000
非对称加密的基本过程

29
00:01:09,000 --> 00:01:10,730
这是我们在后面呢

30
00:01:10,730 --> 00:01:13,410
讲加密技术应用的时

31
00:01:13,410 --> 00:01:15,090
很重要的一个呢

32
00:01:15,090 --> 00:01:16,750
基础的知识

33
00:01:16,750 --> 00:01:18,890
那下面我们来看一下

34
00:01:18,890 --> 00:01:22,750
首先看到的是对称加密基数

35
00:01:22,860 --> 00:01:25,530
什么叫做对称加密呢

36
00:01:25,530 --> 00:01:28,030
我们有一个发送者想要呢

37
00:01:28,030 --> 00:01:29,890
给接收者发消息

38
00:01:29,890 --> 00:01:31,730
诶，你给你对象发信息

39
00:01:31,730 --> 00:01:34,670
那肯定不希望呢，被别人看到呀

40
00:01:34,670 --> 00:01:36,690
那在这个过程当中

41
00:01:36,690 --> 00:01:38,700
我们发送的消

42
00:01:38,700 --> 00:01:43,060
在网络当中、互联网当中进行流通

43
00:01:43,060 --> 00:01:45,910
这个流通的过程就可能存

44
00:01:45,910 --> 00:01:48,610
攻击者盯着你、偷窥你啊

45
00:01:48,610 --> 00:01:50,510
防止我们的信息泄露

46
00:01:50,510 --> 00:01:53,960
那我们要不想防止信息泄漏

47
00:01:53,960 --> 00:01:58,400
就需要呢，对我们的信息来进行加密

48
00:01:58,400 --> 00:02:00,690
那加密之后，唉

49
00:02:00,690 --> 00:02:05,020
也许我们的攻击者截获了这个报文啊

50
00:02:05,020 --> 00:02:08,000
它就是一大串的看不懂的

51
00:02:08,000 --> 00:02:10,380
没有意义的字符串的

52
00:02:10,380 --> 00:02:11,910
这种情况下

53
00:02:11,910 --> 00:02:15,360
加密之后传输的我们叫做密文

54
00:02:15,360 --> 00:02:19,720
这种密文攻击者截获也是没有用的

55
00:02:19,720 --> 00:02:22,000
因为它无法破解

56
00:02:22,000 --> 00:02:26,510
那我们的接收者接收的也是密文

57
00:02:26,510 --> 00:02:28,000
接收之后呢

58
00:02:28,000 --> 00:02:31,780
它可以通过相应的解密算法去进行解密

59
00:02:31,780 --> 00:02:33,140
从而呢，哎

60
00:02:33,140 --> 00:02:34,910
得到我们的铭文

61
00:02:34,910 --> 00:02:36,540
然后进行阅读

62
00:02:36,540 --> 00:02:39,580
这里的加密算法和解密算法

63
00:02:39,580 --> 00:02:44,190
是我们在通信之前就已经呢，双方约定好的

64
00:02:44,190 --> 00:02:48,190
那所谓的加密的过程或者解密的过程啊

65
00:02:48,190 --> 00:02:51,280
其实都是数学计算的过程

66
00:02:51,280 --> 00:02:54,880
在数学计算的过程当中会涉及到

67
00:02:54,880 --> 00:02:57,380
会涉及到一些呢，参数

68
00:02:57,380 --> 00:03:01,490
加密算法呢，我们说它的参数叫做呢加密密钥

69
00:03:01,490 --> 00:03:02,860
解密算法呢

70
00:03:02,860 --> 00:03:06,180
唉，它的这个参数我们叫做呢解密密钥

71
00:03:06,180 --> 00:03:09,420
如果 K 1和 KD 这两个必要

72
00:03:09,420 --> 00:03:12,430
这两个密钥相等的时候

73
00:03:12,430 --> 00:03:14,090
这种加密过程呢

74
00:03:14,090 --> 00:03:16,780
我们就叫做对称加密

75
00:03:16,780 --> 00:03:19,800
加密和解密使用相同密钥

76
00:03:19,800 --> 00:03:21,990
就叫做呢，对称加密了

77
00:03:21,990 --> 00:03:24,950
那我们在这个过程当中会发现，诶

78
00:03:24,950 --> 00:03:28,940
我们得双方约定好相应的密钥吧

79
00:03:28,940 --> 00:03:33,960
这个过程当中有没有一个完全安全的信道

80
00:03:33,960 --> 00:03:37,870
来帮助我们传递这个密钥？ K 呢

81
00:03:37,870 --> 00:03:40,480
如果说有这个密钥

82
00:03:40,480 --> 00:03:43,560
为什么我们不直接传递信息呢

83
00:03:43,560 --> 00:03:44,340
对不对

84
00:03:44,340 --> 00:03:48,660
那这种安全信道其实是很难去实现的

85
00:03:48,660 --> 00:03:50,660
我们大家在看一些

86
00:03:50,660 --> 00:03:53,850
现在经常出一些抗日的谍战篇

87
00:03:53,850 --> 00:03:55,750
唉，有一个东西很重要

88
00:03:55,750 --> 00:03:56,430
叫什么呢

89
00:03:56,430 --> 00:03:58,000
叫做密码本

90
00:03:58,000 --> 00:03:59,610
那我们会发现啊

91
00:03:59,610 --> 00:04:01,550
在传递密码本的时

92
00:04:01,550 --> 00:04:03,750
需要呢，付出很大的一个代价

93
00:04:03,750 --> 00:04:04,600
为什么呢

94
00:04:04,600 --> 00:04:08,560
因为如果密码本被别人获取了

95
00:04:08,560 --> 00:04:12,090
那么我们可以通过这个密码本来加密

96
00:04:12,090 --> 00:04:13,310
获取的

97
00:04:13,310 --> 00:04:17,470
敌方呢，也可以通过这个密码本来进行解密了

98
00:04:17,470 --> 00:04:21,040
其实这也是典型的对称加密的过程

99
00:04:21,040 --> 00:04:23,540
用的是同一本密码本

100
00:04:23,540 --> 00:04:24,640
并且的话

101
00:04:24,640 --> 00:04:25,860
诶，它很难呢

102
00:04:25,860 --> 00:04:30,760
通过一个完全安全的信道去传输密码本

103
00:04:30,760 --> 00:04:31,880
这就是呢

104
00:04:31,880 --> 00:04:34,260
对称加密的过程

105
00:04:34,400 --> 00:04:36,420
那我们总结一下

106
00:04:36,420 --> 00:04:38,920
对于对称加密来看的话

107
00:04:38,920 --> 00:04:42,300
它的加密密钥啊，是相等的

108
00:04:42,300 --> 00:04:45,090
那其实这种相等的密钥

109
00:04:45,090 --> 00:04:46,950
它的加密算法呢

110
00:04:46,950 --> 00:04:50,010
相对来说不会很复杂

111
00:04:50,010 --> 00:04:54,130
那也就是说呢，它的加密强度不高

112
00:04:54,130 --> 00:04:57,520
不太复杂的计算意味着好破解

113
00:04:57,520 --> 00:04:59,470
但是呢，效率高

114
00:04:59,470 --> 00:05:01,190
所以我们会发现呢

115
00:05:01,190 --> 00:05:02,850
对称加密啊

116
00:05:02,850 --> 00:05:07,130
它呢，一般会用在大量铭文上

117
00:05:07,230 --> 00:05:12,050
相比于我们后面提到的非对称加密

118
00:05:12,050 --> 00:05:15,550
我们会发现对称加密的速度快很多

119
00:05:15,550 --> 00:05:17,050
所以非对称加密

120
00:05:17,050 --> 00:05:19,590
是无法对大量铭文来加密的

121
00:05:19,590 --> 00:05:22,120
这是呢，对称加密的特点

122
00:05:22,120 --> 00:05:23,960
涉及到大量铭文

123
00:05:23,960 --> 00:05:27,340
比如说呢，到了赵继这样的级别

124
00:05:27,340 --> 00:05:30,190
我们一般都会选择对称加密了

125
00:05:30,190 --> 00:05:33,960
那我们在对称加密的过程当中呢

126
00:05:33,960 --> 00:05:36,100
密钥分发比较困难

127
00:05:36,100 --> 00:05:37,920
因为没有完全

128
00:05:37,920 --> 00:05:40,130
诶，安全的信道

129
00:05:40,130 --> 00:05:43,550
那这就是我们呢，关于对称加

130
00:05:43,550 --> 00:05:45,820
它的一个呢，实现的过程

131
00:05:45,820 --> 00:05:48,880
我们在这里还需要大家掌握到

132
00:05:48,880 --> 00:05:51,450
对称加密的算法

133
00:05:51,450 --> 00:05:53,150
对称加密啊

134
00:05:53,150 --> 00:05:55,110
因为密钥大家呢

135
00:05:55,110 --> 00:05:57,230
都有才能进行通信

136
00:05:57,230 --> 00:06:00,520
所以也叫做呢，共享密钥

137
00:06:00,520 --> 00:06:03,020
那它的加密算法主要呢

138
00:06:03,020 --> 00:06:04,890
给大家提到以下几种

139
00:06:04,890 --> 00:06:06,920
不需要了解具体过程

140
00:06:06,920 --> 00:06:11,870
只需要呢，知道它是属于对称加密就可以了啊

141
00:06:11,870 --> 00:06:13,950
首先， DSS 算法

142
00:06:13,950 --> 00:06:16,520
这是呢，最基本的对称加密

143
00:06:16,520 --> 00:06:18,630
其次，三重 DES 

144
00:06:18,630 --> 00:06:21,780
它会用两个 DES 密钥

145
00:06:21,780 --> 00:06:23,080
分别呢，唉

146
00:06:23,080 --> 00:06:25,000
通过我们的铭文

147
00:06:25,000 --> 00:06:27,600
然后用 K 1加密一次

148
00:06:27,600 --> 00:06:29,480
唉，变成密文一

149
00:06:29,480 --> 00:06:33,630
再用呢 K 2解密一次，变成密文二

150
00:06:33,630 --> 00:06:35,490
这个过程虽然呢

151
00:06:35,490 --> 00:06:37,750
我们用到了两个密钥

152
00:06:37,750 --> 00:06:39,450
但是呢有三重过程

153
00:06:39,450 --> 00:06:41,850
所以叫做呢三重 D 

154
00:06:41,850 --> 00:06:44,790
其次还有 IC 杠

155
00:06:44,790 --> 00:06:46,510
以及呢 IDEA 

156
00:06:46,510 --> 00:06:47,340
知道呢

157
00:06:47,340 --> 00:06:52,000
这四种是我们典型的对称加密密钥就可以了

158
00:06:52,000 --> 00:06:56,350
考试当中我们的软设是不涉及算法过程的

159
00:06:56,350 --> 00:06:58,770
只涉及它的分类

160
00:06:58,770 --> 00:07:02,650
那我们呢再来看一下非对称加密的过程

161
00:07:02,650 --> 00:07:07,440
同样呢有发送者给接收者发送消息

162
00:07:07,440 --> 00:07:11,370
那在这个发送消息的过程当中

163
00:07:11,370 --> 00:07:13,730
同样呢要经过互联网

164
00:07:13,730 --> 00:07:18,220
要避免呢互联网攻击者去窃取一些信息

165
00:07:18,220 --> 00:07:20,910
但是在这个过程当中

166
00:07:20,910 --> 00:07:23,190
他们的加密密钥呢

167
00:07:23,190 --> 00:07:26,900
不再使用相同的对称加密技术了

168
00:07:26,900 --> 00:07:28,810
在这个过程当中啊

169
00:07:28,810 --> 00:07:32,650
我们会给发送者 A 哎，赋予呢

170
00:07:32,650 --> 00:07:35,970
以组成对的密钥、公钥和私钥

171
00:07:35,970 --> 00:07:37,550
A 的公钥和私钥

172
00:07:37,550 --> 00:07:38,930
接收者 B 呢

173
00:07:38,930 --> 00:07:42,080
也有自己的公钥和私钥

174
00:07:42,080 --> 00:07:48,100
相应的私钥和公钥一定是成对使用的

175
00:07:59,120 --> 00:08:00,480
也就是说

176
00:08:00,480 --> 00:08:03,760
当我们选择其中作为其中一个

177
00:08:03,760 --> 00:08:05,350
作为参数的时候

178
00:08:05,350 --> 00:08:09,210
A 的公钥加密必须用 A 的私钥解密

179
00:08:09,210 --> 00:08:11,010
A 的公钥呢

180
00:08:11,010 --> 00:08:12,990
哎，如果 A 的私钥加密

181
00:08:12,990 --> 00:08:16,120
必须呢， A 的公钥拿来解密

182
00:08:16,120 --> 00:08:19,840
同样，如果你用 B 的公钥加密的话

183
00:08:19,840 --> 00:08:21,280
由谁来解密啊

184
00:08:21,280 --> 00:08:24,190
只有 B 的私钥才能解密

185
00:08:24,190 --> 00:08:25,730
同样呢，唉

186
00:08:25,730 --> 00:08:26,930
同理可得

187
00:08:26,930 --> 00:08:30,270
当我们用 B 的私钥加密的时候

188
00:08:30,270 --> 00:08:33,669
只有呢， B 的公钥能拿来解密

189
00:08:33,669 --> 00:08:38,090
那这就是呢，公钥一定是成对使用的

190
00:08:38,090 --> 00:08:41,150
那这种成对的过程当中

191
00:08:41,150 --> 00:08:43,730
公钥是对外公开的

192
00:08:43,730 --> 00:08:46,380
私钥呢，是拿在自己手上

193
00:08:46,380 --> 00:08:49,190
其他任何人都不知道的

194
00:08:49,190 --> 00:08:52,880
那我怎么去处理这种成对的关系呢

195
00:08:52,880 --> 00:08:55,080
这些公钥和私钥啊

196
00:08:55,080 --> 00:08:59,340
由我们的密钥管理中心来负责分发

197
00:08:59,340 --> 00:09:03,430
那像我们如果有一个公司想要呢

198
00:09:03,430 --> 00:09:05,370
一组成对的公钥和私钥

199
00:09:05,370 --> 00:09:08,140
可以自己写了去申请登记

200
00:09:08,140 --> 00:09:10,440
也可以呢，直接去申请

201
00:09:10,440 --> 00:09:13,880
那我们的 KMC 以及相关的一些机构啊

202
00:09:13,880 --> 00:09:15,820
会做一些呢审核工作

203
00:09:15,820 --> 00:09:18,050
给你颁发之后

204
00:09:18,050 --> 00:09:20,290
它不会保留私钥啊

205
00:09:20,290 --> 00:09:22,710
我们的公钥是对外公开

206
00:09:22,710 --> 00:09:25,810
私钥呢，是没有任何人能够拿到的

207
00:09:25,810 --> 00:09:27,590
诶，只有自己才有

208
00:09:27,590 --> 00:09:29,720
这是一个呢私有屋

209
00:09:29,720 --> 00:09:32,580
那我们在这个过程当中啊

210
00:09:32,580 --> 00:09:34,020
想一想

211
00:09:34,420 --> 00:09:40,000
如果我在加密的过程当中选择了一个密钥

212
00:09:40,000 --> 00:09:42,160
哎，我们现在有哪些可

213
00:09:42,160 --> 00:09:46,590
自己的 PAA 、 ASA 、对方的 PB 

214
00:09:46,590 --> 00:09:49,700
这三个密钥是我们能拿到手的

215
00:09:49,700 --> 00:09:53,280
那利用这些密钥加密之后

216
00:09:53,280 --> 00:09:55,840
对应的需要哪些密钥解密呢

217
00:09:55,840 --> 00:09:58,640
唉， pa 需要 SA 解密

218
00:09:58,640 --> 00:10:01,790
SA 需要呢 pa 解密

219
00:10:01,790 --> 00:10:05,050
PB 需要 SB 解密

220
00:10:05,050 --> 00:10:09,540
那我们看一看哪些东西是攻击者

221
00:10:09,540 --> 00:10:12,210
网络上任何人都能拿到的

222
00:10:12,210 --> 00:10:14,900
pa 是任何人都有的

223
00:10:14,900 --> 00:10:19,000
所以这一组加密过程是不可以的

224
00:10:19,000 --> 00:10:22,770
唉，因为这个加密它是没有任何保密性

225
00:10:22,770 --> 00:10:24,980
所有人都能解密了

226
00:10:24,980 --> 00:10:26,460
那其次

227
00:10:26,460 --> 00:10:31,000
如果说需要发送者的私钥才能解密的话

228
00:10:31,000 --> 00:10:32,690
有人能打开锁吗

229
00:10:32,690 --> 00:10:35,050
唉，没有任何人能打开

230
00:10:35,050 --> 00:10:38,430
因为只有 A 才有 SA 

231
00:10:38,430 --> 00:10:42,510
所以这种加密方式也不可取

232
00:10:42,510 --> 00:10:45,680
我们在做非对称加密的时候啊

233
00:10:45,680 --> 00:10:50,450
会用接收者他的公钥来加密

234
00:10:50,450 --> 00:10:54,110
因为这是网上都能拿到的

235
00:10:54,270 --> 00:10:58,680
用 A 的公钥加密之后变成了密文

236
00:10:58,680 --> 00:11:01,820
这个秘闻在网络上流传

237
00:11:01,820 --> 00:11:03,860
别人拿着有没有用

238
00:11:03,860 --> 00:11:05,450
诶，都没有用

239
00:11:05,450 --> 00:11:08,240
只有接收者 B 拿了之后

240
00:11:08,240 --> 00:11:11,840
用自己的私钥来进行解密

241
00:11:11,840 --> 00:11:14,510
从而呢，可以得到明文

242
00:11:14,510 --> 00:11:19,130
这个过程呢，就是我们非对称加密的过程

243
00:11:19,130 --> 00:11:24,490
那我们可以把公钥和私钥看作箱

244
00:11:24,490 --> 00:11:27,250
以及呢，匹配的钥匙

245
00:11:27,250 --> 00:11:29,120
那我们在网络上呢

246
00:11:29,120 --> 00:11:31,730
会推发很多的箱子

247
00:11:31,730 --> 00:11:34,940
任何人都能拿箱子放东西

248
00:11:34,940 --> 00:11:38,810
但是呢，只有我自己才有锁能够打开

249
00:11:38,810 --> 00:11:41,840
那我们的发送者想要呢

250
00:11:41,840 --> 00:11:44,160
给接收者发消息的时候

251
00:11:44,160 --> 00:11:47,680
就申请一个接收者的箱子来打包

252
00:11:47,680 --> 00:11:50,280
那打包发过去之后

253
00:11:50,280 --> 00:11:54,600
只有接收者才有自己的钥匙能够打开

254
00:11:54,600 --> 00:11:56,030
这就是一个呢

255
00:11:56,030 --> 00:11:58,510
非对称加密的过程

256
00:11:58,510 --> 00:12:02,130
那对于非对称加密而言的话

257
00:12:02,130 --> 00:12:07,520
它的加密密钥和解密密钥显然不一样了

258
00:12:07,520 --> 00:12:09,900
所以叫做非对称

259
00:12:09,900 --> 00:12:12,730
并且的话，我们的密钥注意啊

260
00:12:12,730 --> 00:12:15,870
一定是成对来使用的

261
00:12:15,870 --> 00:12:18,830
这个加密的强度比较高

262
00:12:18,830 --> 00:12:22,870
所以它的加密速度非常慢

263
00:12:23,070 --> 00:12:25,730
我们要加密啊，比较小的

264
00:12:25,730 --> 00:12:28,050
比如说一些兆级别的数据

265
00:12:28,050 --> 00:12:30,210
可能都要呢几个小时

266
00:12:30,210 --> 00:12:34,110
所以说呢，它不适合对大量明文加密

267
00:12:34,110 --> 00:12:36,910
一定呢，要注意这个区别

268
00:12:36,910 --> 00:12:41,960
那长常见的非对称加密的算法有哪些呢

269
00:12:41,960 --> 00:12:46,540
哎，因为我们的非对称加密公钥是公开的

270
00:12:46,540 --> 00:12:48,440
所以它也叫做呢

271
00:12:48,440 --> 00:12:51,020
公开密钥加密算法

272
00:12:51,020 --> 00:12:52,640
那我们知道呢

273
00:12:52,640 --> 00:12:57,150
包括 RSA 算法和 ECC 算法就可以了

274
00:12:57,150 --> 00:13:01,550
ECC 算法呢，也叫做椭圆双曲线算法

275
00:13:01,550 --> 00:13:06,380
这是呢非对称加密需要大家掌握的内容

276
00:13:06,380 --> 00:13:07,890
那其实我们啊

277
00:13:07,890 --> 00:13:10,730
在整个加密的过程当中

278
00:13:10,730 --> 00:13:12,450
所有技术的应用呢

279
00:13:12,450 --> 00:13:14,740
大部分都是啊基于对称

280
00:13:14,740 --> 00:13:16,180
或者呢非对

281
00:13:16,180 --> 00:13:19,390
或者呢唉混合使用的过程

282
00:13:19,390 --> 00:13:21,720
比如说呢，大家想一想

283
00:13:21,720 --> 00:13:23,120
非对称加

284
00:13:23,120 --> 00:13:25,960
既然不能对大量明文加密

285
00:13:25,960 --> 00:13:27,910
我可以对什么加密啊

286
00:13:27,910 --> 00:13:33,110
其实非对称可以对对称密钥来加密

287
00:13:33,740 --> 00:13:40,220
用接收者的公钥对我们的对称密钥

288
00:13:40,220 --> 00:13:41,020
k 

289
00:13:45,540 --> 00:13:47,000
进行加密

290
00:13:47,000 --> 00:13:49,300
那加密之后诶

291
00:13:49,300 --> 00:13:52,960
我们是不是解决了安全信道传输

292
00:13:52,960 --> 00:13:55,020
对称加密密钥的问题啊

293
00:13:55,020 --> 00:14:00,210
因为网上其他人拿到这个箱子都没有用

294
00:14:00,210 --> 00:14:03,930
只有接收者 B 才能打开箱子

295
00:14:03,930 --> 00:14:05,890
取出这个密钥吧

296
00:14:05,890 --> 00:14:09,550
这个其实是我们非常著名的一个呢

297
00:14:09,550 --> 00:14:11,850
数字信封技术

298
00:14:16,080 --> 00:14:18,080
它的使用呢

299
00:14:18,080 --> 00:14:20,600
就是将我们的对称密

300
00:14:20,600 --> 00:14:22,890
塞进了一个呢信封

301
00:14:22,890 --> 00:14:27,600
那这个信封确保只有接收者才会呢收到

302
00:14:27,600 --> 00:14:29,600
才能够打开

303
00:14:29,600 --> 00:14:31,250
从而确保呢

304
00:14:31,250 --> 00:14:33,330
我们通信过程当中

305
00:14:33,330 --> 00:14:35,930
对称密钥是安全的

306
00:14:35,930 --> 00:14:39,140
保证我们的信息是安全的

307
00:14:39,140 --> 00:14:40,440
这就是一个呢

308
00:14:40,440 --> 00:14:43,030
结合使用的过程

309
00:14:43,030 --> 00:14:45,750
那这个就是我们给大家讲到

310
00:14:45,750 --> 00:14:48,770
对称以及呢，非对称加密技术

311
00:14:48,770 --> 00:14:51,200
它在我们的考试当中啊

312
00:14:51,200 --> 00:14:53,220
直接体现主要呢

313
00:14:53,220 --> 00:14:56,120
还是算法的判断匹配

314
00:14:56,120 --> 00:14:58,270
那在间接体现上

315
00:14:58,270 --> 00:14:59,310
我们在后面呢

316
00:14:59,310 --> 00:15:00,910
还会介绍到一些

317
00:15:00,910 --> 00:15:05,180
对称与非对称加密的一些综合应用的基数

318
00:15:05,180 --> 00:15:08,720
下面呢，我们来看一下对称与非对称加密

319
00:15:08,720 --> 00:15:12,560
在我们软件设计师考试真题当中的体现

320
00:15:12,560 --> 00:15:16,480
那问的是 DS 是什么算法

321
00:15:16,480 --> 00:15:20,670
这是典型的对算法分类的考察

322
00:15:20,670 --> 00:15:22,620
那我们在这里

323
00:15:22,620 --> 00:15:27,880
DEES 3重、 DEES 2、 

324
00:15:27,880 --> 00:15:30,610
杠五、 i de ea 

325
00:15:30,610 --> 00:15:35,530
这些都是典型的对称加密密钥

326
00:15:35,530 --> 00:15:37,760
那对称加密

327
00:15:37,760 --> 00:15:40,080
因为对称的过程当中

328
00:15:40,080 --> 00:15:44,910
我们的发送方和接收方都会拿到密钥 K 

329
00:15:44,910 --> 00:15:46,090
所以我们说呢

330
00:15:46,090 --> 00:15:48,750
大家共享的密钥叫做呢

331
00:15:48,750 --> 00:15:51,580
共享密钥加密算法

332
00:15:51,580 --> 00:15:55,530
与之对应的公开密钥加密

333
00:15:55,530 --> 00:15:59,670
它对应的是非对称加密算法

334
00:16:01,620 --> 00:16:07,120
典型的非对称加密算法是 RSA 以及呢

335
00:16:07,120 --> 00:16:11,190
ECC 算法、椭圆双曲线算法

336
00:16:11,190 --> 00:16:17,090
那数字签名和认证是我们数字签名的应用

337
00:16:17,090 --> 00:16:19,320
我们签名的过程啊

338
00:16:19,320 --> 00:16:21,460
其实它也是一个加密的过程

339
00:16:21,460 --> 00:16:24,180
只是呢我们把它叫做签名

340
00:16:24,180 --> 00:16:28,560
那我们对这个加密过程进行解密的时候呢

341
00:16:28,560 --> 00:16:29,990
就叫做认真

342
00:16:29,990 --> 00:16:33,020
这是呢，数字签名和认证技术

343
00:16:33,020 --> 00:16:35,180
我们在后面呢应用的部

344
00:16:35,180 --> 00:16:37,750
还会呢给大家进行说明

345
00:16:37,750 --> 00:16:39,650
这些呢就是关于啊

346
00:16:39,650 --> 00:16:42,240
对称与非对称加密技术

347
00:16:42,240 --> 00:16:45,440
大家呢一定要掌握这个基础知识

348
00:16:45,440 --> 00:16:48,260
我们后面的应用呢，才好去熟悉
