1
00:00:00,000 --> 00:00:00,640
接下来

2
00:00:00,640 --> 00:00:04,320
我们先来了解一下程序设计语言当中啊

3
00:00:04,320 --> 00:00:07,840
编译程序与解释程序它们的区别

4
00:00:07,840 --> 00:00:11,010
那我们在程序设计语言当中

5
00:00:11,010 --> 00:00:13,530
语言呢，可以分为编译型语言

6
00:00:13,530 --> 00:00:15,410
还有呢，解释型语言

7
00:00:15,410 --> 00:00:18,410
汇编语言呢，就没有给大家进行介绍了

8
00:00:18,410 --> 00:00:20,170
那这两种语言

9
00:00:20,170 --> 00:00:23,060
它们都是呢，高级程序员

10
00:00:23,060 --> 00:00:24,770
都有词法分析

11
00:00:24,770 --> 00:00:27,330
语法分析和语义分析的过程

12
00:00:27,330 --> 00:00:31,290
但是呢，它们存在不同的一些地方

13
00:00:31,290 --> 00:00:34,710
编译型语言呢，会用编译器来进行呢

14
00:00:34,710 --> 00:00:36,710
哎，解释进行翻译

15
00:00:36,710 --> 00:00:40,820
解释型语言呢，会通过解释器来进行翻译

16
00:00:40,820 --> 00:00:42,230
这里要注意啊

17
00:00:42,230 --> 00:00:44,910
我们在这里所指的编译器

18
00:00:44,910 --> 00:00:48,260
是针对编译性语言来进行翻译的

19
00:00:48,260 --> 00:00:51,260
但实际上我们在开发过程当中

20
00:00:51,260 --> 00:00:56,080
会将所有的程序设计语言开发工具呢

21
00:00:56,080 --> 00:00:58,220
都称之为编译器

22
00:00:58,220 --> 00:00:59,450
所以在这里呢

23
00:00:59,450 --> 00:01:02,430
它是理论上做了一个编译器的定义

24
00:01:02,430 --> 00:01:03,850
和解释器的定义

25
00:01:03,850 --> 00:01:06,810
做到区分这两个概念就可以了

26
00:01:06,810 --> 00:01:08,420
那他们啊

27
00:01:08,420 --> 00:01:09,660
编译型语言

28
00:01:09,660 --> 00:01:13,770
通过编译器会生成具体的目标代码

29
00:01:13,770 --> 00:01:18,570
这个目标代码它的程序是可以直接执行的

30
00:01:18,570 --> 00:01:22,250
执行过程当中不需要编译器参与

31
00:01:22,250 --> 00:01:25,160
所以执行的效率比较高

32
00:01:25,160 --> 00:01:28,650
但是灵活性差、可移植性差

33
00:01:28,650 --> 00:01:32,990
而解释型语言它不会生成目标代码

34
00:01:32,990 --> 00:01:37,290
它所生成的是一些中间代码

35
00:01:38,820 --> 00:01:41,980
那它生成的这些中间代码

36
00:01:41,980 --> 00:01:44,100
在执行的过程当中

37
00:01:44,100 --> 00:01:47,280
是需要解释器参与与执行

38
00:01:47,280 --> 00:01:49,620
边解释边执行的

39
00:01:49,620 --> 00:01:52,380
那这种既然一边解释一边执行

40
00:01:52,380 --> 00:01:55,060
显然执行效率会比较低

41
00:01:55,060 --> 00:01:56,950
但是它灵活性好

42
00:01:56,950 --> 00:01:59,150
可移植性呢比较强

43
00:01:59,150 --> 00:02:01,030
我们在做编译的时候

44
00:02:01,030 --> 00:02:03,500
可以说呢是诊断语句

45
00:02:03,500 --> 00:02:06,250
整段代码一次性编译结束

46
00:02:06,250 --> 00:02:08,830
而解释器它执行的时候

47
00:02:08,830 --> 00:02:11,050
解释的时候是逐句

48
00:02:11,050 --> 00:02:14,390
或者说逐段的来进行解释执行

49
00:02:14,390 --> 00:02:17,830
那就是呢编译与解释的区别

50
00:02:17,830 --> 00:02:20,180
在我们软件设计师考试当中

51
00:02:20,180 --> 00:02:22,900
经常出现在选择题当中

52
00:02:22,900 --> 00:02:26,920
让大家呢判断一些描述的真物

53
00:02:27,580 --> 00:02:32,000
下面呢，是编译器和解释器的执行过程

54
00:02:32,000 --> 00:02:36,920
那我们的编译器啊和解释器都有词法分析

55
00:02:36,920 --> 00:02:39,700
语法分析和语义分析的过程啊

56
00:02:39,700 --> 00:02:41,250
高级程序语言呢

57
00:02:41,250 --> 00:02:44,280
诶，都是呢，会经过这三个阶段

58
00:02:44,280 --> 00:02:47,790
那编译器它还可以有中间代码

59
00:02:47,790 --> 00:02:49,250
生成和代码优化

60
00:02:49,250 --> 00:02:52,030
最终呢，生成目标代码

61
00:02:52,030 --> 00:02:53,820
而解释器的话

62
00:02:53,820 --> 00:02:56,180
它会通过中间代码

63
00:02:56,180 --> 00:02:59,460
可以高级程序员直接到机器语言

64
00:02:59,460 --> 00:03:03,680
或者呢通过中间代码来进行执行

65
00:03:03,680 --> 00:03:06,610
那这是呢，解释器它的执行过程

66
00:03:06,610 --> 00:03:08,820
他们不是完全一致的

67
00:03:08,820 --> 00:03:12,490
但是有一部分工作呢，做的是一样的

68
00:03:12,490 --> 00:03:13,370
那这是呢

69
00:03:13,370 --> 00:03:17,070
编译器与解释器它的一个呢对比

70
00:03:17,070 --> 00:03:19,640
下面我们来看一下这一部分

71
00:03:19,640 --> 00:03:22,670
在软件设计师考试真题当中的体现

72
00:03:22,670 --> 00:03:26,580
以下关于高级程序设计语言实现的

73
00:03:26,580 --> 00:03:27,940
编译和解释

74
00:03:27,940 --> 00:03:29,080
两种方式

75
00:03:29,080 --> 00:03:31,470
叙述当中正确的是谁

76
00:03:31,470 --> 00:03:34,640
那注意，我们找的是正确选项

77
00:03:34,640 --> 00:03:39,230
A 选项，编译程序不参与我们用户的执行

78
00:03:39,230 --> 00:03:41,570
而解释器需要参与

79
00:03:41,570 --> 00:03:43,310
解释程序需要参

80
00:03:43,310 --> 00:03:45,500
这种说法是正确的

81
00:03:45,500 --> 00:03:50,540
B 选项，编译器程序可以用高级程序语言来写

82
00:03:50,540 --> 00:03:54,450
解释程序只能用汇编语言进行编写

83
00:03:54,450 --> 00:03:57,340
这里没有相关的要求

84
00:03:57,340 --> 00:04:00,360
编译程序和解释程序啊

85
00:04:00,360 --> 00:04:03,660
关于这两个程序的开发

86
00:04:03,660 --> 00:04:07,180
它都是呢可以用高级程序员来编写的

87
00:04:07,180 --> 00:04:10,190
所以这种说法是错误的

88
00:04:10,190 --> 00:04:12,760
C 选项，编译方式处理

89
00:04:12,760 --> 00:04:15,640
原处理源程序的时候不进行优化

90
00:04:15,640 --> 00:04:18,000
而解释方式进行优化

91
00:04:18,000 --> 00:04:20,660
它们都可以进行优化

92
00:04:20,660 --> 00:04:23,950
D 选项，编译方式不生成原程序

93
00:04:23,950 --> 00:04:24,890
目标程序

94
00:04:24,890 --> 00:04:26,990
而解释方式生成

95
00:04:26,990 --> 00:04:28,610
这里说反了

96
00:04:28,610 --> 00:04:31,560
解释方式不生成目标程序

97
00:04:31,560 --> 00:04:34,320
而编译方式会生成

98
00:04:34,320 --> 00:04:37,820
那这是关于编译和解释的对比

99
00:04:37,820 --> 00:04:39,630
大家呢需要掌握啊

100
00:04:39,630 --> 00:04:41,670
就是呢，这两种方式

101
00:04:41,670 --> 00:04:44,210
他们所做的一些呢，细微的区别
