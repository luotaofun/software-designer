1
00:00:00,000 --> 00:00:03,380
接下来我们看到的是演化模型

2
00:00:03,380 --> 00:00:05,680
圆形模型、螺旋模型呢

3
00:00:05,680 --> 00:00:08,130
都是典型的演化模型

4
00:00:08,130 --> 00:00:10,150
像圆形和螺旋

5
00:00:10,150 --> 00:00:12,410
在我们软件设计师考试当中

6
00:00:12,410 --> 00:00:15,230
考察频度呢，还是有一些的

7
00:00:15,230 --> 00:00:17,860
那我们简单来看一下呢

8
00:00:17,860 --> 00:00:19,540
对于演化模型

9
00:00:19,540 --> 00:00:22,460
它是具有迭代的这样的思想的过程

10
00:00:22,460 --> 00:00:24,790
模型什么叫迭代呢

11
00:00:24,790 --> 00:00:26,010
迭代的过程

12
00:00:26,010 --> 00:00:30,270
就是一个一轮又一轮的开发循环的过程

13
00:00:30,270 --> 00:00:32,840
那它每一轮可以呢

14
00:00:32,840 --> 00:00:35,390
使得开发人员解决一些问题

15
00:00:35,390 --> 00:00:37,610
从而多轮迭代之后

16
00:00:37,610 --> 00:00:41,450
逐步地开发出更完整的软件版本

17
00:00:41,450 --> 00:00:43,870
我们把这个过程呢，叫做迭代

18
00:00:43,870 --> 00:00:46,360
或者呢，叫做演化的思想

19
00:00:46,360 --> 00:00:49,310
那我们的圆形和瀑布模型

20
00:00:49,310 --> 00:00:51,720
都是典型的演化模型

21
00:00:51,720 --> 00:00:54,060
演化模型呢，特别适合于

22
00:00:54,060 --> 00:00:57,550
对需求缺乏准确认识的这种情况

23
00:00:57,550 --> 00:00:59,960
那我们呢，来看一下

24
00:00:59,960 --> 00:01:02,400
首先是圆形模型

25
00:01:02,400 --> 00:01:06,880
圆形模型呢，我们也叫做快速圆形

26
00:01:06,880 --> 00:01:10,970
它本身呢，是从沟通交流开始的

27
00:01:10,970 --> 00:01:15,180
然后呢，唉，我们与用户来沟通出来之后呢

28
00:01:15,180 --> 00:01:17,940
去制定一个快速的版本

29
00:01:17,940 --> 00:01:19,920
然后快速计划之后呢

30
00:01:19,920 --> 00:01:23,340
以快速设计的方式建立一个模型

31
00:01:23,340 --> 00:01:26,400
构建原型之后呢，交付给用户

32
00:01:26,400 --> 00:01:28,880
我们进一步的反馈

33
00:01:28,880 --> 00:01:30,770
诶，了解到用户反馈

34
00:01:30,770 --> 00:01:32,770
再做一轮新的修改

35
00:01:32,770 --> 00:01:36,040
从而呢，唉，交流出新的一个呢

36
00:01:36,040 --> 00:01:36,400
唉

37
00:01:36,400 --> 00:01:37,280
快速计划

38
00:01:37,280 --> 00:01:41,350
快速设计方式的建模和构建原型的过程

39
00:01:41,350 --> 00:01:45,480
从而最终完成我们系统的开发

40
00:01:45,940 --> 00:01:48,720
那对圆形来看的话

41
00:01:48,720 --> 00:01:50,400
这种圆形模型啊

42
00:01:50,400 --> 00:01:52,120
我们有多种圆形

43
00:01:52,120 --> 00:01:54,010
第一种划分维度呢

44
00:01:54,010 --> 00:01:58,790
它可以分为抛弃型圆形和演化型圆形

45
00:02:01,420 --> 00:02:04,140
所谓的抛弃型原型啊

46
00:02:04,140 --> 00:02:06,000
就是说这个圆形呢

47
00:02:06,000 --> 00:02:07,640
我们拿来建模之后

48
00:02:07,640 --> 00:02:11,160
在下一轮过程当中到最终的产品

49
00:02:11,160 --> 00:02:14,500
这一个初步的原型会被呢抛弃掉

50
00:02:14,500 --> 00:02:17,950
原演化型原型呢，就是最终啊

51
00:02:17,950 --> 00:02:19,840
我们初步的这个模型

52
00:02:19,840 --> 00:02:22,420
会作用在我们的系统当中

53
00:02:22,420 --> 00:02:25,100
有这样的一种呢划分思想

54
00:02:25,100 --> 00:02:30,860
其次呢，圆形它可以划分为探索型原型

55
00:02:32,680 --> 00:02:35,920
然后，实验型原型

56
00:02:37,300 --> 00:02:40,660
以及我们的演化型圆形

57
00:02:41,370 --> 00:02:43,510
那这个过程当中

58
00:02:43,510 --> 00:02:45,490
探索型原型的话

59
00:02:45,490 --> 00:02:49,560
它主要是探索我们的用户需求

60
00:02:49,560 --> 00:02:53,180
然后呢，对提出的几种方案

61
00:02:53,180 --> 00:02:56,500
来验证这些方案的可行性

62
00:02:56,500 --> 00:02:58,300
实验型原型呢

63
00:02:58,300 --> 00:03:00,680
它针对的是一些算法

64
00:03:00,680 --> 00:03:05,460
来验证某一种算法它是否可行

65
00:03:05,460 --> 00:03:07,120
演化型原型呢

66
00:03:07,120 --> 00:03:10,140
跟我们前面的演化呢，是同样的意思

67
00:03:10,140 --> 00:03:13,940
那它是一个呢，逐步演进的过程

68
00:03:13,940 --> 00:03:16,310
最终呢，这个初步的原型啊

69
00:03:16,310 --> 00:03:20,430
会保留在我们的最终系统产品当中

70
00:03:20,430 --> 00:03:22,110
软件产品当中

71
00:03:22,110 --> 00:03:24,350
那这是圆形模型

72
00:03:24,350 --> 00:03:28,370
它也是典型的圆形开发方法的思想

73
00:03:28,370 --> 00:03:31,630
适合于需求不明确

74
00:03:31,630 --> 00:03:34,720
需求经常变化的情况

75
00:03:34,720 --> 00:03:37,760
那当系统规模不是很大

76
00:03:37,760 --> 00:03:39,680
也不太复杂的时候呢

77
00:03:39,680 --> 00:03:42,710
我们可以采用该方法比较好

78
00:03:42,710 --> 00:03:44,620
这是圆形模型

79
00:03:44,620 --> 00:03:46,660
圆型方法的思想

80
00:03:46,660 --> 00:03:49,390
下面我们来看一下螺旋模型

81
00:03:49,390 --> 00:03:50,810
它就比较复杂了

82
00:03:50,810 --> 00:03:54,500
那它形成的这种像漩涡式的形

83
00:03:54,500 --> 00:03:56,070
就是呢，螺旋

84
00:03:56,070 --> 00:04:00,880
它的每一圈都是一轮的迭代的过程

85
00:04:00,880 --> 00:04:03,830
而在我们这一圈的过程当中

86
00:04:03,830 --> 00:04:06,970
我们会发现它的实现过程

87
00:04:06,970 --> 00:04:11,080
是不是跟我们之前所提到的瀑布模型

88
00:04:11,080 --> 00:04:12,340
又很相似啦

89
00:04:12,340 --> 00:04:14,130
所以我们会发现呢

90
00:04:14,130 --> 00:04:14,530
诶

91
00:04:14,530 --> 00:04:16,510
我们的螺旋模型

92
00:04:16,510 --> 00:04:20,779
是由瀑布模型和演化模型结合而成的

93
00:04:20,779 --> 00:04:22,920
那在这个过程当中

94
00:04:22,920 --> 00:04:26,540
我们比较特殊的是螺旋模型

95
00:04:26,540 --> 00:04:29,920
它引入了风险分析的过程

96
00:04:30,280 --> 00:04:35,860
首先啊，螺旋模型它是有一轮一轮的迭代

97
00:04:35,860 --> 00:04:38,700
那迭代的过程本身呢

98
00:04:38,700 --> 00:04:40,580
就是演化模型的思想

99
00:04:40,580 --> 00:04:44,530
那每一轮迭代又将软件开发过程

100
00:04:44,530 --> 00:04:46,730
划分成了四个阶段

101
00:04:46,730 --> 00:04:53,020
制定计划、风险分析、实施工程以及呢，客户评估

102
00:04:53,020 --> 00:04:55,350
那在这个过程当中

103
00:04:55,350 --> 00:04:59,470
它的细节划分跟我们的瀑布模型的阶段呢

104
00:04:59,470 --> 00:05:01,620
有一定的关联性

105
00:05:01,620 --> 00:05:05,180
特殊的地方就在于风险分析

106
00:05:05,180 --> 00:05:07,340
只要提到风险

107
00:05:07,340 --> 00:05:10,180
无论是什么风险、项目风险啊

108
00:05:10,180 --> 00:05:11,610
还是其他的风险

109
00:05:11,610 --> 00:05:16,200
我们都会呢，认为需要呢，选择螺旋模型

110
00:05:16,200 --> 00:05:18,770
那在这个过程当中诶

111
00:05:18,770 --> 00:05:20,450
他会考虑风险

112
00:05:20,450 --> 00:05:24,690
所以啊，它是唯一适合于高风险的项目

113
00:05:24,690 --> 00:05:27,740
那一般什么样的项目风险比较高啊

114
00:05:27,740 --> 00:05:30,990
它的规模大、比较复杂的情况下

115
00:05:30,990 --> 00:05:33,480
风险一般都会比较高

116
00:05:33,480 --> 00:05:38,640
所以我们的螺旋模型特别适合于庞大、复

117
00:05:38,640 --> 00:05:41,900
并且具有高风险的系统开发过程

118
00:05:41,900 --> 00:05:47,560
那这是我们呢给大家提到的典型的演化模型

119
00:05:47,560 --> 00:05:50,230
圆形以及呢，螺旋模型

120
00:05:50,230 --> 00:05:52,660
下面我们来看一下这一部分

121
00:05:52,660 --> 00:05:56,280
在软件设计师考试真题当中的体现

122
00:05:56,280 --> 00:06:00,140
以下关于系统原型的叙述当中

123
00:06:00,140 --> 00:06:02,400
不正确的是什么

124
00:06:02,400 --> 00:06:05,510
那下面四个选项都是呢

125
00:06:05,510 --> 00:06:07,400
对圆形的一个描述

126
00:06:07,400 --> 00:06:11,040
A 选项可以帮助导出系统需求

127
00:06:11,040 --> 00:06:14,100
并且验证需求的有效性

128
00:06:14,100 --> 00:06:16,400
这是探索型原型

129
00:06:16,400 --> 00:06:17,500
它的一个呢

130
00:06:17,500 --> 00:06:19,580
诶，能够实现的东西

131
00:06:20,730 --> 00:06:25,980
B 选项可以用来探索软件的解决方案

132
00:06:25,980 --> 00:06:29,890
解决方案在我们的开发过程当中

133
00:06:29,890 --> 00:06:34,210
一般呢，都可以与它的解决方案的算

134
00:06:34,210 --> 00:06:35,390
等同起来了

135
00:06:35,390 --> 00:06:36,820
所以它是呢

136
00:06:36,820 --> 00:06:40,190
实验型原型所实现的内容

137
00:06:40,190 --> 00:06:45,220
C 选项可以用来指导我们的代码优化

138
00:06:45,220 --> 00:06:46,780
那我们想一想啊

139
00:06:46,780 --> 00:06:49,500
我们在考虑原型用法的时候

140
00:06:49,500 --> 00:06:51,160
它一般是用来做什么的

141
00:06:51,160 --> 00:06:54,090
用来做需求明确的

142
00:06:54,090 --> 00:06:56,280
所以啊，我们会发现

143
00:06:56,280 --> 00:06:59,640
虽然原型它会有多个阶段

144
00:06:59,640 --> 00:07:03,580
但它更偏重于需求分析的阶段吧

145
00:07:03,580 --> 00:07:06,060
那我们在这里呢，也有一个思想

146
00:07:06,060 --> 00:07:09,570
我们前面介绍的软件开发方法有很多种吧

147
00:07:09,570 --> 00:07:13,280
这些方法并不是一定要单一使用的

148
00:07:13,280 --> 00:07:15,180
它可以单一使用

149
00:07:15,180 --> 00:07:16,980
也可以结合使用

150
00:07:16,980 --> 00:07:20,940
所以圆形方法经常结合结构化开发

151
00:07:20,940 --> 00:07:24,520
或者结合面向对象开发的过程

152
00:07:24,520 --> 00:07:27,940
那我们在这里圆形方

153
00:07:27,940 --> 00:07:30,380
圆形模型一般不会呢

154
00:07:30,380 --> 00:07:32,480
指导代码的优化

155
00:07:32,480 --> 00:07:34,050
它可以用来呢

156
00:07:34,050 --> 00:07:36,830
支持用户界面的设计

157
00:07:36,830 --> 00:07:40,510
那这是我们讲到的最初的界面原型吧

158
00:07:40,510 --> 00:07:43,180
这种圆形一般呢，由美工来做

159
00:07:43,180 --> 00:07:46,140
都可以呢，与用户来进行沟通呢

160
00:07:46,140 --> 00:07:49,750
所以这里呢，唉，它的这种用户界面啊

161
00:07:49,750 --> 00:07:52,610
一般在最后会保留在系统当中

162
00:07:52,610 --> 00:07:56,170
它是一种呢，演化圆形的使用

163
00:07:56,650 --> 00:07:59,490
那这里只有呢， C 选

164
00:07:59,490 --> 00:08:03,440
不是我们系统原型它的一个目标

165
00:08:03,440 --> 00:08:07,880
那这是关于原型它的考察

166
00:08:07,880 --> 00:08:11,770
下面这道题呢，是对螺旋模型的考察

167
00:08:11,770 --> 00:08:15,820
以下关于螺旋它的叙述当中

168
00:08:15,820 --> 00:08:17,520
不正确的是谁

169
00:08:17,520 --> 00:08:20,520
看清楚还是找不正确的啊

170
00:08:20,520 --> 00:08:23,870
A 选项它是风险驱动的

171
00:08:23,870 --> 00:08:26,140
唉，这个说法是正确的

172
00:08:26,140 --> 00:08:28,500
那风险驱动我们的开发人员

173
00:08:28,500 --> 00:08:32,020
必须要有了相应的风险评估知识和经验吧

174
00:08:32,020 --> 00:08:34,650
否则的话是应对不了风险的

175
00:08:34,650 --> 00:08:35,549
B 选项

176
00:08:35,549 --> 00:08:39,490
它可以降低过多测试或者测试不足

177
00:08:39,490 --> 00:08:40,659
带来的风险

178
00:08:40,659 --> 00:08:44,080
所有的风险他都会呢去做考虑

179
00:08:44,080 --> 00:08:47,170
所以这个说法呢，也是正确的

180
00:08:47,170 --> 00:08:50,680
C 选项它包含维护的周期

181
00:08:50,680 --> 00:08:54,510
因此维护和开发之间没有本质的区别

182
00:08:54,510 --> 00:08:56,980
这种说法其实也是正确的

183
00:08:56,980 --> 00:09:00,080
它的每一轮迭代都考虑维护的话

184
00:09:00,080 --> 00:09:01,920
它跟我们具体的开发过

185
00:09:01,920 --> 00:09:05,250
就基本上呢没有本质区别了

186
00:09:05,250 --> 00:09:08,930
D 选项不适合大型软件开发

187
00:09:08,930 --> 00:09:11,110
这个说法呢是错误的

188
00:09:11,110 --> 00:09:13,130
它适用于

189
00:09:14,720 --> 00:09:19,760
庞大的、复杂的

190
00:09:20,960 --> 00:09:23,440
并且风险

191
00:09:23,440 --> 00:09:26,200
并且具有高风险的

192
00:09:30,360 --> 00:09:31,800
系统

193
00:09:33,760 --> 00:09:37,020
所以不适合大型软件开发

194
00:09:37,020 --> 00:09:39,920
这个说法呢，肯定是错误的

195
00:09:39,920 --> 00:09:43,660
那这是对螺旋模型的考察

196
00:09:43,660 --> 00:09:46,460
我们再来看呢，下面这道题

197
00:09:46,460 --> 00:09:49,530
那某个企业想要开发一个呢

198
00:09:49,530 --> 00:09:50,930
企业信息管理系统

199
00:09:50,930 --> 00:09:54,030
系统功能与多个部门的业务相关

200
00:09:54,030 --> 00:09:58,660
现在呢，希望这个系统能够呢，尽快投入使用

201
00:09:58,660 --> 00:10:02,800
然后呢，系统的功能可以在使用过程当中

202
00:10:02,800 --> 00:10:04,840
不断的去改善

203
00:10:04,840 --> 00:10:08,430
那么我们在这里采用哪一个过程

204
00:10:08,430 --> 00:10:10,110
模型比较适合呢

205
00:10:10,110 --> 00:10:13,130
首先看到改善的话说明什么

206
00:10:13,130 --> 00:10:14,750
它会发生变化

207
00:10:14,750 --> 00:10:18,610
所以瀑布模型肯定是不合适的

208
00:10:18,610 --> 00:10:22,960
那我们在这里能不能选择圆形呢

209
00:10:22,960 --> 00:10:25,440
原型其实它有一个特点啊

210
00:10:25,440 --> 00:10:28,340
我们在前面介绍软件开发方法的时候

211
00:10:28,340 --> 00:10:29,520
其实有很多种

212
00:10:29,520 --> 00:10:33,030
这些开发方法并不是独立来使用的

213
00:10:33,030 --> 00:10:34,790
它是可以独

214
00:10:34,790 --> 00:10:37,050
也可以结合来使用的

215
00:10:37,050 --> 00:10:40,620
所以圆形方法经常结合结构化

216
00:10:40,620 --> 00:10:44,010
或者呢，结合面向对象来进行开发

217
00:10:44,010 --> 00:10:45,010
为什么呢

218
00:10:45,010 --> 00:10:48,500
因为圆形它更加倾向于

219
00:10:48,500 --> 00:10:51,470
偏重于对需求分析的明确

220
00:10:51,470 --> 00:10:56,800
所以圆形模型它强调的是去明确需求

221
00:10:56,800 --> 00:11:01,800
而不是呢，这种早期投入使用的软件

222
00:11:01,800 --> 00:11:05,700
所以在这里 B 选项其实并不合适

223
00:11:05,700 --> 00:11:08,760
那我们的螺旋模型的话

224
00:11:08,760 --> 00:11:11,090
它会强调一个呢

225
00:11:11,090 --> 00:11:12,840
风险分析的内容

226
00:11:12,840 --> 00:11:16,780
这道题题干没有提到任何风险的字眼

227
00:11:16,780 --> 00:11:18,180
所以你在这里呢

228
00:11:18,180 --> 00:11:21,350
我们也不会选择螺旋模型

229
00:11:21,350 --> 00:11:26,090
那我们在这里使用的其实是演化模型

230
00:11:26,530 --> 00:11:29,210
为什么使用演化模型呢

231
00:11:29,210 --> 00:11:32,200
我们在讲演化的特点的时候提到啊

232
00:11:32,200 --> 00:11:34,040
演化模型可以呢

233
00:11:34,040 --> 00:11:37,600
使开发者逐步来完善

234
00:11:37,600 --> 00:11:40,650
逐步来完善我们的整个系统

235
00:11:40,650 --> 00:11:42,450
所以这个过程当中

236
00:11:42,450 --> 00:11:45,440
它就是一个演化迭代的过程

237
00:11:45,440 --> 00:11:49,040
那它与另一种开发思想诶

238
00:11:49,040 --> 00:11:50,440
另一种开发模型

239
00:11:50,440 --> 00:11:53,350
增量模型也有一定的相似性

240
00:11:53,350 --> 00:11:57,410
但是像增量它本身的话会强

241
00:11:57,410 --> 00:12:00,070
每一轮迭代都是一个呢

242
00:12:00,070 --> 00:12:01,810
可发行的版本

243
00:12:01,810 --> 00:12:03,470
可使用的版本

244
00:12:03,470 --> 00:12:06,500
并且第一个是核心的增量

245
00:12:06,500 --> 00:12:11,430
而这里强调的是尽快使用和完善的过程

246
00:12:11,430 --> 00:12:14,860
用演化模型会更合适一些

247
00:12:14,860 --> 00:12:17,210
那有些同学可能会说

248
00:12:17,210 --> 00:12:20,230
圆形和螺旋都是演化模型啊

249
00:12:20,230 --> 00:12:22,810
为什么这里不能选择 B 选项呢

250
00:12:22,810 --> 00:12:24,070
我们要注意

251
00:12:24,070 --> 00:12:27,290
当这些选项同时出现的时候

252
00:12:27,290 --> 00:12:31,210
最贴近的应该是演化模型本身

253
00:12:31,210 --> 00:12:34,920
所以这道题应该选择的是 C 选项
