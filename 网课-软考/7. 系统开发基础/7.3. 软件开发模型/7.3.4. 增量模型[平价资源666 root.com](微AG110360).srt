1
00:00:00,000 --> 00:00:03,410
下面呢，我们来看到增量模型

2
00:00:03,410 --> 00:00:06,580
增量模型也是软件开发模型的一种

3
00:00:06,580 --> 00:00:08,960
在我们软件设计师考试当中啊

4
00:00:08,960 --> 00:00:11,090
也出现了好几次

5
00:00:11,090 --> 00:00:15,090
那增量模型它又有什么样的特点呢

6
00:00:15,090 --> 00:00:16,580
增量模型啊

7
00:00:16,580 --> 00:00:20,320
我们会发现它将整个系统划分成了

8
00:00:20,320 --> 00:00:22,020
诶，不同的增量

9
00:00:22,020 --> 00:00:26,070
每一个增量都有分析、设计、编码、测试的过程

10
00:00:26,070 --> 00:00:29,550
那这个过程跟瀑布的思想是不是很相似啊

11
00:00:29,550 --> 00:00:32,630
所以它结合了瀑布的瀑布的思想

12
00:00:32,630 --> 00:00:36,030
那每一个过程完成的一个增量

13
00:00:36,030 --> 00:00:38,270
最终呢，提交完整的系统

14
00:00:38,270 --> 00:00:41,480
又有演化迭代的思想在里面吧

15
00:00:41,480 --> 00:00:43,530
那这个过程当中啊

16
00:00:43,530 --> 00:00:48,010
我们的增量模型它有一定的强调

17
00:00:48,010 --> 00:00:49,940
他强调什么呢

18
00:00:49,940 --> 00:00:55,840
它会将核心产品作为第一个增量来开发

19
00:00:55,840 --> 00:00:59,570
那我们每一轮迭代的时候

20
00:00:59,570 --> 00:01:03,550
都会包含核心的增量在这里

21
00:01:03,550 --> 00:01:06,850
那这种核心的增量开发之后

22
00:01:06,850 --> 00:01:11,530
在下一轮迭代里面会增加一个新的增量

23
00:01:11,530 --> 00:01:14,700
第三轮又增加了一个新的增量

24
00:01:14,700 --> 00:01:18,740
但是每一轮一这个增量都在

25
00:01:18,740 --> 00:01:23,460
所以到从最初到最终核心增量

26
00:01:23,460 --> 00:01:26,240
它经过了最多的使用

27
00:01:26,240 --> 00:01:28,660
经过了最多的测试

28
00:01:28,660 --> 00:01:31,940
那也是用户呢最满意的部分

29
00:01:31,940 --> 00:01:33,290
我们想一想啊

30
00:01:33,290 --> 00:01:35,670
在做一些信息系统开发的时候

31
00:01:35,670 --> 00:01:37,090
我们会发现，诶

32
00:01:37,090 --> 00:01:40,820
其实很多地方都有二八原则这种说法啊

33
00:01:40,820 --> 00:01:42,600
用户用的最多的

34
00:01:42,600 --> 00:01:45,180
其实只有20%的功能吧

35
00:01:45,180 --> 00:01:48,100
那我们确保这20%的功能

36
00:01:48,100 --> 00:01:49,510
不出现意外的话

37
00:01:49,510 --> 00:01:52,080
用户对于这个系统的使

38
00:01:52,080 --> 00:01:53,340
直观感受呢

39
00:01:53,340 --> 00:01:55,440
就会有了很大的提高

40
00:01:55,440 --> 00:01:57,240
所以我们每一轮

41
00:01:57,240 --> 00:02:00,120
就将这一部分的核心增量呢

42
00:02:00,120 --> 00:02:01,860
都会进行一些

43
00:02:01,860 --> 00:02:03,260
诶，一些测试

44
00:02:03,260 --> 00:02:04,960
经过用户的使用

45
00:02:04,960 --> 00:02:10,400
那这个过程其实保证核心是最稳定、最优的

46
00:02:10,610 --> 00:02:14,060
那我们在其他的增量当中呢

47
00:02:14,060 --> 00:02:18,160
每一轮这种迭代的过程都会呢

48
00:02:18,160 --> 00:02:21,160
形成可交付的产品

49
00:02:21,160 --> 00:02:23,270
可交付的版本

50
00:02:23,270 --> 00:02:25,810
所以每一轮迭代都会呢

51
00:02:25,810 --> 00:02:28,500
发布一个可用版本给用户

52
00:02:28,500 --> 00:02:31,620
那它的整个开发思想啊

53
00:02:31,620 --> 00:02:35,080
会让用户呢，使用感受更好一些

54
00:02:35,080 --> 00:02:37,890
因为最初就有可使用的版本

55
00:02:37,890 --> 00:02:42,150
然后呢，到最后最稳定的是自己最常用的版本

56
00:02:42,150 --> 00:02:45,610
那这种开发方法有没有缺陷呢

57
00:02:45,610 --> 00:02:48,990
有，到底哪些功能是核心的

58
00:02:48,990 --> 00:02:52,130
我们应该如何去划分一个迭代

59
00:02:52,130 --> 00:02:54,490
一轮迭代当中的增量呢

60
00:02:54,490 --> 00:02:57,940
所以划分模块、划分增量的工作

61
00:02:57,940 --> 00:03:00,020
对于我们的开发者来说

62
00:03:00,020 --> 00:03:02,230
难度会比较大

63
00:03:02,230 --> 00:03:05,210
那它会将需求分段呢

64
00:03:05,210 --> 00:03:08,550
成一个系列的增量产品

65
00:03:08,550 --> 00:03:11,730
每一个增量啊，我们都可以呢

66
00:03:11,730 --> 00:03:13,960
分别来进行开发

67
00:03:13,960 --> 00:03:16,640
这就是呢，增量模型

68
00:03:16,640 --> 00:03:19,180
那我们来看一下增量模型

69
00:03:19,180 --> 00:03:22,880
在软件设计师考试当中的考察形式

70
00:03:22,880 --> 00:03:26,720
以下关于增量开发模型叙述当中

71
00:03:26,720 --> 00:03:28,920
不正确的是谁

72
00:03:28,920 --> 00:03:31,700
对于增量开发模型的话

73
00:03:31,700 --> 00:03:34,680
A 选项不必等到整个系统开发完成

74
00:03:34,680 --> 00:03:35,680
就可以用了

75
00:03:35,680 --> 00:03:37,300
第一个增量开发完

76
00:03:37,300 --> 00:03:39,910
就是一个交付的可使用版本

77
00:03:39,910 --> 00:03:44,720
B 选项可以使用较早的增量构建作为原型

78
00:03:44,720 --> 00:03:48,660
从而获得稍后的增量构建需求

79
00:03:48,660 --> 00:03:52,450
那我们在这个过程当中想一想，诶

80
00:03:52,450 --> 00:03:57,220
好像我们初始的增量可以给用户去使用吧

81
00:03:57,220 --> 00:03:59,410
那使用的过程当中

82
00:03:59,410 --> 00:04:01,850
用户以此作为线索

83
00:04:01,850 --> 00:04:05,050
是不是有利于获取后面的需求啊

84
00:04:05,050 --> 00:04:07,570
其实是有一定帮助的

85
00:04:07,570 --> 00:04:09,330
所以增量的思想

86
00:04:09,330 --> 00:04:10,930
它的迭代过程呢

87
00:04:10,930 --> 00:04:13,910
有一定的圆形演化的过程

88
00:04:13,910 --> 00:04:17,290
这种说法也是呢，正确的

89
00:04:17,570 --> 00:04:22,810
C 选项优先级最高的服务最先交付

90
00:04:22,810 --> 00:04:26,060
这样最中间最重要的服务呢

91
00:04:26,060 --> 00:04:28,370
可以接受最多的测试

92
00:04:28,370 --> 00:04:31,700
这就是我们说到的核心增量说法

93
00:04:31,700 --> 00:04:33,650
也是呢，正确的

94
00:04:33,650 --> 00:04:39,120
最后 D 选项有利于进行好的模块划分

95
00:04:39,120 --> 00:04:41,230
那是不是有利于

96
00:04:41,230 --> 00:04:44,270
其实我们对于增量来开发的过程当中

97
00:04:44,270 --> 00:04:47,150
最难做的就是模块划分

98
00:04:47,150 --> 00:04:51,530
所以在这里 D 选项的说法是错误的

99
00:04:51,530 --> 00:04:55,130
那这里呢就是关于增量它的考察
