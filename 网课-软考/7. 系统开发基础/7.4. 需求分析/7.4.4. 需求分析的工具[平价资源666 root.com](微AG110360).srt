1
00:00:00,000 --> 00:00:02,340
下面我们展开来看一下呢

2
00:00:02,340 --> 00:00:05,100
需求分析当中用到的工

3
00:00:05,100 --> 00:00:06,320
这一部分啊

4
00:00:06,320 --> 00:00:09,930
我们会给大家介绍到数据流图与数据字典

5
00:00:09,930 --> 00:00:12,530
那数据流图与数据字典的话

6
00:00:12,530 --> 00:00:15,400
在我们软件设计师上午题会考察

7
00:00:15,400 --> 00:00:19,660
下午题也会呢，出现在试题一的部分

8
00:00:19,660 --> 00:00:21,940
所以它的一些内容啊

9
00:00:21,940 --> 00:00:24,920
是我们做下午题的基础知识

10
00:00:24,920 --> 00:00:25,920
除此以外

11
00:00:25,920 --> 00:00:28,360
我们还会给大家介绍到一些呢

12
00:00:28,360 --> 00:00:31,040
诶，一起使用的一些工具

13
00:00:31,040 --> 00:00:33,910
那针对需求分析的工具

14
00:00:33,910 --> 00:00:36,930
在我们软件设计师上午题的考察当中

15
00:00:36,930 --> 00:00:39,830
出现的频率还是比较高的

16
00:00:39,830 --> 00:00:43,880
那我们在需求分析阶段应用的工具啊

17
00:00:43,880 --> 00:00:46,840
主要就是数据流图与数据字典

18
00:00:46,840 --> 00:00:49,320
那对于数据流图

19
00:00:49,320 --> 00:00:52,160
它是用图形化的语言来表述

20
00:00:52,160 --> 00:00:54,640
数据加工和转换的过程

21
00:00:54,640 --> 00:00:56,280
在这个过程当中

22
00:00:56,280 --> 00:00:59,170
数据是用单一的名词来表示

23
00:00:59,170 --> 00:01:01,390
到底包含哪些细节内容

24
00:01:01,390 --> 00:01:02,750
其实是看不到的

25
00:01:02,750 --> 00:01:06,220
那无论是用户与我们的技术人员

26
00:01:06,220 --> 00:01:09,580
或者技术人员与产品之间来进行沟通的时候

27
00:01:09,580 --> 00:01:13,520
很多细节上的内容根本就没有办法体现

28
00:01:13,520 --> 00:01:14,690
那怎么办呢

29
00:01:14,690 --> 00:01:17,880
我们不懂得就可以去查字典

30
00:01:17,880 --> 00:01:22,410
所以会用数据字典来记录相应的数据

31
00:01:22,410 --> 00:01:25,210
它里面所包含的数据流图当中

32
00:01:25,210 --> 00:01:27,120
所包含的数据项

33
00:01:27,120 --> 00:01:30,200
二者一般是结合使用的

34
00:01:30,200 --> 00:01:34,320
那我们在讲数据库设计阶段的时候

35
00:01:34,320 --> 00:01:35,480
它有一个呢

36
00:01:35,480 --> 00:01:38,440
唉，需求分析阶段也有这样的产物

37
00:01:38,440 --> 00:01:40,520
数据流图和数据字典

38
00:01:40,520 --> 00:01:42,520
我们在数据流图当中

39
00:01:42,520 --> 00:01:45,920
对于它的名词会用数据字典来解释

40
00:01:45,920 --> 00:01:49,540
而其中还有一些动作部分的话

41
00:01:49,540 --> 00:01:52,860
我们还有详细的、更加详细的表

42
00:01:52,860 --> 00:01:56,500
就会用到呢，判定表、判定数这样的工具

43
00:01:56,500 --> 00:01:58,990
判定表和判定数啊

44
00:01:58,990 --> 00:02:03,280
它是能够表示复杂的条件组合的情况

45
00:02:03,280 --> 00:02:07,030
我们在后面呢，也会给大家做一些介绍

46
00:02:07,030 --> 00:02:11,320
那针对这样的需求分析应用的工具

47
00:02:11,320 --> 00:02:14,470
我们先简单来看一下数据流图

48
00:02:14,470 --> 00:02:19,890
数据流图它会体现数据流它的流向

49
00:02:19,890 --> 00:02:23,750
数据流用箭头来进行表示

50
00:02:23,750 --> 00:02:27,600
以它由哪一组固定成分的数据组成

51
00:02:27,600 --> 00:02:29,530
表示数据的流向

52
00:02:29,530 --> 00:02:33,000
每个数据流啊，通常会给它起一个名字

53
00:02:33,000 --> 00:02:34,520
反映它的含义

54
00:02:34,520 --> 00:02:37,450
比如说用户信息、学员信息。这一类

55
00:02:37,450 --> 00:02:39,550
数据流有一个特点

56
00:02:39,550 --> 00:02:42,280
它必须呢和加工相关

57
00:02:42,280 --> 00:02:43,730
看到箭头

58
00:02:43,730 --> 00:02:46,850
其实我们知道它必定会有一个起点

59
00:02:46,850 --> 00:02:48,060
一个终点吧

60
00:02:48,060 --> 00:02:51,460
那在起点和终点之间的话

61
00:02:51,460 --> 00:02:55,840
这二者之中至少要包含一个加工

62
00:02:55,840 --> 00:02:57,230
也就是说呢

63
00:02:57,230 --> 00:02:59,850
他要么从加工流向加工

64
00:02:59,850 --> 00:03:02,310
要么呢从数据源流向加工

65
00:03:02,310 --> 00:03:04,780
或者呢，加工流向数据源

66
00:03:04,780 --> 00:03:06,760
至少要包含一个加工

67
00:03:06,760 --> 00:03:09,560
这是数据流的一个限制

68
00:03:09,560 --> 00:03:12,850
那我们提到的加工是什么呢

69
00:03:12,850 --> 00:03:16,690
加工它就是我们数据变换的过程

70
00:03:16,690 --> 00:03:18,050
数据流图

71
00:03:18,050 --> 00:03:20,370
它其实就是对数

72
00:03:20,370 --> 00:03:22,620
它变换过程的一个建模

73
00:03:22,620 --> 00:03:27,430
那所谓的变换肯定是有变化的

74
00:03:27,430 --> 00:03:29,470
它类似于什么呢

75
00:03:29,470 --> 00:03:33,150
诶，我们在一个加工的机器当中

76
00:03:33,150 --> 00:03:36,540
用圆形或者圆角矩形来表示

77
00:03:36,540 --> 00:03:39,130
有一个流入的数据

78
00:03:39,130 --> 00:03:41,710
还有一个呢，流出的数据

79
00:03:41,710 --> 00:03:44,310
这就是它的流入和流出

80
00:03:44,310 --> 00:03:47,060
我们投入了一头猪

81
00:03:47,060 --> 00:03:51,000
那它可能呢，就变成了一个火腿肠

82
00:03:51,000 --> 00:03:52,530
这种情况下

83
00:03:52,530 --> 00:03:54,130
猪和火腿肠是经过

84
00:03:54,130 --> 00:03:56,110
经过了一个变换的动作吧

85
00:03:56,110 --> 00:03:58,870
那这种情况下就是流入了数据

86
00:03:58,870 --> 00:03:59,990
做了一定处理

87
00:03:59,990 --> 00:04:02,310
变成了流出的数据

88
00:04:02,310 --> 00:04:04,570
那关于数据流

89
00:04:04,570 --> 00:04:06,550
它的这种过程当中啊

90
00:04:06,550 --> 00:04:09,500
还可能存在一系列的问题

91
00:04:09,500 --> 00:04:12,500
这种问题呢，一般会在下午题出现

92
00:04:12,500 --> 00:04:16,540
所以我们在下午数据流图章节当中呢

93
00:04:16,540 --> 00:04:19,079
还会给大家介绍到这里呢

94
00:04:19,079 --> 00:04:21,589
常见的一些数据流的问题

95
00:04:21,589 --> 00:04:25,320
那了解到加工它是做变换的

96
00:04:25,320 --> 00:04:28,100
它会有一定的动词

97
00:04:29,370 --> 00:04:31,700
加名词形式

98
00:04:31,700 --> 00:04:35,730
或者名词加动词动宾颠倒一下

99
00:04:35,730 --> 00:04:39,770
那这个一般呢，会用来做加工的名称

100
00:04:39,770 --> 00:04:42,170
我们在做加工的时候

101
00:04:42,170 --> 00:04:43,330
因为有变换

102
00:04:43,330 --> 00:04:44,850
所以一定有动作

103
00:04:44,850 --> 00:04:47,990
所以它一定会出现一个动词

104
00:04:47,990 --> 00:04:49,480
常见的加工

105
00:04:49,480 --> 00:04:52,720
比如说呢，我们涉及到用户管理啊

106
00:04:52,720 --> 00:04:55,340
这种情况就是属于呢加工

107
00:04:55,340 --> 00:04:57,960
其次，除了加工以外

108
00:04:57,960 --> 00:05:00,600
我们还有呢，数据存储

109
00:05:00,600 --> 00:05:04,110
数据存储也可以呢，叫文件

110
00:05:04,110 --> 00:05:06,670
我们在使用的过程当中呢

111
00:05:06,670 --> 00:05:09,330
会暂存一些数据

112
00:05:09,330 --> 00:05:11,030
那暂存的时候

113
00:05:11,030 --> 00:05:13,030
我们对于这类数据呢

114
00:05:13,030 --> 00:05:18,050
会用平行线或者封了一侧的矩形来表示

115
00:05:18,050 --> 00:05:20,660
这种数据存储一般呢

116
00:05:20,660 --> 00:05:22,640
会有明确的表示

117
00:05:22,640 --> 00:05:26,850
比如某某文件、某某库

118
00:05:26,850 --> 00:05:30,680
某某档案、某某表这样的一些

119
00:05:30,680 --> 00:05:34,570
那每一个文件都有自己的名字留

120
00:05:34,570 --> 00:05:38,540
不像我们的文件就表示呢写入、流出呢

121
00:05:38,540 --> 00:05:40,120
表示读取

122
00:05:40,120 --> 00:05:43,220
那这是呢，数据存储也叫做文件

123
00:05:43,220 --> 00:05:46,350
最后还有外部实体

124
00:05:46,830 --> 00:05:50,210
一看到外部我们就要知道呢

125
00:05:50,210 --> 00:05:52,270
它不是系统本身的

126
00:05:52,270 --> 00:05:54,340
它是使用系统的

127
00:05:54,340 --> 00:05:56,970
并不属于我们的系统

128
00:05:56,970 --> 00:06:00,880
它指的是存在于软件系统之外的

129
00:06:00,880 --> 00:06:02,680
人员或者组织

130
00:06:02,680 --> 00:06:05,890
甚至可能是第三方的系统

131
00:06:05,890 --> 00:06:07,940
做一些中间件的时候

132
00:06:07,940 --> 00:06:10,980
它可能呢，还会是数据库的名字

133
00:06:10,980 --> 00:06:12,660
这里呢，注意一下

134
00:06:12,660 --> 00:06:16,880
那外部实体一般呢，用矩形来表示

135
00:06:16,880 --> 00:06:21,850
这是我们数据流图当中的四种基本的图源

136
00:06:21,850 --> 00:06:23,400
那我们会发现

137
00:06:23,400 --> 00:06:26,540
那这里出现的都是一些名字、名词

138
00:06:26,540 --> 00:06:28,020
甚至动名词吧

139
00:06:28,020 --> 00:06:30,380
它到底包含了什么内容

140
00:06:30,380 --> 00:06:33,740
唉，要结合数据字典去看才知道

141
00:06:33,740 --> 00:06:36,830
那这是数据流图的图源

142
00:06:36,830 --> 00:06:38,560
它的基本形式

143
00:06:38,560 --> 00:06:39,680
我们可以看到呢

144
00:06:39,680 --> 00:06:44,880
这是实体加工、存储以及数据流

145
00:06:44,880 --> 00:06:48,780
那我们在下午的数据流图当中呢

146
00:06:48,780 --> 00:06:53,680
经常会出现将图示当中抠掉一些内容

147
00:06:53,680 --> 00:06:55,680
让大家来进行填空

148
00:06:55,680 --> 00:06:59,650
那填空包括实体存储

149
00:06:59,650 --> 00:07:01,790
加工名称的缺失

150
00:07:01,790 --> 00:07:04,690
以及数据流本身的缺失

151
00:07:04,690 --> 00:07:06,260
都有可能出现

152
00:07:06,260 --> 00:07:09,330
需要呢大家去处理这类问题

153
00:07:09,330 --> 00:07:11,470
那具体的实现呢

154
00:07:11,470 --> 00:07:15,390
我们会在下午题数据流图题的章节呢

155
00:07:15,390 --> 00:07:17,500
给大家来进行介绍

156
00:07:17,500 --> 00:07:20,200
数据流图它还有呢

157
00:07:20,200 --> 00:07:21,760
诶，一个特点

158
00:07:21,760 --> 00:07:25,140
它是典型的结构化分析的工具

159
00:07:25,140 --> 00:07:27,910
结构化开发方法有什么特点啊

160
00:07:27,910 --> 00:07:30,660
自顶向下，逐步求精

161
00:07:30,660 --> 00:07:33,660
它有一个分解的过程

162
00:07:34,000 --> 00:07:36,520
那分解的过程当中

163
00:07:36,520 --> 00:07:39,120
数据流图具有典型的体现

164
00:07:39,120 --> 00:07:40,960
它有一个顶层图

165
00:07:40,960 --> 00:07:42,680
或者叫做上下网

166
00:07:42,680 --> 00:07:45,140
上下文无关的数据流图

167
00:07:45,140 --> 00:07:46,690
这种情况下

168
00:07:46,690 --> 00:07:49,910
它的加工只有唯一的一个是什么

169
00:07:49,910 --> 00:07:52,210
是我们的信息系统本身

170
00:07:52,210 --> 00:07:55,750
接下来在它的子图当中，诶

171
00:07:55,750 --> 00:07:59,140
这种上下结构是典型的父子关系

172
00:07:59,140 --> 00:08:03,290
子图当中会将加工进行分解

173
00:08:03,290 --> 00:08:06,380
我们会发现上面是比较抽象的一个

174
00:08:06,380 --> 00:08:07,780
框架式的东西吧

175
00:08:07,780 --> 00:08:10,940
下面做了具体的分解和解释

176
00:08:10,940 --> 00:08:13,600
那这就是数据流图当中

177
00:08:13,600 --> 00:08:15,880
典型的父子图的关系

178
00:08:15,880 --> 00:08:20,180
有逐步分解、逐步求精的一个过程

179
00:08:20,180 --> 00:08:22,470
它还可以有一层图

180
00:08:22,470 --> 00:08:25,980
二层图依次来进行分解

181
00:08:25,980 --> 00:08:29,270
那分解这种图示的过程当中

182
00:08:29,270 --> 00:08:32,350
还会涉及到附图与子图之间

183
00:08:32,350 --> 00:08:34,510
数据流的平衡原则

184
00:08:34,510 --> 00:08:38,070
这一部分呢，一般也是出现在下午题当中

185
00:08:38,070 --> 00:08:41,559
我们呢在下午题部分再详细来看

186
00:08:41,559 --> 00:08:46,450
这里主要了解到他逐自顶向下、逐步求精

187
00:08:46,450 --> 00:08:49,130
逐步分解的一个过程

188
00:08:49,130 --> 00:08:50,700
再来看到呢

189
00:08:50,700 --> 00:08:52,440
唉，我们的数据流图

190
00:08:52,440 --> 00:08:55,210
一般结合数据字典综合来用吧

191
00:08:55,210 --> 00:09:00,140
数据字典它一般可以有以下四类条目

192
00:09:00,140 --> 00:09:03,640
包括对数据流、数据项、数据存

193
00:09:03,640 --> 00:09:06,890
以及呢基本加工的描述

194
00:09:06,890 --> 00:09:08,770
对加工的细化

195
00:09:08,770 --> 00:09:11,830
我们可以有其他的工具来进

196
00:09:11,830 --> 00:09:13,270
诶表示

197
00:09:13,770 --> 00:09:15,510
那在这里

198
00:09:15,510 --> 00:09:19,790
数据流，它的具体名称、数据项

199
00:09:19,790 --> 00:09:22,810
它所包含的内容、数据存储

200
00:09:22,810 --> 00:09:24,790
它的存储结构啊

201
00:09:24,790 --> 00:09:26,810
所需要存储的内容

202
00:09:26,810 --> 00:09:29,110
都会在数据字典进行解释

203
00:09:29,110 --> 00:09:31,710
包括基本的加工、描述

204
00:09:31,710 --> 00:09:35,360
而我们在描述的过程当中

205
00:09:35,360 --> 00:09:39,230
外部实体并不在系统当中

206
00:09:39,230 --> 00:09:44,380
那我们在这里原原点和终点就是呢外部实体

207
00:09:44,380 --> 00:09:47,550
所以我们不在字典当中进行解释

208
00:09:47,550 --> 00:09:50,650
它不是我们系统所包含的东西

209
00:09:50,650 --> 00:09:52,900
那了解到数据字典

210
00:09:52,900 --> 00:09:54,120
它的条目

211
00:09:54,120 --> 00:09:57,430
数据字典到底有没有固定的形式呢

212
00:09:57,430 --> 00:10:00,020
并没有出过统一的标准

213
00:10:00,020 --> 00:10:03,300
那我们结合教程来看的话

214
00:10:03,300 --> 00:10:07,020
知道等号可以表示呢，被定

215
00:10:07,020 --> 00:10:09,990
加号表示与，哎

216
00:10:09,990 --> 00:10:11,730
我们这里表示呢

217
00:10:11,730 --> 00:10:15,910
X 它定义为 A 和 B 的组成

218
00:10:15,910 --> 00:10:17,640
经常问大家

219
00:10:17,640 --> 00:10:21,560
某一个部分它包含哪些数据项

220
00:10:21,560 --> 00:10:25,640
那就由呢，哪些数据项来进行定义吧

221
00:10:25,640 --> 00:10:29,280
这个结构呢，在考试当中曾经出现过

222
00:10:29,280 --> 00:10:30,920
大家呢了解一下

223
00:10:30,920 --> 00:10:34,100
那我们用方括号和逗号

224
00:10:34,100 --> 00:10:37,320
或者呢竖线表示或的关系

225
00:10:37,320 --> 00:10:39,320
它是呢可选的

226
00:10:39,320 --> 00:10:42,320
由 A 或者 B 来组成

227
00:10:42,700 --> 00:10:47,750
用大括号加上省略号表示呢，重复

228
00:10:47,750 --> 00:10:51,780
它可以由呢零到多个 A 来表示

229
00:10:51,780 --> 00:10:53,540
那我们在这里

230
00:10:53,540 --> 00:10:57,660
小括号它是哪一种可选的表示形式

231
00:10:57,660 --> 00:10:59,450
A 可以出现

232
00:10:59,450 --> 00:11:01,450
也可以不出现

233
00:11:01,450 --> 00:11:04,500
那它是对括号内部可选啊

234
00:11:04,500 --> 00:11:08,310
而我们上面呢，是针对所列出来的

235
00:11:08,310 --> 00:11:09,500
来选择

236
00:11:09,500 --> 00:11:10,800
它的组成部分

237
00:11:10,800 --> 00:11:13,960
可以由 A 或者 B 来组成

238
00:11:13,960 --> 00:11:16,920
或的含义也要能知道一下

239
00:11:17,270 --> 00:11:20,550
后面给大家举了一些简单的事例

240
00:11:20,550 --> 00:11:25,770
机票它的定义包含后面的这些数据项

241
00:11:25,770 --> 00:11:28,720
航班号它的定义可以呢

242
00:11:28,720 --> 00:11:31,240
有这样的一些终点

243
00:11:31,240 --> 00:11:36,040
可以是这后面的这些目的地之间的一个，诶

244
00:11:36,040 --> 00:11:38,890
这是一个或的表示形式

245
00:11:38,890 --> 00:11:41,530
那这是我们给大家介绍到的

246
00:11:41,530 --> 00:11:44,390
数据字典的基本内容

247
00:11:44,600 --> 00:11:46,720
除了数据字典以外

248
00:11:46,720 --> 00:11:51,620
我们呢，后面给大家介绍一些其他的诶，工具

249
00:11:51,620 --> 00:11:54,900
下面我们看到呢，对于加工逻辑

250
00:11:54,900 --> 00:11:57,120
它的描述方式

251
00:11:57,120 --> 00:11:58,980
这种描述方式啊

252
00:11:58,980 --> 00:12:01,490
在我们的上午题当中

253
00:12:01,490 --> 00:12:03,970
出现过判定表和判定数

254
00:12:03,970 --> 00:12:07,660
下午题当中呢，出现过结构化语言

255
00:12:07,660 --> 00:12:11,430
所以我们简单的来看一看这三种工具

256
00:12:11,430 --> 00:12:13,800
结构化语言是什么呢

257
00:12:13,800 --> 00:12:17,060
我们在进行一些功能描述的时候

258
00:12:17,060 --> 00:12:19,710
第一种方式是用户口述吧

259
00:12:19,710 --> 00:12:21,570
口述的这种方

260
00:12:21,570 --> 00:12:25,570
我们一般呢，诶叫它是自然语言的描述

261
00:12:28,730 --> 00:12:30,450
比如说口语化

262
00:12:30,450 --> 00:12:32,710
比如说用中文来记录

263
00:12:32,710 --> 00:12:34,730
都是属于自然语言

264
00:12:34,730 --> 00:12:37,580
那我们真正在实现的过程当中

265
00:12:37,580 --> 00:12:41,740
希望呢，它是形成一个形式化的语言

266
00:12:42,820 --> 00:12:47,400
这种形式化语言的话，一般比较严谨

267
00:12:47,400 --> 00:12:51,110
比如说呢，一些数学语言就是形式化的语言

268
00:12:51,110 --> 00:12:53,790
那这两种方式就是两个极端吧

269
00:12:53,790 --> 00:12:55,870
一种非常不明确

270
00:12:55,870 --> 00:12:57,780
一种非常明确

271
00:12:57,780 --> 00:12:58,820
那我们在

272
00:12:58,820 --> 00:13:01,640
诶，进行需求分析的过程当中

273
00:13:01,640 --> 00:13:06,380
其实更多的应该是结合于介于二者之间的

274
00:13:06,380 --> 00:13:09,390
这种呢，我们就叫做结构化语言

275
00:13:09,390 --> 00:13:12,140
它是一种半形式化的语言

276
00:13:12,140 --> 00:13:13,650
相对来说呢

277
00:13:13,650 --> 00:13:17,410
诶，他的这种表述形式会更容易读懂

278
00:13:17,410 --> 00:13:19,880
但是呢，也更明确一些

279
00:13:19,880 --> 00:13:24,440
那它的外层是用来描述控制结构的

280
00:13:24,440 --> 00:13:28,900
控制结构的包含顺序、选择和重复

281
00:13:28,900 --> 00:13:31,000
那具体的结

282
00:13:31,000 --> 00:13:34,280
我们呢，在后面给大家举了一个事例

283
00:13:34,280 --> 00:13:35,500
可以看一看

284
00:13:35,500 --> 00:13:36,430
内层呢

285
00:13:36,430 --> 00:13:40,330
一般用起始语句来表示我们的动作

286
00:13:40,330 --> 00:13:43,410
判定表和判定数

287
00:13:43,410 --> 00:13:47,530
它是我们多种条件组合的体现形式

288
00:13:47,530 --> 00:13:49,610
一个是表的结构

289
00:13:49,610 --> 00:13:51,820
一个呢，是树的结构

290
00:13:51,820 --> 00:13:54,900
那我们在判定表当中

291
00:13:54,900 --> 00:13:58,320
会记录它条件的一些呢定义，诶

292
00:13:58,320 --> 00:14:01,540
包括组合情况下具体的动作

293
00:14:01,540 --> 00:14:04,890
那就是呢，我们判定表的过程

294
00:14:04,890 --> 00:14:06,410
判定数的话

295
00:14:06,410 --> 00:14:09,080
它其实就是判定表的变形

296
00:14:09,080 --> 00:14:11,550
它有一定的树形分支

297
00:14:11,550 --> 00:14:15,590
相对来说呢，更加易于理解和使用

298
00:14:15,590 --> 00:14:19,780
那就是我们提到的三种方式

299
00:14:20,830 --> 00:14:25,560
接下来，我们来看一看这三种工具的举例

300
00:14:25,560 --> 00:14:28,580
结构化语言的描述当中呢

301
00:14:28,580 --> 00:14:30,300
我们下面举了一个例子

302
00:14:30,300 --> 00:14:32,040
那借书的过程当中

303
00:14:32,040 --> 00:14:35,900
图书管理员接收到读者的借书请求之后

304
00:14:35,900 --> 00:14:39,260
根据读者信息和接收借书信息

305
00:14:39,260 --> 00:14:40,790
借审查，诶

306
00:14:40,790 --> 00:14:44,320
根据读者信息和借书信息

307
00:14:44,320 --> 00:14:47,030
来检查一下这个结果

308
00:14:47,030 --> 00:14:49,620
诶，读者是否合法啊

309
00:14:49,620 --> 00:14:51,800
如果读者合法的话

310
00:14:51,800 --> 00:14:54,650
检查呢，这个借阅的数量

311
00:14:54,650 --> 00:14:56,880
那如果都合法

312
00:14:56,880 --> 00:14:59,860
我们就通知呢，借书成功呢

313
00:14:59,860 --> 00:15:02,200
如果说都不合法的话

314
00:15:02,200 --> 00:15:05,640
我们呢，会进一步的针对相应的信

315
00:15:05,640 --> 00:15:07,320
来发送一些呢

316
00:15:07,320 --> 00:15:09,550
诶，我们的这个通知

317
00:15:09,550 --> 00:15:11,570
那如果借书成功

318
00:15:11,570 --> 00:15:16,110
我们还要呢，修改借书文件和我们的图书目录

319
00:15:16,110 --> 00:15:18,220
那在这一部分当中呢

320
00:15:18,220 --> 00:15:21,000
这就是借书的加工

321
00:15:21,000 --> 00:15:24,860
那读者信息应该是从读者信息表

322
00:15:24,860 --> 00:15:28,090
借书信息表来依次读取信息的

323
00:15:28,090 --> 00:15:30,250
更新图书目录文件

324
00:15:30,250 --> 00:15:32,490
那这是图书的目录文件

325
00:15:32,490 --> 00:15:35,220
那相应的借书请求

326
00:15:35,220 --> 00:15:37,390
唉，由谁来发送呢

327
00:15:37,390 --> 00:15:39,290
应该是读者发送

328
00:15:39,290 --> 00:15:42,410
然后提交给图书管理员

329
00:15:42,410 --> 00:15:46,240
这是一个比较简单的数据流图的一部分

330
00:15:46,240 --> 00:15:50,430
那我们对它做结构化语言描述的时候

331
00:15:50,430 --> 00:15:52,690
去做一个循环

332
00:15:52,690 --> 00:15:54,870
why do 以及 and do 

333
00:15:54,870 --> 00:15:56,910
这是我们的循环过程

334
00:15:56,910 --> 00:16:01,470
循环过程不停地去接收借书的请求

335
00:16:01,470 --> 00:16:02,970
接收之后呢

336
00:16:02,970 --> 00:16:06,370
查询读者信息和接触借书信息

337
00:16:06,370 --> 00:16:09,070
如果读者信息合法

338
00:16:09,070 --> 00:16:11,140
那我们接下来做什么

339
00:16:11,140 --> 00:16:12,690
如果合法

340
00:16:12,690 --> 00:16:16,140
检查是否超越借书的限制吧

341
00:16:16,140 --> 00:16:18,860
那我们接下来检查的是诶

342
00:16:18,860 --> 00:16:22,620
是否超出了借阅图书的最大数目限制

343
00:16:22,620 --> 00:16:25,980
如果说唉，都合法的话

344
00:16:25,980 --> 00:16:30,320
那我们呢，接下来就会呢，通知借书成功

345
00:16:30,320 --> 00:16:34,200
然后呢，将借书信息写入借书文件

346
00:16:34,200 --> 00:16:36,250
更新图书目录吧

347
00:16:36,250 --> 00:16:37,960
那我们在这里

348
00:16:37,960 --> 00:16:40,960
if 表示的是判断是否

349
00:16:40,960 --> 00:16:46,030
那结果是它其实是非法信息吧

350
00:16:48,670 --> 00:16:53,840
否的情况下是合法信息作出相应的通知

351
00:16:53,840 --> 00:16:55,580
然后呢，结束 if 

352
00:16:55,580 --> 00:16:56,920
结束第一个 if 

353
00:16:56,920 --> 00:16:58,260
结束第二个 if 

354
00:16:58,260 --> 00:17:01,360
以及呢，结束循环的过程

355
00:17:01,360 --> 00:17:05,530
那不知道的我们就直接呢，空着不去写了

356
00:17:05,530 --> 00:17:09,790
那也许呢，就是我们直接接收下一条接收请求

357
00:17:09,790 --> 00:17:13,310
这是呢，根据已有信息去做的一些

358
00:17:13,310 --> 00:17:15,400
A 结构化语言的描述

359
00:17:15,400 --> 00:17:18,430
所谓的这种啊，加工逻辑的描述

360
00:17:18,430 --> 00:17:20,950
就是将题干的一些信息呢

361
00:17:20,950 --> 00:17:24,220
转换成相应的格式要求

362
00:17:24,220 --> 00:17:26,619
那这是结构化语言

363
00:17:26,619 --> 00:17:29,100
下面再看到呢，判定表

364
00:17:29,100 --> 00:17:32,780
判定表它会呢列出条件组

365
00:17:32,780 --> 00:17:36,260
以及呢，相应的具体动作

366
00:17:36,260 --> 00:17:39,860
那我们在这里需要检查读者信息

367
00:17:39,860 --> 00:17:44,010
检查借阅的图书数目有没有超过最大值吧

368
00:17:44,010 --> 00:17:48,560
那如果检查读者信息非法

369
00:17:48,560 --> 00:17:52,160
我们是不是直接跳出去不做动作啦

370
00:17:52,160 --> 00:17:55,750
如果说检查读者信息合法

371
00:17:55,750 --> 00:17:59,640
并且呢，诶，是借阅图书超过数值了

372
00:17:59,640 --> 00:18:03,070
那我们其实也不会做下一步动作吧

373
00:18:03,070 --> 00:18:06,130
只有二者同时合法才做呢

374
00:18:06,130 --> 00:18:08,630
具体的这三个动作

375
00:18:08,630 --> 00:18:12,530
那我们有没有 ff f 的组合啊

376
00:18:12,530 --> 00:18:14,270
在这里并没有

377
00:18:14,270 --> 00:18:16,630
因为第一个是 F 之后

378
00:18:16,630 --> 00:18:19,910
第二个步骤就不会再去做了

379
00:18:19,910 --> 00:18:23,390
那我们在这个过程当中呢

380
00:18:23,390 --> 00:18:29,580
唉，如果说这两个条件组合可以呢，写作一个

381
00:18:29,580 --> 00:18:33,650
那我们这里呢，其实是可以做合并动作的

382
00:18:33,650 --> 00:18:36,260
但是这道题当中并没有呢

383
00:18:36,260 --> 00:18:38,100
唉，并不能这样去合并

384
00:18:38,100 --> 00:18:40,800
因为这个组合没办法写到一个去

385
00:18:40,800 --> 00:18:44,140
所以在这里呢，注意一下判定表啊

386
00:18:44,140 --> 00:18:47,430
当最终的动作结果可合并的话

387
00:18:47,430 --> 00:18:51,530
一样的话可以考虑把条件组合合并

388
00:18:51,970 --> 00:18:54,730
这是判定表的结构

389
00:18:54,730 --> 00:18:57,610
下面我们来看一下判定数的结构

390
00:18:57,610 --> 00:19:00,760
那我们检查读者是否合法

391
00:19:00,760 --> 00:19:02,970
否的话我们可以提示非法

392
00:19:02,970 --> 00:19:04,010
也可以不做

393
00:19:04,010 --> 00:19:05,840
因为题目没有给出来

394
00:19:05,840 --> 00:19:07,780
是的话，唉，合法了

395
00:19:07,780 --> 00:19:10,570
我们检查它的最大数目限制

396
00:19:10,570 --> 00:19:12,820
如果说超过限

397
00:19:12,820 --> 00:19:15,050
就提示数目超过它了

398
00:19:15,050 --> 00:19:15,880
否的话

399
00:19:15,880 --> 00:19:18,440
我们要做相应的三个动作

400
00:19:18,440 --> 00:19:22,010
这就是一个简单的判定数的过程

401
00:19:22,010 --> 00:19:25,960
那它们只是不同的表示形式

402
00:19:25,960 --> 00:19:30,070
所对应的其实都是这一段呢，加工的说明

403
00:19:30,070 --> 00:19:33,550
那这是关于我们需求分析当中

404
00:19:33,550 --> 00:19:35,070
用到的一些工具

405
00:19:35,070 --> 00:19:36,650
大家需要了解到

406
00:19:36,650 --> 00:19:39,590
数据流图与数据字典的一些基本概念

407
00:19:39,590 --> 00:19:40,430
然后呢

408
00:19:40,430 --> 00:19:42,610
知道结构化语言判定表

409
00:19:42,610 --> 00:19:44,880
判定数它的大致结构

410
00:19:44,880 --> 00:19:47,760
下面呢，我们来看一下这一部分

411
00:19:47,760 --> 00:19:51,480
在软件设计师考试真题当中的体现

412
00:19:51,480 --> 00:19:56,240
数据流图建模应该遵循什么样的原则

413
00:19:56,240 --> 00:20:00,430
那这是我们数据流图它的一个基本概念

414
00:20:00,430 --> 00:20:04,410
数据流图是结构化分析的工具

415
00:20:04,410 --> 00:20:09,510
它的基本特点就是自顶向下的逐步求精

416
00:20:09,510 --> 00:20:13,070
会从抽象的系统到具体的加工

417
00:20:13,070 --> 00:20:16,250
所以这里选择的应该是 B 选项

418
00:20:16,250 --> 00:20:21,210
这是对数据流图它的分解概念的一个考察

419
00:20:22,300 --> 00:20:27,670
下面这道题对数据流图细节的考察形式

420
00:20:27,670 --> 00:20:30,170
那在结构化分析当中

421
00:20:30,170 --> 00:20:33,360
数据流图描述的是什么呢

422
00:20:33,360 --> 00:20:35,340
当采用数据流图

423
00:20:35,340 --> 00:20:38,760
对一个图书馆管理系统进行分析的时候

424
00:20:38,760 --> 00:20:41,670
谁是一个外部实体

425
00:20:41,670 --> 00:20:44,910
那我们用数据流图描述什么

426
00:20:44,910 --> 00:20:46,880
ABCD 4个选项

427
00:20:46,880 --> 00:20:49,100
数据对象之间的关系

428
00:20:49,100 --> 00:20:51,260
用于对数据的建

429
00:20:51,260 --> 00:20:53,460
看起来有一些相似

430
00:20:53,460 --> 00:20:55,340
但我们会发现

431
00:20:55,340 --> 00:20:59,160
关系这种说法更多的是静态的描述吧

432
00:20:59,160 --> 00:21:02,300
我们的数据流图涉及到数据变换

433
00:21:02,300 --> 00:21:04,500
它是一个动态的情景

434
00:21:04,500 --> 00:21:07,130
所以 A 啊，并不是很合适的

435
00:21:07,130 --> 00:21:13,140
B 选项，数据在系统当中如何被传送或者变换

436
00:21:13,140 --> 00:21:16,480
哎，很明确的应该是加工的一个概念了

437
00:21:16,480 --> 00:21:20,500
以及呢，如何对数据流进行变换的功

438
00:21:20,500 --> 00:21:21,580
或者子功能

439
00:21:21,580 --> 00:21:24,220
对，用于对功能建模

440
00:21:24,220 --> 00:21:28,480
那这是呢，对我们数据流图的定义

441
00:21:28,540 --> 00:21:29,760
C 选项

442
00:21:29,760 --> 00:21:32,580
系统对外部事件如何响应

443
00:21:32,580 --> 00:21:33,440
如何动作

444
00:21:33,440 --> 00:21:35,390
用于对行为建模

445
00:21:35,390 --> 00:21:39,420
我们这里并没有对外部实践来进行考虑

446
00:21:39,420 --> 00:21:42,160
只是系统内部的数据分析

447
00:21:42,160 --> 00:21:46,280
D 选项，数据流图当中各个组成部分

448
00:21:46,280 --> 00:21:49,570
描述数据流图当中各个组成部分的

449
00:21:49,570 --> 00:21:51,870
它比较接近于数据字典

450
00:21:51,870 --> 00:21:53,650
它的一些呢，定义了

451
00:21:53,650 --> 00:21:55,710
那第二个填空

452
00:21:55,710 --> 00:22:00,390
当采用数据流图对数据库管理系统，呃

453
00:22:00,390 --> 00:22:03,790
对一个图书馆管理系统进行分析的时候

454
00:22:03,790 --> 00:22:05,930
谁是外部实体

455
00:22:05,930 --> 00:22:09,610
其实我们刚刚在相应的知识点讲解的时候

456
00:22:09,610 --> 00:22:10,510
就是一个

457
00:22:10,510 --> 00:22:13,470
诶，与图书馆管理系统相关的吧

458
00:22:13,600 --> 00:22:19,500
其中读者和管理员都是典型的外部实体

459
00:22:19,500 --> 00:22:23,260
图书它是我们内部需要存储的

460
00:22:23,260 --> 00:22:24,770
比如说图书表达

461
00:22:24,770 --> 00:22:27,000
那这个过程借阅

462
00:22:27,000 --> 00:22:29,740
它一般呢是一个动作，诶

463
00:22:29,740 --> 00:22:31,180
也就是加工

464
00:22:31,180 --> 00:22:32,760
像借书证

465
00:22:32,760 --> 00:22:37,300
我们一般呢，会读取借书证的信息加以验证

466
00:22:37,300 --> 00:22:41,250
所以它更多的是以呢，一个数据项

467
00:22:41,250 --> 00:22:43,880
数据流的形式来出现

468
00:22:43,880 --> 00:22:45,300
只有 A 选项

469
00:22:45,300 --> 00:22:47,620
它是一个外部实体

470
00:22:47,620 --> 00:22:50,200
这是对数据流图的定

471
00:22:50,200 --> 00:22:54,590
以及呢数据流图内部结构的一个考察

472
00:22:54,590 --> 00:22:56,920
接下来看到下面这道题

473
00:22:56,920 --> 00:23:00,300
数据字典是结构化分析的一个重要输出

474
00:23:00,300 --> 00:23:02,660
它的条目不包括什么

475
00:23:02,660 --> 00:23:05,390
诶，对于数据字典它的考察

476
00:23:05,390 --> 00:23:07,190
数据字典我们说呢

477
00:23:07,190 --> 00:23:11,180
它是对我们系统内部的这些东西的解释吧

478
00:23:11,180 --> 00:23:14,080
它不能表示系统外部的东西

479
00:23:14,080 --> 00:23:15,660
也就是外部实体

480
00:23:15,660 --> 00:23:18,290
在数据字典当中并没有记录

481
00:23:18,290 --> 00:23:20,810
我们会对数据流、数据项

482
00:23:20,810 --> 00:23:25,650
还有基本加工以及数据存储进行说明

483
00:23:26,530 --> 00:23:31,350
外部实体在数据字典当中是不会做解释的

484
00:23:31,350 --> 00:23:33,960
它并不属于我们系统本身

485
00:23:33,960 --> 00:23:36,970
那这是对数据字典的考察

486
00:23:36,970 --> 00:23:39,830
以上呢就是需要大家了解到的

487
00:23:39,830 --> 00:23:43,090
关于需求分析的一些工具

488
00:23:43,090 --> 00:23:44,890
有一部分的内容呢

489
00:23:44,890 --> 00:23:48,360
是对于下午题考试当中会用到的

490
00:23:48,360 --> 00:23:51,620
所以我们呢在后面的下午题

491
00:23:51,620 --> 00:23:53,280
数据流图章节呢

492
00:23:53,280 --> 00:23:57,620
还会给大家进行一些更深入更细致的一些介绍
