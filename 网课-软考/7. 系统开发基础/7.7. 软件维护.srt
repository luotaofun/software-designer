1
00:00:00,000 --> 00:00:03,860
接下来，我们给大家介绍软件维护这一方面

2
00:00:03,860 --> 00:00:05,020
软件维护

3
00:00:05,020 --> 00:00:09,360
它本身是我们整个软件生命周期当中

4
00:00:09,360 --> 00:00:11,460
最长的一个阶段

5
00:00:11,460 --> 00:00:13,500
并且它也是耗资

6
00:00:13,500 --> 00:00:16,630
或者说耗费成本最大的一个阶段

7
00:00:16,630 --> 00:00:18,600
因为我们所谓的开发的话

8
00:00:18,600 --> 00:00:21,560
它本身是在一到两年就能够完成的

9
00:00:21,560 --> 00:00:23,160
而一个软件的生命

10
00:00:23,160 --> 00:00:25,630
它会呢使用一年、两年

11
00:00:25,630 --> 00:00:28,390
甚至5年、10年都是有可能的

12
00:00:28,390 --> 00:00:30,810
这种长期的维护呢

13
00:00:30,810 --> 00:00:33,040
会涉及到很多的工作

14
00:00:33,040 --> 00:00:36,070
包括我们在维护阶段涉及到的

15
00:00:36,070 --> 00:00:38,290
像技术人员的这种更新

16
00:00:38,290 --> 00:00:39,890
人员的流失

17
00:00:39,890 --> 00:00:43,300
后期的一些工作应该如何来进行

18
00:00:43,300 --> 00:00:47,530
都是呢，有一系列的需要呢，去关注的问题

19
00:00:47,530 --> 00:00:51,110
那软件维护在我们软件设计师考试当中

20
00:00:51,110 --> 00:00:54,860
涉及比较多的是维护类型的区分

21
00:00:54,860 --> 00:00:57,680
软件维护的工作大致呢

22
00:00:57,680 --> 00:00:59,940
可以分为四大类型

23
00:00:59,940 --> 00:01:01,540
第一种比较简单

24
00:01:01,540 --> 00:01:02,620
也比较好区分

25
00:01:02,620 --> 00:01:04,220
我们就没有写概念了

26
00:01:04,220 --> 00:01:07,590
针对已经出现的错误进行修改

27
00:01:07,590 --> 00:01:11,760
叫做改正性维护或者更正性维护

28
00:01:11,760 --> 00:01:13,960
那第二种比较呢

29
00:01:13,960 --> 00:01:16,940
容易理解的就是预防性维护

30
00:01:16,940 --> 00:01:20,700
那改正性维护和预防性维护

31
00:01:20,700 --> 00:01:22,740
它们的区别在于呢

32
00:01:22,740 --> 00:01:25,840
一个错误已经出现

33
00:01:31,800 --> 00:01:35,240
一个呢，错误还未发生

34
00:01:44,680 --> 00:01:46,960
那这种情况，诶

35
00:01:46,960 --> 00:01:48,380
既然有错误

36
00:01:48,380 --> 00:01:50,820
怎么还有未发生的情况呢

37
00:01:50,820 --> 00:01:54,830
我们有非常典型的一个预防性维护的例子

38
00:01:54,830 --> 00:01:55,860
大家都知道

39
00:01:55,860 --> 00:01:59,160
我们软件出现的这个年代比较近吧

40
00:01:59,160 --> 00:02:00,730
我们是在哪

41
00:02:00,730 --> 00:02:01,040
呃

42
00:02:01,040 --> 00:02:01,740
20世纪

43
00:02:01,740 --> 00:02:05,120
一九多少年的时候才出现的软件

44
00:02:05,120 --> 00:02:06,840
计算机这样的一些东西

45
00:02:06,840 --> 00:02:10,050
那我们在最初做软件开发的时候

46
00:02:10,050 --> 00:02:13,930
涉及年份只涉及了两位

47
00:02:13,930 --> 00:02:16,750
那用两位来表达年份的话

48
00:02:16,750 --> 00:02:19,040
99年肯定是1999年吧

49
00:02:19,040 --> 00:02:24,260
00年在早期的时候一定是1900年

50
00:02:24,260 --> 00:02:28,790
但我们在21世纪的时候就会发现

51
00:02:28,790 --> 00:02:31,310
跨世纪就出现问题了

52
00:02:31,310 --> 00:02:35,020
2000年会产生冲突

53
00:02:35,020 --> 00:02:37,010
所以这种情况下

54
00:02:37,010 --> 00:02:41,030
我们在21世纪即将到来的时候

55
00:02:41,030 --> 00:02:44,470
很多软件都做了相关的更新

56
00:02:44,470 --> 00:02:48,260
从而避免了这种大规模的时间问题

57
00:02:48,260 --> 00:02:52,780
那这也是我们非常著名的牵连虫问题

58
00:02:52,780 --> 00:02:54,500
那我们可以想象得到

59
00:02:54,500 --> 00:02:57,320
在21世纪到来之前

60
00:02:57,320 --> 00:02:58,980
这是不是一个错误啊

61
00:02:58,980 --> 00:03:00,490
它并不是错误

62
00:03:00,490 --> 00:03:03,300
只是呢，唉，还没有发生吧

63
00:03:03,300 --> 00:03:07,190
但一旦跨入到21世纪的情况

64
00:03:07,190 --> 00:03:09,400
它就是一个错误的存在了

65
00:03:09,400 --> 00:03:12,760
所以我们说呢，这个时候错误还没有发生的话

66
00:03:12,760 --> 00:03:14,840
我们就叫做预防性维护

67
00:03:14,840 --> 00:03:17,630
针对已经发生的错误去修改

68
00:03:17,630 --> 00:03:20,190
就叫做呢改正性维护

69
00:03:20,190 --> 00:03:22,780
如果觉得还是不能区分

70
00:03:22,780 --> 00:03:25,880
我们可以理解为改正性维护

71
00:03:25,880 --> 00:03:30,000
针对的是用户已经发现的这样的一些错误

72
00:03:30,000 --> 00:03:32,660
用户已经碰到的这样的 bug 

73
00:03:32,660 --> 00:03:35,150
我们的修改就叫做改正性

74
00:03:35,150 --> 00:03:37,750
而用户还没有碰到的

75
00:03:37,750 --> 00:03:42,060
比如说我们经常做的对操作系统打补丁

76
00:03:42,060 --> 00:03:43,100
这样的工作

77
00:03:43,100 --> 00:03:47,090
也是呢，更多的属于预防性维护

78
00:03:47,090 --> 00:03:51,110
那我们现在有很多系统都是呢，经常性的更新

79
00:03:51,110 --> 00:03:53,270
比如说像 windows 的操作系统啊

80
00:03:53,270 --> 00:03:54,590
还有像安卓系统

81
00:03:54,590 --> 00:03:56,420
都是经常更新的吧

82
00:03:56,420 --> 00:03:58,860
还有一些信息系统、一些软件

83
00:03:58,860 --> 00:04:00,240
大家也会发现呢

84
00:04:00,240 --> 00:04:01,260
经常更新

85
00:04:01,260 --> 00:04:03,300
更新的过程当中

86
00:04:03,300 --> 00:04:06,240
如果是修改一些已知错误

87
00:04:06,240 --> 00:04:07,780
就是改正性维护

88
00:04:07,780 --> 00:04:10,090
修改一些没发生的错误

89
00:04:10,090 --> 00:04:12,010
做一些预防性的工作呢

90
00:04:12,010 --> 00:04:14,500
就叫做预防性维护

91
00:04:14,500 --> 00:04:17,380
那这两个其实是比较好区分的

92
00:04:17,380 --> 00:04:19,740
在我们的维护工作当中呢

93
00:04:19,740 --> 00:04:21,959
占到的比例相对来说呢

94
00:04:21,959 --> 00:04:24,980
会有综合起来有1/3的样子

95
00:04:24,980 --> 00:04:27,960
那剩下还有两个维度

96
00:04:27,960 --> 00:04:30,300
使用比较多的是什么呢

97
00:04:30,300 --> 00:04:33,260
唉，我们涉及到最多的维护工作

98
00:04:33,260 --> 00:04:35,770
其实是有了新的需求吧

99
00:04:35,770 --> 00:04:40,540
有了新的功能或者性能上的要求

100
00:04:40,540 --> 00:04:46,310
做功能、扩充功能或者对性能进行改善的

101
00:04:46,310 --> 00:04:47,730
我们就叫它呢

102
00:04:47,730 --> 00:04:49,340
完善性维护

103
00:04:49,340 --> 00:04:52,120
这一类维护工作是最多的

104
00:04:52,120 --> 00:04:54,680
那我们经常会看到一些

105
00:04:54,680 --> 00:04:56,900
呃，一些新的软件啊

106
00:04:56,900 --> 00:04:59,130
做更新的时候都是属于呢

107
00:04:59,130 --> 00:05:01,400
唉，我新开发了某一个功能

108
00:05:01,400 --> 00:05:03,320
或者呢，唉，会告诉大

109
00:05:03,320 --> 00:05:05,290
我们性能上做了优化

110
00:05:05,290 --> 00:05:08,620
那这就是属于呢完善性维护

111
00:05:08,790 --> 00:05:10,870
第四类叫做呢

112
00:05:10,870 --> 00:05:12,290
适应性维护

113
00:05:12,290 --> 00:05:15,180
适应性维护它比较特殊

114
00:05:15,180 --> 00:05:18,860
它指的是适应一些环境的变化

115
00:05:18,860 --> 00:05:23,540
那这个环境会包括信息技术的环境

116
00:05:23,540 --> 00:05:25,600
管理需求的变

117
00:05:25,600 --> 00:05:29,290
以及市场的外部环境

118
00:05:29,290 --> 00:05:30,370
还有呢

119
00:05:30,370 --> 00:05:37,660
包括一些政府、政、一些政策以及操作系统变化

120
00:05:40,040 --> 00:05:44,720
以及环以及数据环境变化

121
00:05:49,460 --> 00:05:54,000
为了适应这些变化去做的修改

122
00:05:54,000 --> 00:05:58,790
都是属于哪适应性维护这样的一个工作

123
00:05:58,790 --> 00:06:03,080
所以大家呢，要区分适应性和完善性啊

124
00:06:03,080 --> 00:06:05,400
它们是有一定区别的

125
00:06:05,400 --> 00:06:08,600
完善性强调的是功能的增加

126
00:06:08,600 --> 00:06:10,090
性能的改善

127
00:06:10,090 --> 00:06:13,700
但如果说这个增加的功能

128
00:06:13,700 --> 00:06:16,330
是通过修改数据环境

129
00:06:16,330 --> 00:06:19,200
或者修改我们的硬件环境

130
00:06:19,200 --> 00:06:20,690
操作系统环境

131
00:06:20,690 --> 00:06:25,130
我们仍然是认为它是作为适应性维护的

132
00:06:25,130 --> 00:06:28,300
所以二者在进行描述的时候

133
00:06:28,300 --> 00:06:30,500
可能会存在一些焦点

134
00:06:30,500 --> 00:06:33,790
除了他的这种改善的目的

135
00:06:33,790 --> 00:06:35,090
我们还要注意呢

136
00:06:35,090 --> 00:06:39,090
它具体的手段是不是属于适应性维护的

137
00:06:39,090 --> 00:06:39,970
那这是呢

138
00:06:39,970 --> 00:06:40,930
维护分类

139
00:06:40,930 --> 00:06:44,430
在我们软件设计师考试当中考的非常多

140
00:06:44,430 --> 00:06:47,460
其次呢，我们再简单了解一下

141
00:06:47,460 --> 00:06:50,030
可维护性因素的一些决定因素

142
00:06:50,030 --> 00:06:54,240
那什么样的一个软件可维护性比较好呢

143
00:06:54,240 --> 00:06:58,350
我们在这里要考虑的是这个软件，诶

144
00:06:58,350 --> 00:06:59,910
我们好不好读

145
00:06:59,910 --> 00:07:01,810
好不好理解

146
00:07:02,180 --> 00:07:03,800
我们一个

147
00:07:03,800 --> 00:07:07,040
比如说你新接手了一个前人的信息系统

148
00:07:07,040 --> 00:07:08,140
做维护工作

149
00:07:08,140 --> 00:07:10,170
那我们肯定要看一看，诶

150
00:07:10,170 --> 00:07:12,510
这个软件的程序代码

151
00:07:12,510 --> 00:07:14,140
我们容易理解吗

152
00:07:14,140 --> 00:07:15,640
如果不好理解

153
00:07:15,640 --> 00:07:16,960
肯定不好做修改

154
00:07:16,960 --> 00:07:18,160
不好做维护吧

155
00:07:18,160 --> 00:07:20,440
并且，诶，可修改性要强

156
00:07:20,440 --> 00:07:24,140
不要呢，一修改就产生一些连锁反应

157
00:07:24,140 --> 00:07:25,900
导致呢，系统崩溃

158
00:07:25,900 --> 00:07:27,890
可测试性也要强

159
00:07:27,890 --> 00:07:30,450
我们做完的这些修改都要呢

160
00:07:30,450 --> 00:07:32,580
能够方便地去进行测试

161
00:07:32,580 --> 00:07:37,330
这只是可维护性因素它的一个决定面

162
00:07:37,330 --> 00:07:41,000
那我们在后面还有一个质量属性的地方

163
00:07:41,000 --> 00:07:43,870
与这些属性是没有关系的

164
00:07:43,870 --> 00:07:47,580
大家呢，要注意区分它的一个考察维度

165
00:07:47,580 --> 00:07:51,170
那后面我们来看一下对软件维护

166
00:07:51,170 --> 00:07:55,060
在软件设计师考试当中真题的体现

167
00:07:55,060 --> 00:07:56,460
下面这道题呢

168
00:07:56,460 --> 00:07:59,940
系统交付用户使用了一段时间之

169
00:07:59,940 --> 00:08:04,530
发现呢，系统的某个功能响应非常慢

170
00:08:04,530 --> 00:08:08,420
那我们修改了某个模块的一个算法

171
00:08:08,420 --> 00:08:12,070
使它的运行速度得到提升

172
00:08:12,070 --> 00:08:16,560
这种速度的提升其实就是性能的改善吧

173
00:08:16,560 --> 00:08:19,260
所以它叫做改善性维护

174
00:08:19,260 --> 00:08:21,700
也是呢，完善性维护

175
00:08:21,700 --> 00:08:25,500
只是翻译的这个汉字呢，有一些区别

176
00:08:25,500 --> 00:08:27,460
意思呢是一样的

177
00:08:27,460 --> 00:08:30,840
那这是针对完善性维护的考察

178
00:08:30,840 --> 00:08:33,100
下面来看呢，下面这道题

179
00:08:33,100 --> 00:08:36,679
软件维护工具不包括什么工具

180
00:08:36,679 --> 00:08:39,280
那这是对软件维护工具的考察

181
00:08:39,280 --> 00:08:41,360
我们在前面并没有提到

182
00:08:41,360 --> 00:08:45,650
那这里呢，主要是需要大家去拓展了解一下

183
00:08:45,650 --> 00:08:48,200
对于软件维护的工作

184
00:08:48,200 --> 00:08:50,350
我们首先呢，要知道

185
00:08:50,350 --> 00:08:52,890
对于一个软件的生命周期

186
00:08:52,890 --> 00:08:55,840
我们会有呢，一个需求分析

187
00:08:55,840 --> 00:08:57,720
规划分析

188
00:08:57,720 --> 00:09:02,220
然后呢，到设计编码以及呢

189
00:09:02,220 --> 00:09:05,190
运行和维护阶段吧

190
00:09:05,190 --> 00:09:10,660
所以维护阶段它其实是最后的这样的一个

191
00:09:10,660 --> 00:09:12,430
靠后的生命周期吧

192
00:09:12,430 --> 00:09:14,800
那我们在维护的时候

193
00:09:14,800 --> 00:09:17,330
会做相应的一些软件升级

194
00:09:17,330 --> 00:09:19,990
会涉及到版本控制

195
00:09:19,990 --> 00:09:21,890
唉，我们的软件一旦更新

196
00:09:21,890 --> 00:09:24,270
会有一个版本号来区别吧

197
00:09:24,270 --> 00:09:28,360
所以版本控制是软件维护的工具

198
00:09:28,360 --> 00:09:31,150
那配置管理是不是呢

199
00:09:31,150 --> 00:09:33,890
我们会发现配置管理

200
00:09:33,890 --> 00:09:37,690
它是一个贯穿软件开发生命周期

201
00:09:37,690 --> 00:09:39,610
始终的一个东西

202
00:09:39,610 --> 00:09:43,820
配置从我们写代码之前就会呢

203
00:09:43,820 --> 00:09:47,750
做 A 相应的版本是相应的这个配置管理了

204
00:09:47,750 --> 00:09:52,840
所以它不能作为软件维护的工具

205
00:09:53,020 --> 00:09:57,000
最后，文档分析 C 选项，文档分析

206
00:09:57,000 --> 00:10:01,340
那文档分析我们在软件维护的时候

207
00:10:01,340 --> 00:10:03,490
还会涉及到什么工作啊

208
00:10:03,490 --> 00:10:04,330
我们说呢

209
00:10:04,330 --> 00:10:07,390
软件维护这个程序我们要能读得懂吧

210
00:10:07,390 --> 00:10:09,220
所以在这个过程当中

211
00:10:09,220 --> 00:10:12,740
我们还要呢做一些文档分析的工作

212
00:10:12,740 --> 00:10:14,860
唉，如果缺了文档

213
00:10:14,860 --> 00:10:17,660
一个没有文档的这种程序

214
00:10:17,660 --> 00:10:20,410
大家读起来其实是非常困难的

215
00:10:20,410 --> 00:10:24,750
所以文档分析少不了立项工

216
00:10:24,750 --> 00:10:26,250
它比较特殊

217
00:10:26,250 --> 00:10:31,940
我们正常的开发是从需求抽象出模型

218
00:10:31,940 --> 00:10:33,160
再建模

219
00:10:33,160 --> 00:10:35,380
然后呢开发系统

220
00:10:35,380 --> 00:10:40,240
而立项工程它是针对现有系统

221
00:10:40,240 --> 00:10:43,640
在一项呢做立项工

222
00:10:43,640 --> 00:10:46,040
获取模型需求

223
00:10:46,040 --> 00:10:49,520
从而做一个新的系统开发

224
00:10:49,520 --> 00:10:55,360
所以立项工程它所处于的是运行之后的阶段

225
00:10:55,360 --> 00:10:58,880
也是属于呢软件维护的工具

226
00:10:58,880 --> 00:11:01,870
那这里呢区分到软件维护工

227
00:11:01,870 --> 00:11:03,690
包含哪些就可以了

228
00:11:03,690 --> 00:11:06,190
在我们软件设计师考试当中呢

229
00:11:06,190 --> 00:11:09,170
曾经重复考察过两到三次

230
00:11:09,170 --> 00:11:13,530
所以大家呢还是需要去了解一下这个知识点

231
00:11:13,530 --> 00:11:16,540
那这些呢就是关于软件维

232
00:11:16,540 --> 00:11:18,620
需要大家掌握的内容
