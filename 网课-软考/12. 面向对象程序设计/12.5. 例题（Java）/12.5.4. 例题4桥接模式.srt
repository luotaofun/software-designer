1
00:00:00,000 --> 00:00:04,080
下面我们再来看到关于桥接模式的应用

2
00:00:04,080 --> 00:00:07,820
那我们现在呢，想要开发一个绘图软件

3
00:00:07,820 --> 00:00:10,810
要求使用不同的绘图程序

4
00:00:10,810 --> 00:00:12,660
来绘制不同的图形

5
00:00:12,660 --> 00:00:15,580
以绘制直线和圆形为例

6
00:00:15,580 --> 00:00:17,460
那我们在这里啊

7
00:00:17,460 --> 00:00:21,530
有不同的绘图程序都可以呢

8
00:00:21,530 --> 00:00:23,990
绘制直线和圆，诶

9
00:00:23,990 --> 00:00:25,570
画线和画圆

10
00:00:25,570 --> 00:00:29,760
那这里啊，在我们的类图之上给了一个表格

11
00:00:29,760 --> 00:00:30,880
有什么用呢

12
00:00:30,880 --> 00:00:32,570
我们在后面会发现啊

13
00:00:32,570 --> 00:00:36,240
会用调用相应的绘图程序

14
00:00:36,240 --> 00:00:38,530
从而来进行绘制

15
00:00:38,530 --> 00:00:42,170
注意呢，表格在后面是会用到的

16
00:00:42,170 --> 00:00:44,790
那我们在一考试当中啊

17
00:00:44,790 --> 00:00:47,190
一般会有一些常规的题型

18
00:00:47,190 --> 00:00:50,300
那在常规的题干信息以外

19
00:00:50,300 --> 00:00:52,340
出现了一些特殊的信息

20
00:00:52,340 --> 00:00:56,340
大家就需要留意在后面会不会用到它

21
00:00:56,340 --> 00:00:59,310
那我们桥接模式的应用呢

22
00:00:59,310 --> 00:01:00,910
是由于啊

23
00:01:00,910 --> 00:01:03,850
我们将整个信息系统呢

24
00:01:03,850 --> 00:01:05,620
分成了两个维度

25
00:01:05,620 --> 00:01:08,260
一个维度呢，是形状

26
00:01:08,260 --> 00:01:09,630
我们可以呢

27
00:01:09,630 --> 00:01:13,920
诶，对相应的一些形状来进行绘制

28
00:01:13,920 --> 00:01:17,390
其次呢，我们有不同的绘图软件

29
00:01:17,390 --> 00:01:19,480
可以有呢， DP 1、 DP 2

30
00:01:19,480 --> 00:01:21,800
甚至呢，其他的绘图程序

31
00:01:21,800 --> 00:01:25,200
那不同维度用一根线连起来

32
00:01:25,200 --> 00:01:27,050
就是我们常说的桥

33
00:01:27,050 --> 00:01:29,910
从而呢，叫做桥接模式

34
00:01:29,910 --> 00:01:36,110
桥接模式它会考虑到绘图软件的扩展性要求

35
00:01:36,110 --> 00:01:40,180
将不断扩充新的图形和新的绘图程序

36
00:01:40,180 --> 00:01:43,680
所以两个维度都有可能发生

37
00:01:43,680 --> 00:01:45,670
诶，较多的扩展

38
00:01:45,670 --> 00:01:48,390
为了避免啊，出现类爆炸

39
00:01:48,390 --> 00:01:49,730
那我们现在呢

40
00:01:49,730 --> 00:01:52,390
采用桥接的模式来实

41
00:01:52,390 --> 00:01:53,620
上述的过程

42
00:01:53,620 --> 00:01:56,340
给了我们呢相应的类土

43
00:01:56,340 --> 00:01:59,360
那我们再来看代码部分

44
00:01:59,360 --> 00:02:03,140
不考虑我们的设计模式应用

45
00:02:03,140 --> 00:02:05,600
单从语法来看的话

46
00:02:05,890 --> 00:02:09,229
首先题目代码给了我们一个

47
00:02:09,229 --> 00:02:11,390
哎，空荡荡的 drain 

48
00:02:11,390 --> 00:02:15,070
那这个 join 缺失的内容比较多

49
00:02:15,070 --> 00:02:17,150
它到底是什么呢

50
00:02:17,150 --> 00:02:19,290
根据下文来看的话

51
00:02:19,290 --> 00:02:21,700
我们的 V 1 joy 

52
00:02:21,700 --> 00:02:25,190
他 employment join 说明什么

53
00:02:25,190 --> 00:02:28,060
后面这一部分是一个接口

54
00:02:28,060 --> 00:02:31,830
所以第一个填空对 join 的修饰

55
00:02:31,830 --> 00:02:34,780
应该呢，它是一个 A 接口

56
00:02:34,780 --> 00:02:36,370
除此以外

57
00:02:36,370 --> 00:02:39,130
那接口我们说它比较特殊吧

58
00:02:39,130 --> 00:02:42,050
它的方法都是没有具体实现的

59
00:02:42,050 --> 00:02:44,490
我们叫做呢，抽象的这种方法

60
00:02:44,490 --> 00:02:47,010
那我们在实现接口的时候

61
00:02:47,010 --> 00:02:47,890
接口当中

62
00:02:47,890 --> 00:02:51,990
所有的方法在实现类当中都要实现出来

63
00:02:51,990 --> 00:02:57,320
那我们再来看对 join 和下面的方法来看的话

64
00:02:57,320 --> 00:02:59,070
我们会发现呢

65
00:02:59,070 --> 00:03:03,140
下面的方法当中，诶，有两个

66
00:03:03,140 --> 00:03:06,560
下面的实现类当中有两个方法

67
00:03:06,560 --> 00:03:08,260
一个方法是划线

68
00:03:08,260 --> 00:03:10,540
一个方法是画圆

69
00:03:10,540 --> 00:03:15,610
那刚好我们上面的接口缺失了两个填空吧

70
00:03:15,610 --> 00:03:17,920
这两个填空其实就是呢

71
00:03:17,920 --> 00:03:20,980
两个典型的抽象方法

72
00:03:20,980 --> 00:03:25,810
那注意接口当中你是不需要标注它是抽象的

73
00:03:25,810 --> 00:03:28,590
但是从结构上来看的话

74
00:03:28,590 --> 00:03:31,370
它有相应的修饰符

75
00:03:31,370 --> 00:03:36,970
还有返回值、类型、方法名以及参数列表

76
00:03:36,970 --> 00:03:38,940
全都不能省略

77
00:03:38,940 --> 00:03:40,550
到此结束

78
00:03:40,550 --> 00:03:42,270
后面的括括号

79
00:03:42,270 --> 00:03:44,490
包括具体的代码实

80
00:03:44,490 --> 00:03:47,720
都不要呢，出现在接口当中了

81
00:03:47,720 --> 00:03:51,260
那抄录下来这两个方法

82
00:03:51,260 --> 00:03:55,780
填到上面的接口缺失就可以了

83
00:03:55,780 --> 00:03:57,420
那这是我们呢，哎

84
00:03:57,420 --> 00:03:59,160
接口缺失的地方

85
00:03:59,160 --> 00:04:02,760
根据实现类来进行补充

86
00:04:03,130 --> 00:04:05,610
接下来下面又看到呢

87
00:04:05,610 --> 00:04:07,950
哎，我们有 DP 1

88
00:04:07,950 --> 00:04:09,650
DP 2是什么呢

89
00:04:09,650 --> 00:04:13,060
根据前面的表格我们会发现呢

90
00:04:13,060 --> 00:04:14,970
DP 1和 DP 2

91
00:04:14,970 --> 00:04:18,560
它们是我们的绘图程序

92
00:04:18,560 --> 00:04:25,240
那这两个绘图程序所包含的绘图方法，诶

93
00:04:25,240 --> 00:04:26,400
一个画圆

94
00:04:26,400 --> 00:04:27,620
一个画线

95
00:04:27,620 --> 00:04:29,560
注意呢，区分一下

96
00:04:29,560 --> 00:04:34,520
那接下来第四个填空是 V 1 join 

97
00:04:34,520 --> 00:04:38,230
它的具体绘制过程有缺失

98
00:04:38,230 --> 00:04:40,280
那 V 1 joy 

99
00:04:40,280 --> 00:04:44,140
我们会发现它调用的绘图程序是谁啊

100
00:04:44,140 --> 00:04:46,030
是 D 1 P 1

101
00:04:46,030 --> 00:04:49,640
所以我们在填写的时候

102
00:04:49,640 --> 00:04:52,520
当前这个填空应该呢

103
00:04:52,520 --> 00:04:55,820
调用的是 DP 1的程序

104
00:04:55,820 --> 00:05:00,280
那根据我们前面的表格来看的话

105
00:05:00,280 --> 00:05:02,400
我们会发现 D 1 P 1

106
00:05:02,400 --> 00:05:05,540
它画圆和划线的方法名称

107
00:05:05,540 --> 00:05:08,060
分别是 draw 、 a line 以及呢

108
00:05:08,060 --> 00:05:09,410
draw and circle 

109
00:05:09,410 --> 00:05:12,960
那我们这里填写缺失的内容是什么啊

110
00:05:12,960 --> 00:05:15,190
是 draw circle 有缺失吧

111
00:05:15,190 --> 00:05:18,830
所以画圆对应的应该是 draw circle 

112
00:05:18,830 --> 00:05:19,950
那这个地方呢

113
00:05:19,950 --> 00:05:21,610
其实是填写错误了吧

114
00:05:21,610 --> 00:05:25,220
看清楚，这里是 DP 2的方法名称啊

115
00:05:25,220 --> 00:05:29,710
我们这里呢，调用的应该是 DP 1的方法名称

116
00:05:29,710 --> 00:05:33,300
所以调用的是第一批一点

117
00:05:33,820 --> 00:05:35,100
拙

118
00:05:35,260 --> 00:05:36,740
下划线

119
00:05:36,740 --> 00:05:38,280
A 下划线

120
00:05:38,280 --> 00:05:40,020
然后 circle 

121
00:05:43,080 --> 00:05:49,840
后面的参数仍然呢是 X 、 Y 以及二

122
00:05:49,980 --> 00:05:52,660
那这是呢， DP 1的调用

123
00:05:52,660 --> 00:05:55,480
这里的方法名是 DP 2的

124
00:05:55,480 --> 00:05:57,120
要注意对应关系

125
00:05:57,120 --> 00:05:59,050
不要呢把它写错了

126
00:05:59,050 --> 00:06:01,520
那 V 1 joy 看完之后

127
00:06:01,520 --> 00:06:03,620
后面 V 2 joy 

128
00:06:03,620 --> 00:06:08,140
其实也有相应的划线和画圆方法吧

129
00:06:08,140 --> 00:06:11,020
那 DP 2它的绘制方法

130
00:06:11,020 --> 00:06:12,520
我们在这里会发现

131
00:06:12,520 --> 00:06:16,060
第一 P 2画圆的方法就是卓 CIRCER 吧

132
00:06:16,060 --> 00:06:20,740
同样在代码当中也告诉我们 DP 2的方法，诶

133
00:06:20,740 --> 00:06:23,400
它是 draw circle ，诶，画圆

134
00:06:23,400 --> 00:06:25,590
所以 DP 2它是呢

135
00:06:25,590 --> 00:06:30,880
JSER 加上相应的参数传递过来的 XY 

136
00:06:30,880 --> 00:06:33,000
以及那这里呢

137
00:06:33,000 --> 00:06:33,940
注意一下

138
00:06:33,940 --> 00:06:37,120
这是我们 DP 2的调用

139
00:06:37,120 --> 00:06:39,070
那这道题当中呢

140
00:06:39,070 --> 00:06:40,910
第六个填空

141
00:06:40,910 --> 00:06:44,210
它又是一个呢抽象的维度了

142
00:06:44,210 --> 00:06:48,820
那我们在这里有一个抽象类 shape 形状

143
00:06:48,820 --> 00:06:53,310
它在这当中有一个呢，相应的下划线

144
00:06:53,310 --> 00:06:55,510
DP 是它的 joy ，哎

145
00:06:55,510 --> 00:06:57,710
一个成员属性

146
00:06:57,710 --> 00:06:59,520
那除此以外

147
00:06:59,520 --> 00:07:02,860
sap 是一个同名的构造函数

148
00:07:02,860 --> 00:07:06,750
以及呢， jannine draw circle 相应的方法

149
00:07:06,750 --> 00:07:08,550
有没有发现问题呀

150
00:07:08,550 --> 00:07:10,530
我们在前面提到过吧

151
00:07:10,530 --> 00:07:14,120
看到抽象的修饰就要警惕了

152
00:07:14,120 --> 00:07:15,970
每一个抽象类里面

153
00:07:15,970 --> 00:07:18,530
至少要包含一个抽象方法

154
00:07:18,530 --> 00:07:20,430
这里有没有抽象方法

155
00:07:20,430 --> 00:07:21,310
没有

156
00:07:21,310 --> 00:07:23,300
所以第六个填空

157
00:07:23,300 --> 00:07:26,200
它一定是一个抽象方法

158
00:07:26,200 --> 00:07:28,560
那到底是什么方法呢

159
00:07:28,560 --> 00:07:31,230
看到在子类当中

160
00:07:31,230 --> 00:07:33,660
它实实现了形状类

161
00:07:33,660 --> 00:07:36,160
那这个形状类里面，哎

162
00:07:36,160 --> 00:07:38,740
有一个同名的构造函数

163
00:07:38,740 --> 00:07:41,060
还有一个 draw 方法

164
00:07:41,060 --> 00:07:43,550
所以这个方法就是呢

165
00:07:43,550 --> 00:07:47,140
我们从抽象类当中继承过来的

166
00:07:47,140 --> 00:07:50,820
那将这个方法的返回值类型

167
00:07:50,820 --> 00:07:55,250
以及函数名参数列表写下来

168
00:07:55,660 --> 00:07:58,200
这就是呢，第六空

169
00:07:58,200 --> 00:08:02,380
形状类里面所缺失的抽象方法

170
00:08:02,380 --> 00:08:03,850
有没有后括号

171
00:08:03,850 --> 00:08:04,930
一定要注意

172
00:08:04,930 --> 00:08:06,690
这里没有后括号了

173
00:08:06,690 --> 00:08:09,440
没有具体的方法实现

174
00:08:09,440 --> 00:08:11,530
还有抽象关键字

175
00:08:11,530 --> 00:08:14,230
在抽象类里面是必不可少的

176
00:08:14,230 --> 00:08:16,340
一定要出现

177
00:08:16,340 --> 00:08:19,110
那这个抽象的过程当中呢

178
00:08:19,110 --> 00:08:21,950
哎，根据抽象类和实现

179
00:08:21,950 --> 00:08:25,610
也能呢，找到相应的这个对应关系

180
00:08:25,610 --> 00:08:27,370
那这道题呀

181
00:08:27,370 --> 00:08:32,000
将相应的程序和形状把它呢区分开

182
00:08:32,000 --> 00:08:35,539
还有相应的程序和操作系统区分开

183
00:08:35,539 --> 00:08:38,360
都是呢，典型的桥接模式

184
00:08:38,360 --> 00:08:42,330
这道题其实还有一道题容易出现

185
00:08:42,330 --> 00:08:44,520
唉，错误的地方是什么呢

186
00:08:44,520 --> 00:08:48,820
我们在调用相应方法去绘图的时候

187
00:08:48,820 --> 00:08:53,590
有一个方法是 X 1、 Y 1、 X 2、 Y 2

188
00:08:53,590 --> 00:08:55,660
其中还有一种方法

189
00:08:55,660 --> 00:09:01,330
它的参数顺序是 X 1、 X 2、 Y 1、 Y 2

190
00:09:01,330 --> 00:09:04,260
容易呢出现相应的错误

191
00:09:04,260 --> 00:09:07,250
所以大家呢，在做这些题目的时候

192
00:09:07,250 --> 00:09:09,500
一定呢要注意细节

193
00:09:09,500 --> 00:09:11,430
那这个表格当中

194
00:09:11,430 --> 00:09:12,830
其实就体现了

195
00:09:12,830 --> 00:09:15,920
我们刚刚所说的参数顺序不一样

196
00:09:15,920 --> 00:09:19,600
曾经呢，有类似的题目考过呢，这个参数

197
00:09:19,600 --> 00:09:21,460
所以大家呢，了解一下

198
00:09:21,460 --> 00:09:24,080
要注意呢，相应的细节问题

199
00:09:24,080 --> 00:09:26,360
我们在后面呢，可以看到

200
00:09:26,360 --> 00:09:29,350
这是啊填空的六个填空的代码

201
00:09:29,350 --> 00:09:31,510
那相应的这个分值呢

202
00:09:31,510 --> 00:09:33,530
就不再是三分一个了

203
00:09:33,530 --> 00:09:35,290
那我们在这里啊

204
00:09:35,290 --> 00:09:38,300
基本上是平均02:05分一个填空

205
00:09:38,300 --> 00:09:40,260
注意呢，不要写错了

206
00:09:40,260 --> 00:09:42,060
一些细节上的地方呢

207
00:09:42,060 --> 00:09:44,060
注意不要呢混淆了

208
00:09:44,060 --> 00:09:45,060
那这是呢

209
00:09:45,060 --> 00:09:49,020
关于桥接模式在代码填空当中的考察
