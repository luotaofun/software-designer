1
00:00:00,000 --> 00:00:01,900
那我们展开来看一下

2
00:00:01,900 --> 00:00:05,510
C 加加语法当中的一些呢，考察要点

3
00:00:05,510 --> 00:00:07,400
在 C 加加当中啊

4
00:00:07,400 --> 00:00:09,600
我们面向对象的核心呢

5
00:00:09,600 --> 00:00:12,520
都会涉及到类这样的一个呢部分

6
00:00:12,520 --> 00:00:17,430
那类在 C 加加当中是用的 class 来表示

7
00:00:17,430 --> 00:00:21,120
它是一个类名的那类的组成部分

8
00:00:21,120 --> 00:00:23,580
包含成员函数和

9
00:00:23,580 --> 00:00:25,680
诶，我们的数据成员

10
00:00:25,680 --> 00:00:27,900
那对于这些成员

11
00:00:27,900 --> 00:00:31,160
我们可以标注为 public 公

12
00:00:31,160 --> 00:00:33,100
或者呢 private 私有

13
00:00:33,100 --> 00:00:37,090
以及呢 protected 表示呢保护级别的

14
00:00:37,090 --> 00:00:40,930
那这三类访问限制符的话

15
00:00:40,930 --> 00:00:42,970
大致是什么样的含义呢

16
00:00:42,970 --> 00:00:44,780
公有它就是一个公开

17
00:00:44,780 --> 00:00:47,940
大家呢都可以访问可以使用的东西

18
00:00:47,940 --> 00:00:51,180
而私有它是一种私密性质的

19
00:00:51,180 --> 00:00:55,860
只能呢在我们当前这个类里面来访问

20
00:00:55,860 --> 00:00:57,520
或者使用它

21
00:00:57,520 --> 00:01:01,810
那这里其实是我们典型的面向对象当中

22
00:01:01,810 --> 00:01:05,600
封装的一种思想啊

23
00:01:05,600 --> 00:01:07,980
我们将属性，诶

24
00:01:07,980 --> 00:01:11,720
相应的一些私有属性打包装起来

25
00:01:11,720 --> 00:01:15,140
里面呢用私有来进行修饰

26
00:01:15,140 --> 00:01:18,080
那这个时候对外就看不到它了

27
00:01:18,080 --> 00:01:21,610
只有在内本身才能进行使用

28
00:01:21,610 --> 00:01:23,430
那对外怎么办呢

29
00:01:23,430 --> 00:01:25,570
保留了公有的接口

30
00:01:25,570 --> 00:01:27,380
利用 public 方法

31
00:01:27,380 --> 00:01:31,160
可以呢让外部的一些类来调用它

32
00:01:31,160 --> 00:01:34,110
这就是呢我们之前提到的封装

33
00:01:34,110 --> 00:01:38,140
将一些属性和行为隐藏起来

34
00:01:38,140 --> 00:01:39,620
对外不可见

35
00:01:39,620 --> 00:01:43,340
那中间还有一个限制级呢

36
00:01:43,340 --> 00:01:44,960
叫做保护级别的

37
00:01:44,960 --> 00:01:47,120
用保护级别来修饰

38
00:01:47,120 --> 00:01:50,560
意味着我们在一个包当中

39
00:01:50,560 --> 00:01:55,770
相应的这些类可以呢调用这种修饰的方法

40
00:01:55,770 --> 00:01:57,530
或者呢属性

41
00:01:57,530 --> 00:02:01,060
那我们的包也是属于啊

42
00:02:01,060 --> 00:02:04,120
一种呢面向对象当中的一种思想

43
00:02:04,120 --> 00:02:07,350
一个包里面是可以有多个类的

44
00:02:07,350 --> 00:02:10,940
大致呢了解一下这三者的区别

45
00:02:10,940 --> 00:02:15,200
那我们在写相应的类的组成的时候啊

46
00:02:15,200 --> 00:02:18,410
一般属性会定义为私有

47
00:02:18,410 --> 00:02:22,110
而定义私有之后要想做一些调整

48
00:02:22,110 --> 00:02:26,070
就会有了公有的方法来进行调整

49
00:02:27,070 --> 00:02:31,330
针对我们的 C 加加当中的类来看的话

50
00:02:31,330 --> 00:02:36,150
我们啊可以在类当中定义公有的一些方法

51
00:02:36,150 --> 00:02:40,290
下面给大家列举的这个方法比较特殊

52
00:02:40,290 --> 00:02:42,660
它是一个虚函数

53
00:02:42,660 --> 00:02:44,340
并且等于零

54
00:02:44,340 --> 00:02:47,460
表示它是纯虚函数

55
00:02:51,280 --> 00:02:52,940
纯虚函数啊

56
00:02:52,940 --> 00:02:54,580
跟我们后面讲到的

57
00:02:54,580 --> 00:02:58,020
java 当中的抽象函数是一个概念

58
00:02:58,020 --> 00:03:00,760
意味着它是只有方法

59
00:03:00,760 --> 00:03:03,540
它的定义没有具体实现的

60
00:03:03,540 --> 00:03:06,710
在接口当中用到的非常多

61
00:03:06,710 --> 00:03:11,610
那这里呢，先了解一下传虚函数这种写法啊

62
00:03:11,610 --> 00:03:13,480
在 C 加加当中呢

63
00:03:13,480 --> 00:03:15,780
它的继承比较特殊

64
00:03:15,780 --> 00:03:19,880
它可以支持多种继承、多重继承

65
00:03:19,880 --> 00:03:22,330
那也就是说，除了类名以外

66
00:03:22,330 --> 00:03:25,540
它后面可以表示继承方式的时候

67
00:03:25,540 --> 00:03:28,110
可以有多种继承方

68
00:03:28,110 --> 00:03:29,830
继承于多个类

69
00:03:29,830 --> 00:03:32,140
目前在我们考试当

70
00:03:32,140 --> 00:03:33,760
还是单重继承

71
00:03:33,760 --> 00:03:36,190
考察的形式会多一些

72
00:03:36,190 --> 00:03:39,160
那用什么来表示继承呢

73
00:03:39,160 --> 00:03:40,950
在类后面

74
00:03:40,950 --> 00:03:44,650
然后呢，以冒号表示它的继承

75
00:03:44,650 --> 00:03:47,060
那继承过程当中

76
00:03:47,060 --> 00:03:51,560
用公有或者私有来表示继承的形式

77
00:03:51,560 --> 00:03:56,180
然后呢，后面再跟随我们继承的父类

78
00:03:56,180 --> 00:03:59,640
这就是呢， C 加加当中的继承过程

79
00:03:59,640 --> 00:04:00,460
嗯

80
00:04:01,600 --> 00:04:05,380
下面呢，再来看到我们在 C 加加当中啊

81
00:04:05,380 --> 00:04:08,900
有时候我们使用的函数也可以呢

82
00:04:08,900 --> 00:04:10,780
写在类的外面

83
00:04:10,780 --> 00:04:12,780
那我们正常的写法呢

84
00:04:12,780 --> 00:04:15,360
是类名在类里面

85
00:04:15,360 --> 00:04:16,839
大括括号里面啊

86
00:04:16,839 --> 00:04:20,370
写上相应的成员函数、成员属性

87
00:04:20,370 --> 00:04:22,019
那我们在这里呢

88
00:04:22,019 --> 00:04:24,760
大家可以看到还可以有啊

89
00:04:24,760 --> 00:04:28,000
一种方式就是写在类的外部

90
00:04:28,000 --> 00:04:30,700
那如果我写在类的外部

91
00:04:30,700 --> 00:04:34,350
如何知道这个函数是属于哪个类的呢

92
00:04:34,350 --> 00:04:40,600
就会用双冒号来表示我们对应的所属类名

93
00:04:40,600 --> 00:04:42,770
那这种情况下

94
00:04:42,770 --> 00:04:45,570
我们啊，同样有返回值类名

95
00:04:45,570 --> 00:04:50,190
返回值类型和函数名只是函数名

96
00:04:50,190 --> 00:04:53,230
它的完整写法是类名

97
00:04:53,230 --> 00:04:56,510
双冒号加上它的函数名

98
00:04:56,510 --> 00:05:01,450
那这种形式呢，是对函数名做了补充说明

99
00:05:01,450 --> 00:05:05,080
从而呢，唉，标注了一下它所属的

100
00:05:05,080 --> 00:05:07,100
到底呢，是哪个类

101
00:05:07,100 --> 00:05:10,010
那这种双冒号也可以呢

102
00:05:10,010 --> 00:05:13,510
把它叫做类的作用域分辨符

103
00:05:13,510 --> 00:05:15,040
那我们用在这里呢

104
00:05:15,040 --> 00:05:17,620
其实就是标注它的所属类

105
00:05:17,620 --> 00:05:21,230
比如说呢，之前的 cash normal 的方法

106
00:05:21,230 --> 00:05:22,610
我们可以呢

107
00:05:22,610 --> 00:05:26,330
诶，用我们的双冒号来表示

108
00:05:26,330 --> 00:05:31,500
唉，表示这是卡西罗马类里面的 accept 方法

109
00:05:31,500 --> 00:05:35,040
那这就是呢，我们所说到

110
00:05:35,040 --> 00:05:37,620
在类的外部来进行定义

111
00:05:37,620 --> 00:05:40,200
注意啊，双冒号前面是类名

112
00:05:40,200 --> 00:05:41,370
不是方法名

113
00:05:41,370 --> 00:05:43,520
这里的 accept cash 

114
00:05:43,520 --> 00:05:48,060
接收现金才是我们具体的方法名

115
00:05:48,560 --> 00:05:51,200
那我们对于 C 加加当中呢

116
00:05:51,200 --> 00:05:52,460
考察较多

117
00:05:52,460 --> 00:05:54,420
大家易错的一个地方呢

118
00:05:54,420 --> 00:05:56,910
就是纯虚函数的写法

119
00:05:56,910 --> 00:05:59,420
那我们对于虚函数啊

120
00:05:59,420 --> 00:06:02,110
会用抽象来进行修饰

121
00:06:02,110 --> 00:06:06,390
但在考试当中经常考大家纯虚函数

122
00:06:06,390 --> 00:06:08,390
那什么是纯虚函数

123
00:06:08,390 --> 00:06:13,350
我们在前面提到了我们的函数一般的规格

124
00:06:13,350 --> 00:06:18,010
它的格式啊，一般是返回值类型

125
00:06:22,680 --> 00:06:24,640
函数名

126
00:06:27,460 --> 00:06:30,380
以及形参列表

127
00:06:35,450 --> 00:06:37,890
和它的函数体

128
00:06:37,890 --> 00:06:39,770
或者叫做方法体

129
00:06:39,770 --> 00:06:42,810
或者呢叫做方法实现

130
00:06:42,810 --> 00:06:45,300
那这个过程当中啊

131
00:06:45,300 --> 00:06:47,140
我们的返回值类

132
00:06:47,140 --> 00:06:50,420
前面呢，还可以加上修饰符

133
00:06:54,940 --> 00:06:58,000
那我们所谓的纯虚函数呢

134
00:06:58,000 --> 00:07:01,820
就是上面这一排不发生变化

135
00:07:01,820 --> 00:07:03,370
区别的在于

136
00:07:03,370 --> 00:07:06,010
修饰符是虚函

137
00:07:06,010 --> 00:07:08,170
这种，诶，虚拟的表示

138
00:07:08,170 --> 00:07:11,450
以及呢，函数体不再存在

139
00:07:11,450 --> 00:07:13,220
括括号都没有

140
00:07:13,220 --> 00:07:18,840
而是呢，用等于零来表示它是一个纯的虚函数

141
00:07:18,840 --> 00:07:22,020
那这种格式大家呢，一定要记住

142
00:07:22,020 --> 00:07:23,170
考试当中啊

143
00:07:23,170 --> 00:07:26,350
我们一般对于接口这样的一些定义当中呢

144
00:07:26,350 --> 00:07:29,680
出现的都是纯虚函数居多

145
00:07:29,680 --> 00:07:31,500
那我们在这里啊

146
00:07:31,500 --> 00:07:33,340
知道呢，这种写法

147
00:07:33,340 --> 00:07:36,340
并且一定要注意行名参列表

148
00:07:36,340 --> 00:07:38,240
不要呢随之省略了

149
00:07:38,240 --> 00:07:42,290
如果上下文当中你找到的函数名称

150
00:07:42,290 --> 00:07:44,180
跟随的有参数

151
00:07:44,180 --> 00:07:47,320
你一定要一定要把它保留下来

152
00:07:47,320 --> 00:07:49,830
不要呢随意的把它抛弃了

153
00:07:49,830 --> 00:07:50,740
那这是呢

154
00:07:50,740 --> 00:07:51,740
纯虚函数

155
00:07:51,740 --> 00:07:56,450
也是我们考试当中经常考到的考察填空形式

156
00:07:56,450 --> 00:07:58,660
最后呢，再给大家讲一下

157
00:07:58,660 --> 00:08:03,510
简单提一下呢，我们对象指针和引用的区别

158
00:08:03,510 --> 00:08:05,340
那我们 C 加加呀

159
00:08:05,340 --> 00:08:07,160
它是属于 C 系列的

160
00:08:07,160 --> 00:08:10,950
那 C 当中比较出名的就是指针的用法

161
00:08:10,950 --> 00:08:14,720
并且呢，其实指针的用法会比较复杂

162
00:08:14,720 --> 00:08:17,450
那我们在 C 加加当中啊

163
00:08:17,450 --> 00:08:21,040
有时候会看到对象名点，哎

164
00:08:21,040 --> 00:08:23,040
某一个方法或者属性

165
00:08:23,040 --> 00:08:26,700
有时候呢，又看到是一个箭头的指向

166
00:08:26,700 --> 00:08:29,820
那这两种有什么区别呢

167
00:08:29,830 --> 00:08:32,070
我们可以简单看一下

168
00:08:32,070 --> 00:08:34,490
我们在定义对象的时候

169
00:08:34,490 --> 00:08:39,169
可以呢，以类名加星号的形式定义

170
00:08:39,169 --> 00:08:41,669
叫做呢，对象的指针

171
00:08:41,669 --> 00:08:46,660
而我们如果以类名加上呢

172
00:08:46,660 --> 00:08:49,320
这个取地址符 and 符号

173
00:08:49,320 --> 00:08:51,000
诶来表示的话

174
00:08:51,000 --> 00:08:54,620
那这个叫做呢，对象的引用名

175
00:08:54,620 --> 00:08:58,670
它还需要呢，赋值被引用的对象

176
00:08:58,670 --> 00:09:02,010
那这两种定义是有区别的

177
00:09:02,010 --> 00:09:07,110
如果我们是通过对象名或者对象引用

178
00:09:07,110 --> 00:09:09,110
来访问对象的成员的话

179
00:09:09,110 --> 00:09:12,740
我们呢可以使用点来表示

180
00:09:12,740 --> 00:09:17,020
而如果我们使用对象指针

181
00:09:17,020 --> 00:09:20,000
注意定义星号的才是指针

182
00:09:20,000 --> 00:09:22,940
如果用指针来访问的话

183
00:09:22,940 --> 00:09:26,520
会用的箭头来表示指针指向

184
00:09:26,520 --> 00:09:29,860
那指向其中的成员部分

185
00:09:29,860 --> 00:09:33,940
所以这里呢，要注意它的使用有区别

186
00:09:33,940 --> 00:09:36,800
一个是指真名指向对象

187
00:09:36,800 --> 00:09:37,690
一个呢

188
00:09:37,690 --> 00:09:40,670
唉，是我们的这种对象名

189
00:09:40,670 --> 00:09:44,220
或者对象引用名来指向呢

190
00:09:44,220 --> 00:09:47,380
用点来引用它的对象

191
00:09:47,380 --> 00:09:49,580
那这个地方呢，要注意一下

192
00:09:49,580 --> 00:09:51,460
在考试当中啊

193
00:09:51,460 --> 00:09:54,950
箭头和点的用法呢，会有一些区别

194
00:09:54,950 --> 00:09:56,800
不要呢混淆了

195
00:09:56,800 --> 00:09:57,930
那这些啊

196
00:09:57,930 --> 00:10:00,670
就是我们给大家讲到

197
00:10:00,670 --> 00:10:04,700
关于呢， C 加加当中的一些语法的应用

198
00:10:04,700 --> 00:10:07,270
那如果说你有相关经验的话

199
00:10:07,270 --> 00:10:09,650
这些呢，都是一些基础的内容呢

200
00:10:09,650 --> 00:10:11,840
大家呢，在考试的时候啊

201
00:10:11,840 --> 00:10:14,280
注意一些细节就可以了

202
00:10:14,280 --> 00:10:16,440
如果说不熟悉的话

203
00:10:16,440 --> 00:10:20,990
我们呢，还是建议大家选择 java 的语法来入手

204
00:10:20,990 --> 00:10:24,150
相对来说入门会简单一些

205
00:10:24,150 --> 00:10:26,770
后面我们呢，会给大家展

206
00:10:26,770 --> 00:10:29,830
再来讲解一下 java 的语法要点
