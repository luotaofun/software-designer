1
00:00:00,000 --> 00:00:00,820
最后呢

2
00:00:00,820 --> 00:00:04,320
我们来看一下规范化理论基本概念当

3
00:00:04,320 --> 00:00:06,020
最重要的一个部分

4
00:00:06,020 --> 00:00:07,410
候选键

5
00:00:07,410 --> 00:00:08,920
候选键啊

6
00:00:08,920 --> 00:00:14,020
它的分析在我们上午题当中经常会考大家

7
00:00:14,020 --> 00:00:16,520
那找完候选键之后

8
00:00:16,520 --> 00:00:19,220
与它相关的还有一个属性呢

9
00:00:19,220 --> 00:00:22,380
叫做主属性与非主属性的概念

10
00:00:22,380 --> 00:00:25,800
那它所谓的主属性其实就是呢

11
00:00:25,800 --> 00:00:27,170
候选键属性

12
00:00:27,170 --> 00:00:31,420
我们先来看一下候选键如何来求

13
00:00:32,100 --> 00:00:36,930
候选键它是呢，可以唯一标识元组的

14
00:00:36,930 --> 00:00:41,690
并且呢，没有冗余的这样的属性集合

15
00:00:41,690 --> 00:00:44,560
那对于候选键而言

16
00:00:44,560 --> 00:00:48,940
我们呢，在前面关系模式的基本概念也有提到

17
00:00:48,940 --> 00:00:50,610
对于候选键

18
00:00:50,610 --> 00:00:51,990
它可以啊

19
00:00:51,990 --> 00:00:54,740
通过候选键的属性集合

20
00:00:54,740 --> 00:01:00,190
推导出整个关系模式当中其他的所有属性

21
00:01:00,190 --> 00:01:01,970
就是呢，候选键

22
00:01:01,970 --> 00:01:04,680
并且是没有冗余的

23
00:01:04,680 --> 00:01:06,970
诶，候选键可以有一个

24
00:01:06,970 --> 00:01:08,380
也可以有多个

25
00:01:08,380 --> 00:01:10,040
候选键的属性

26
00:01:10,040 --> 00:01:11,620
可以是单属性

27
00:01:11,620 --> 00:01:14,920
也可以是多属性的组合键

28
00:01:14,920 --> 00:01:18,670
那从候选件当中任选一个

29
00:01:18,670 --> 00:01:21,450
我们呢，可以定义为主见

30
00:01:21,450 --> 00:01:22,390
一般呢

31
00:01:22,390 --> 00:01:26,450
主见与相关的业务逻辑有一定的关联性

32
00:01:26,450 --> 00:01:28,490
那最后还有一个呢

33
00:01:28,490 --> 00:01:33,090
外建外界是其他关系的主见

34
00:01:33,090 --> 00:01:36,650
主要体现的是参照完整性

35
00:01:36,650 --> 00:01:37,860
哎，表示呢

36
00:01:37,860 --> 00:01:39,520
我们这个表格啊

37
00:01:39,520 --> 00:01:41,300
我们这个关系模式呀

38
00:01:41,300 --> 00:01:44,910
与其他关系模式之间存在联系

39
00:01:44,910 --> 00:01:46,710
那这个联系呢，唉

40
00:01:46,710 --> 00:01:49,070
外界一般体现的就是归并

41
00:01:49,070 --> 00:01:52,060
将另一端的主键归并进来

42
00:01:52,060 --> 00:01:55,010
那这种呢，一般是外界的引用

43
00:01:55,010 --> 00:02:00,330
我们最主要的是分析候选键如何来找到

44
00:02:00,330 --> 00:02:03,720
那我们前面在讲候选键主键的时候

45
00:02:03,720 --> 00:02:06,470
主要体现的是它的唯一标识

46
00:02:06,470 --> 00:02:09,740
且无冗余、不可重复、不可为空

47
00:02:09,740 --> 00:02:13,700
那我们真正在做题的过程当中

48
00:02:13,700 --> 00:02:16,530
上午题经常会出现一些呢

49
00:02:16,530 --> 00:02:19,410
A 、 B 、 C 、 D 这样的字母属性

50
00:02:19,410 --> 00:02:20,810
让我们去判断的话

51
00:02:20,810 --> 00:02:24,080
唉，我们就不好去找它的冗余度了吧

52
00:02:24,080 --> 00:02:25,250
那怎么办呢

53
00:02:25,250 --> 00:02:29,070
一般可以用图示法来求候选键

54
00:02:29,070 --> 00:02:32,730
什么是图示法取后求候选键呢

55
00:02:32,730 --> 00:02:35,600
它会将所有的函数依赖啊

56
00:02:35,600 --> 00:02:39,020
它的关系用有向图来表示

57
00:02:39,020 --> 00:02:41,980
比如说 A 函数决定 B 

58
00:02:41,980 --> 00:02:43,150
我们可以呢

59
00:02:43,150 --> 00:02:47,950
用有向图 A 到 B 、 A 、 B 两个节点箭

60
00:02:47,950 --> 00:02:50,570
表示它们之间的函数依赖

61
00:02:50,570 --> 00:02:53,210
从而呢，画出它的有向图

62
00:02:53,210 --> 00:02:58,480
然后找出入度为零的属性集合

63
00:02:58,480 --> 00:03:02,030
在箭头指向的过程当中

64
00:03:02,030 --> 00:03:05,550
箭头的流出我们叫做初度

65
00:03:05,700 --> 00:03:07,620
箭头的流入

66
00:03:07,620 --> 00:03:09,520
我们叫做入度

67
00:03:09,520 --> 00:03:10,980
入洞为零

68
00:03:10,980 --> 00:03:14,720
意味着没有任何属性能够呢

69
00:03:14,720 --> 00:03:16,430
推导出该属性吧

70
00:03:16,430 --> 00:03:19,190
那大家都推不出来怎么办

71
00:03:19,190 --> 00:03:20,940
自己推自己

72
00:03:20,940 --> 00:03:24,220
所以入度为零的属性集合

73
00:03:24,220 --> 00:03:27,140
一定是候选键的一部分

74
00:03:27,140 --> 00:03:29,460
方便他自己推自己

75
00:03:29,460 --> 00:03:30,900
否则的话

76
00:03:30,900 --> 00:03:35,910
唉，我们其他的任意属性是推不出它的候选键

77
00:03:35,910 --> 00:03:38,170
推不出其中某一个属性

78
00:03:38,170 --> 00:03:39,670
还叫候选键吗

79
00:03:39,670 --> 00:03:41,930
就不叫候选键了

80
00:03:41,930 --> 00:03:44,650
所以一定呢，入度为零的属性

81
00:03:44,650 --> 00:03:47,320
在我们候选键集合当中

82
00:03:47,320 --> 00:03:52,150
以这个属性集合为起点来尝试呢

83
00:03:52,150 --> 00:03:54,870
去便利其他的属性

84
00:03:54,870 --> 00:03:57,120
那便利的过程当中

85
00:03:57,120 --> 00:04:00,220
这种传递过程我们呢

86
00:04:00,220 --> 00:04:02,800
也叫做可以便利的

87
00:04:02,800 --> 00:04:05,080
所以便利的过程并不

88
00:04:05,080 --> 00:04:07,500
并不一定是直接指向

89
00:04:07,500 --> 00:04:09,720
可以呢，是传递的

90
00:04:09,720 --> 00:04:13,910
如果说通过入度为零的属性集合

91
00:04:13,910 --> 00:04:16,490
没办法访问到所有属性的话

92
00:04:16,490 --> 00:04:17,459
怎么办呢

93
00:04:17,459 --> 00:04:22,180
我们可以尝试添加一些中间节点

94
00:04:22,180 --> 00:04:25,690
也就是既有入度也有出度的

95
00:04:25,690 --> 00:04:29,110
并入到我们前面的集合当中

96
00:04:29,110 --> 00:04:34,090
直到能够遍历全图的最小集合为止

97
00:04:34,090 --> 00:04:36,230
这就是呢，候选键

98
00:04:36,230 --> 00:04:40,360
我们呢，以例子来看一看它的分析过程

99
00:04:40,360 --> 00:04:42,600
首先第一个例题

100
00:04:42,600 --> 00:04:44,410
假设给定关系

101
00:04:44,410 --> 00:04:47,410
R 1、二、 A 1、 A 2、 A 3、 A 4

102
00:04:47,410 --> 00:04:48,510
哎，谁是 A 1

103
00:04:48,510 --> 00:04:50,910
其实没有什么特殊的含义

104
00:04:50,910 --> 00:04:51,890
那怎么办

105
00:04:51,890 --> 00:04:54,460
我们要把函数依赖呢，写出来

106
00:04:54,460 --> 00:04:56,220
A 1决定 A 2

107
00:04:56,220 --> 00:04:57,800
A 3决定 A 2

108
00:04:57,800 --> 00:04:59,160
A 2决定 A 3

109
00:04:59,160 --> 00:05:00,890
A 2决定 A 4

110
00:05:00,890 --> 00:05:03,690
那他的候选键怎么求呢

111
00:05:03,690 --> 00:05:09,190
首先把 A 1和 A 2到 A 3、 A 4的关

112
00:05:09,190 --> 00:05:11,770
转换成有向图

113
00:05:12,250 --> 00:05:14,350
A 1决定 A 2

114
00:05:14,350 --> 00:05:16,290
A 3决定 A 2

115
00:05:16,290 --> 00:05:18,150
A 2决定 A 3

116
00:05:18,150 --> 00:05:20,060
A 2决定 A 4

117
00:05:20,060 --> 00:05:23,750
那我们 A 1节点有没有入度

118
00:05:23,750 --> 00:05:26,130
没有，入度为零

119
00:05:26,130 --> 00:05:28,060
出度为一

120
00:05:28,060 --> 00:05:31,130
A 2节点入度为二

121
00:05:31,130 --> 00:05:32,520
出度为二

122
00:05:32,520 --> 00:05:35,040
A 3节点入度为一

123
00:05:35,040 --> 00:05:36,240
出度为一

124
00:05:36,240 --> 00:05:38,720
A 4节点入度为一

125
00:05:38,720 --> 00:05:40,350
出度为零

126
00:05:40,350 --> 00:05:45,520
那入度为零的属性集合只有 A 1吧

127
00:05:45,520 --> 00:05:49,000
通过 A 1能不能遍历全图呢

128
00:05:49,000 --> 00:05:51,460
A 1可以找到 A 2哎

129
00:05:51,460 --> 00:05:54,260
通过 A 2可以找到 A 3、 A 4

130
00:05:54,260 --> 00:05:55,780
所以足够了

131
00:05:55,780 --> 00:05:57,660
那我们的候选件呢

132
00:05:57,660 --> 00:05:59,420
就是 A 1

133
00:05:59,420 --> 00:06:02,900
其他选项属于什么样的情况呢

134
00:06:02,900 --> 00:06:04,960
属于冗余

135
00:06:05,550 --> 00:06:08,750
它一定是没有冗余的

136
00:06:08,750 --> 00:06:11,250
那这里的候选关键字呢

137
00:06:11,250 --> 00:06:12,920
就是 A 1

138
00:06:12,920 --> 00:06:14,990
再来看第二个例子

139
00:06:14,990 --> 00:06:16,340
大家来想一想

140
00:06:16,340 --> 00:06:18,860
给大家一个函数依赖

141
00:06:18,860 --> 00:06:20,420
唉，一个关系模式

142
00:06:20,420 --> 00:06:23,060
a 、 b 、 c 、 d 、 e 、 f 、 g 、 h 、 i 、 j 

143
00:06:23,060 --> 00:06:25,450
好多个属性节点吧

144
00:06:25,450 --> 00:06:29,470
函数依赖看起来好像也很复杂

145
00:06:29,470 --> 00:06:33,680
那如果要给大家一个尝试的机会

146
00:06:33,680 --> 00:06:35,800
把这个图示画出来

147
00:06:35,800 --> 00:06:38,220
大家能不能找得到呢

148
00:06:39,510 --> 00:06:41,770
自己来试一试

149
00:06:41,770 --> 00:06:44,030
那我们可以看到啊

150
00:06:44,140 --> 00:06:46,620
在图示法当中

151
00:06:46,620 --> 00:06:50,240
入度跟函数依赖的箭头指向

152
00:06:50,240 --> 00:06:52,220
是不是有一定的关系啊

153
00:06:52,220 --> 00:06:54,130
有箭头指向 E 

154
00:06:54,130 --> 00:06:56,130
所以它有入度吧

155
00:06:56,130 --> 00:06:57,390
入度不为零

156
00:06:57,390 --> 00:06:59,950
A 、 E 的入度不为零

157
00:06:59,950 --> 00:07:01,940
G 的入度不为零

158
00:07:01,940 --> 00:07:03,600
F 入度不为零

159
00:07:03,600 --> 00:07:08,240
还有呢， hi 接入度都没有为零吧

160
00:07:08,240 --> 00:07:11,960
所以入度为零的集合有哪些

161
00:07:11,960 --> 00:07:17,170
入度为零的属性有 A 、 B 、 C 、 D 

162
00:07:17,370 --> 00:07:22,660
那入度为零的集合能不能遍历全图呢

163
00:07:22,660 --> 00:07:25,990
我们发现 A 、 B 、 D 属性在了

164
00:07:25,990 --> 00:07:27,530
能不能找到 E 

165
00:07:27,530 --> 00:07:31,570
可以找到 A ， B 在了可以找到 G 

166
00:07:31,570 --> 00:07:34,180
B 在了可以找到 F 

167
00:07:34,180 --> 00:07:36,880
C 在了可以找到接

168
00:07:36,880 --> 00:07:39,650
然后找到 J 之后

169
00:07:39,650 --> 00:07:42,010
通过已有的 C 和 J 

170
00:07:42,010 --> 00:07:44,320
我们可以找到属性 I 

171
00:07:44,320 --> 00:07:47,890
然后呢，通过已经找到的 G 

172
00:07:47,890 --> 00:07:50,130
我们可以找到 H 吧

173
00:07:50,130 --> 00:07:54,740
所以 ABCD 同样可以遍历全图

174
00:07:54,740 --> 00:07:57,570
推导出其他的所有属性

175
00:07:57,570 --> 00:08:01,170
那这就是他的候选键了

176
00:08:01,170 --> 00:08:03,910
诶，候选键是多个属性

177
00:08:03,910 --> 00:08:07,390
我们呢，一定不要用逗号隔开

178
00:08:07,390 --> 00:08:09,380
把它们呢，写在一块

179
00:08:09,380 --> 00:08:12,070
最好呢，如果是汉字的话

180
00:08:12,070 --> 00:08:15,490
建议大家用括号把它们括起来

181
00:08:15,490 --> 00:08:17,790
表示这是一个整体

182
00:08:17,790 --> 00:08:19,310
作为候选键

183
00:08:19,310 --> 00:08:20,280
下午题啊

184
00:08:20,280 --> 00:08:21,780
找主线的时候

185
00:08:21,780 --> 00:08:23,820
如果是多个属性组合

186
00:08:23,820 --> 00:08:25,820
建议大家呢，用括号

187
00:08:25,820 --> 00:08:28,040
哎，把属性一

188
00:08:28,760 --> 00:08:31,340
和属性二等等

189
00:08:31,340 --> 00:08:33,620
用括号括起来表

190
00:08:33,620 --> 00:08:35,299
这是一个组合键

191
00:08:35,299 --> 00:08:36,390
作为主键

192
00:08:36,390 --> 00:08:40,309
那它的图示啊，其实画起来很麻烦啊

193
00:08:40,309 --> 00:08:43,250
相对来说呢，容易出现错误

194
00:08:43,250 --> 00:08:45,300
所以建议大家呢，可以啊

195
00:08:45,300 --> 00:08:48,900
直接通过函数依赖来判断它的入度

196
00:08:48,900 --> 00:08:51,160
并且在上五题当中

197
00:08:51,160 --> 00:08:54,620
一般通过入度为零的属性集合

198
00:08:54,620 --> 00:08:58,340
我们可以呢，直接找到正确的选项

199
00:08:58,340 --> 00:09:01,070
那再来看第三个例子

200
00:09:01,070 --> 00:09:03,630
假设关系2 ABC 

201
00:09:03,630 --> 00:09:07,040
它们之间满足函数依赖如下

202
00:09:07,040 --> 00:09:08,710
那问大家

203
00:09:08,710 --> 00:09:11,670
他的候选关键字是什么呢

204
00:09:11,670 --> 00:09:16,260
唉，我们在这里入度为零的属性有没有

205
00:09:16,260 --> 00:09:19,120
没有 ABC ，它都有入度

206
00:09:19,120 --> 00:09:22,230
那哪些是中间节点呢

207
00:09:22,230 --> 00:09:26,310
哎，我们相应的 A 入度为一

208
00:09:26,310 --> 00:09:28,050
出度为一

209
00:09:28,830 --> 00:09:30,990
对于 B 来说

210
00:09:30,990 --> 00:09:33,190
它的出度为二

211
00:09:33,190 --> 00:09:35,310
入度为一

212
00:09:37,780 --> 00:09:40,580
再来看对于 C 来说

213
00:09:40,580 --> 00:09:42,340
它有没有入度呢

214
00:09:42,340 --> 00:09:43,420
入度为二

215
00:09:43,420 --> 00:09:45,080
出度为零

216
00:09:45,080 --> 00:09:46,940
所以在这里啊

217
00:09:46,940 --> 00:09:49,060
既有入度也有出路的

218
00:09:49,060 --> 00:09:50,860
其实是 A 和 B 吧

219
00:09:50,860 --> 00:09:52,360
我们会发现呢

220
00:09:52,360 --> 00:09:55,990
通过 A 中间节点可以找到 B 

221
00:09:55,990 --> 00:09:59,420
所以 A 可以作为候选键

222
00:09:59,420 --> 00:10:02,170
ab 、 AC 就有冗余了吧

223
00:10:02,170 --> 00:10:05,380
所以 A 可以作为候选键

224
00:10:05,380 --> 00:10:07,320
还有没有中间节点

225
00:10:07,320 --> 00:10:07,940
有

226
00:10:07,940 --> 00:10:10,220
所以我们接着尝

227
00:10:10,220 --> 00:10:12,940
B 能不能遍历全图

228
00:10:12,940 --> 00:10:15,940
B 可以找到 C 可以找到 A 

229
00:10:15,940 --> 00:10:18,300
所以 B 也满足要求

230
00:10:18,300 --> 00:10:21,430
那么 B 也是候选键

231
00:10:21,430 --> 00:10:23,390
BC 就是冗余了

232
00:10:23,390 --> 00:10:26,680
那这里我们就发现候选键有多个了

233
00:10:26,680 --> 00:10:31,160
这种情况下不能写作， ab 连在一起

234
00:10:31,160 --> 00:10:33,090
这是组合键

235
00:10:33,090 --> 00:10:36,950
这是两个候选键含义不一样

236
00:10:36,950 --> 00:10:39,030
不要呢，混淆了

237
00:10:39,040 --> 00:10:45,180
那这是关于候选键它的分析过程

238
00:10:45,180 --> 00:10:48,810
这个分析过程是要求大家一定要掌握的

239
00:10:48,810 --> 00:10:52,060
去查找候选键的属性集合

240
00:10:52,060 --> 00:10:54,070
那这是第三个例子

241
00:10:54,070 --> 00:10:55,770
它的图示自己呢

242
00:10:55,770 --> 00:10:57,590
不要把自己绕晕呢

243
00:10:57,590 --> 00:11:00,300
那对于候选键而言

244
00:11:00,300 --> 00:11:05,200
候选件包含的属性就是呢，主属性

245
00:11:05,200 --> 00:11:07,370
我们其他的属性呢

246
00:11:07,370 --> 00:11:09,870
就叫做非主属性了

247
00:11:09,870 --> 00:11:13,310
那比如说呢，我们刚刚的例子当中

248
00:11:13,310 --> 00:11:15,920
这道题有两个候选键

249
00:11:15,920 --> 00:11:17,780
那么 A 是主属性

250
00:11:17,780 --> 00:11:19,820
B 也是主属性

251
00:11:19,820 --> 00:11:23,330
只有 C 呢，是非主属性的

252
00:11:23,330 --> 00:11:25,590
那下面还有一个例子

253
00:11:25,590 --> 00:11:27,480
对于关系模式啊

254
00:11:27,480 --> 00:11:28,980
这个关系模式而言

255
00:11:28,980 --> 00:11:30,320
它有三个属性

256
00:11:30,320 --> 00:11:34,240
属性组上的函数依赖集如下所示

257
00:11:34,240 --> 00:11:37,670
那问大家候选键是什么

258
00:11:37,670 --> 00:11:40,500
这道题的这个例子的候选键

259
00:11:40,500 --> 00:11:42,960
其实是难度非常大的

260
00:11:42,960 --> 00:11:45,920
大家自己呢，先思考一下

261
00:11:45,930 --> 00:11:47,790
我们可以发现啊

262
00:11:47,790 --> 00:11:52,470
如果将相应的属性画成有向图的话

263
00:11:52,470 --> 00:11:53,600
我们可以呢

264
00:11:53,600 --> 00:11:56,520
根据入度为零的属性

265
00:11:56,520 --> 00:11:59,970
来判断谁是入度为零的属性啊

266
00:11:59,970 --> 00:12:02,810
ST 是入度为零的

267
00:12:02,810 --> 00:12:06,880
哎，我们把它们的入度、出度还是能依次写一下

268
00:12:06,880 --> 00:12:08,750
对于 city 来看的话

269
00:12:08,750 --> 00:12:10,010
入度为一

270
00:12:10,010 --> 00:12:11,450
出度为一

271
00:12:11,450 --> 00:12:13,770
对于 s st 而言

272
00:12:13,770 --> 00:12:15,170
入度为零

273
00:12:15,170 --> 00:12:16,670
出度为一

274
00:12:16,670 --> 00:12:18,650
对于 zip 来说

275
00:12:18,650 --> 00:12:19,810
入度为一

276
00:12:19,810 --> 00:12:20,990
出度为一

277
00:12:20,990 --> 00:12:25,930
也就是说，入度为零的属性集合只有 s st 

278
00:12:25,930 --> 00:12:29,390
s st 能不能自己遍历全图啊

279
00:12:29,390 --> 00:12:30,170
不能

280
00:12:30,170 --> 00:12:34,460
s st 唯一的函数依赖是与 city 一起的

281
00:12:34,460 --> 00:12:38,600
所以它的候选件包含 s st 

282
00:12:38,600 --> 00:12:40,400
但 st 不够

283
00:12:40,400 --> 00:12:42,470
不足以作为候选键

284
00:12:42,470 --> 00:12:48,400
那 s st 和 city 组合起来能够访问 VIP 吧

285
00:12:48,400 --> 00:12:50,420
那此时便利全图了

286
00:12:50,420 --> 00:12:52,570
所以这是他的一个候选键

287
00:12:52,570 --> 00:12:55,510
能不能加上其他的属性呢

288
00:12:55,510 --> 00:12:57,010
也可以

289
00:12:57,010 --> 00:12:59,630
ST 不足以遍历全图

290
00:12:59,630 --> 00:13:03,310
但是我们可以通过 ZIP ，哎

291
00:13:03,310 --> 00:13:04,940
便利它本身

292
00:13:04,940 --> 00:13:07,940
再通过 zip 推导 city 呢

293
00:13:07,940 --> 00:13:09,780
来便利全图

294
00:13:09,780 --> 00:13:12,430
所以这里有两个候选键

295
00:13:12,430 --> 00:13:15,350
并且都是组合键

296
00:13:15,350 --> 00:13:18,220
那找到两个候选键之后

297
00:13:18,220 --> 00:13:22,240
我们会发现谁是它的主属性啊

298
00:13:22,240 --> 00:13:24,570
包含 s st 

299
00:13:24,570 --> 00:13:26,890
包含 city 

300
00:13:27,320 --> 00:13:30,320
还包含了 VIP 

301
00:13:30,880 --> 00:13:34,480
有没有非主属性呢

302
00:13:35,460 --> 00:13:37,820
没有非主属性了

303
00:13:37,820 --> 00:13:41,500
那这里没有非主属性

304
00:13:45,460 --> 00:13:47,940
这就是呢

305
00:13:47,940 --> 00:13:51,550
主属性和非主属性的判断

306
00:13:51,550 --> 00:13:54,140
那我们要求大家呢

307
00:13:54,140 --> 00:13:57,600
掌握候选键它的推导过程

308
00:13:57,600 --> 00:14:00,000
那掌握了候选键

309
00:14:00,000 --> 00:14:03,040
我们就知道呢，哪些是主属性

310
00:14:03,040 --> 00:14:05,090
哪些是非主属性呢

311
00:14:05,090 --> 00:14:10,040
然后呢，识别传递函数依赖和部分函数依赖

312
00:14:10,040 --> 00:14:11,120
我们在后续

313
00:14:11,120 --> 00:14:14,640
我们在规范化理论范式判断当中呢

314
00:14:14,640 --> 00:14:17,710
会用到相应的基本概念

315
00:14:17,710 --> 00:14:21,530
中间呢，还给大家提到了公理体系

316
00:14:21,530 --> 00:14:26,410
了解到相应的名称和描述的对应关系就行了

317
00:14:26,410 --> 00:14:30,380
下面呢，我们来看一下这一部分它的考察形式

318
00:14:30,380 --> 00:14:35,510
首先呢，下面这道题考察的是关于候选

319
00:14:35,510 --> 00:14:38,930
以及呢，属性相关的内容

320
00:14:38,930 --> 00:14:42,280
下面呢，给了我们一个关系模式啊

321
00:14:42,280 --> 00:14:46,350
里面的属性和函数依赖及如下

322
00:14:46,350 --> 00:14:50,880
唉，我们要判断这个关系有几个候选键

323
00:14:50,880 --> 00:14:52,460
哪些是主属性

324
00:14:52,460 --> 00:14:58,140
首先看到入度为零的属性有哪些入度

325
00:14:58,140 --> 00:15:01,110
唉，我们的 A 属性入度为零

326
00:15:01,110 --> 00:15:04,980
那 B 属性既有入度也有出度

327
00:15:04,980 --> 00:15:07,360
C 属性既有入度也有出度

328
00:15:07,360 --> 00:15:08,760
是中间节点

329
00:15:08,760 --> 00:15:11,480
A 能不能遍历全图不能

330
00:15:11,480 --> 00:15:14,290
那我们可以通过 ab 来便利

331
00:15:14,290 --> 00:15:16,470
哎，也可以通过 A 、 C 吧

332
00:15:16,470 --> 00:15:18,810
因为这个 C 可以找到 B 

333
00:15:18,810 --> 00:15:21,170
所以它有几个候选键呢

334
00:15:21,170 --> 00:15:22,950
两个候选键

335
00:15:22,950 --> 00:15:25,380
A 、 B 或者 A 、 C 

336
00:15:25,380 --> 00:15:28,480
那候选键找到了之

337
00:15:28,480 --> 00:15:30,800
有几个主属性呢

338
00:15:30,800 --> 00:15:32,200
A 是主属性

339
00:15:32,200 --> 00:15:33,420
B 是主属性

340
00:15:33,420 --> 00:15:35,490
C 也是主属性吧

341
00:15:35,490 --> 00:15:38,760
所以它有三个主属性

342
00:15:38,760 --> 00:15:41,890
诶，这里呢，应该选择 B 选项

343
00:15:41,890 --> 00:15:44,650
那我们的 BC 能不能做候选键

344
00:15:44,650 --> 00:15:45,330
不能啊

345
00:15:45,330 --> 00:15:49,280
是 AC 和 ab 来作为候选键

346
00:15:49,280 --> 00:15:53,830
那这是关于候选键和主属性的考察

347
00:15:54,670 --> 00:15:55,830
下面呢

348
00:15:55,830 --> 00:16:01,200
再来看到对我们候选件和函数依赖的考察

349
00:16:01,200 --> 00:16:03,810
下面给了我们一个关系模式

350
00:16:03,810 --> 00:16:05,310
唉，还是 UF 

351
00:16:05,310 --> 00:16:08,050
那 U 的话是它的属性集合

352
00:16:08,050 --> 00:16:09,950
a 1、 a 2、 a 3、 a 4

353
00:16:09,950 --> 00:16:12,440
F 呢，是函数依赖集合

354
00:16:12,440 --> 00:16:13,850
A 1到 A 2

355
00:16:13,850 --> 00:16:15,650
A 1、 A 2到 A 3

356
00:16:15,650 --> 00:16:16,730
A 1到 A 4

357
00:16:16,730 --> 00:16:18,120
A 2到 A 4

358
00:16:18,120 --> 00:16:20,640
那 A 1有没有入度

359
00:16:20,640 --> 00:16:21,640
没有入度

360
00:16:21,640 --> 00:16:23,860
我们发现 A 2有一个入度

361
00:16:23,860 --> 00:16:25,340
A 3有一个入度

362
00:16:25,340 --> 00:16:27,100
A 4有两个入度吧

363
00:16:27,100 --> 00:16:32,220
所以入度为零的属性是 A 1

364
00:16:32,310 --> 00:16:34,970
A 1是入度为零的

365
00:16:34,970 --> 00:16:37,510
能不能遍历全图呢

366
00:16:37,510 --> 00:16:41,260
我们会发现 A 1可以找到 A 2

367
00:16:41,260 --> 00:16:44,440
A 1呢又可以找到 A 4

368
00:16:44,440 --> 00:16:46,770
能不能找到 A 3呢

369
00:16:46,770 --> 00:16:49,690
A 1、 A 2可以找到 A 3

370
00:16:49,690 --> 00:16:51,440
所以我们会发现

371
00:16:51,440 --> 00:16:55,500
这里通过 A 1能够便利全图

372
00:16:55,500 --> 00:16:58,630
所以他的关系当中啊

373
00:16:58,630 --> 00:17:01,350
主见其实就是候选

374
00:17:01,350 --> 00:17:04,210
只要有 A 1就足够了

375
00:17:04,210 --> 00:17:07,490
那哪个函数依赖是冗余的呢

376
00:17:07,490 --> 00:17:09,369
我们在判断冗余的

377
00:17:09,369 --> 00:17:10,990
冗余的第一依据啊

378
00:17:10,990 --> 00:17:12,760
就是传递函数依赖

379
00:17:12,760 --> 00:17:17,150
我们会发现 A 1可以决定 A 2

380
00:17:17,150 --> 00:17:19,819
A 2可以决定 A 4

381
00:17:19,819 --> 00:17:21,859
那根据传递率

382
00:17:21,859 --> 00:17:23,869
我们可以推导得

383
00:17:23,869 --> 00:17:25,880
A 1决定 A 4吧

384
00:17:25,880 --> 00:17:28,099
这里就是传递函数依赖

385
00:17:28,099 --> 00:17:29,970
水溶于 A 

386
00:17:29,970 --> 00:17:32,410
决定 A 4是冗余的

387
00:17:32,410 --> 00:17:36,860
注意这两个函数依赖是不能反向推导的

388
00:17:36,860 --> 00:17:39,310
我们只能呢正向去推导

389
00:17:39,310 --> 00:17:41,470
也就是说 A 1和 A 4啊

390
00:17:41,470 --> 00:17:43,000
A 1到 A 4冗余

391
00:17:43,000 --> 00:17:44,790
我们的 A 1到 A 2

392
00:17:44,790 --> 00:17:47,510
A 2到 A 4并不是冗余的

393
00:17:47,510 --> 00:17:51,680
这里呢，注意一下冗余函数依赖的判断

394
00:17:51,680 --> 00:17:55,060
最后我们再来看一下这一部分呢

395
00:17:55,060 --> 00:17:57,460
对公理体系的考察

396
00:17:57,460 --> 00:18:00,180
下面给了我们一个关系模式

397
00:18:00,180 --> 00:18:02,920
RU ， U 是属性级

398
00:18:02,920 --> 00:18:04,500
F 是函数依赖集

399
00:18:04,500 --> 00:18:08,680
那么公理当中伪传递率指的是什么

400
00:18:08,680 --> 00:18:11,340
那我们想一想什么是传递率啊

401
00:18:11,340 --> 00:18:12,920
X 决定 Y 

402
00:18:12,920 --> 00:18:14,020
Y 决定 Z 

403
00:18:14,020 --> 00:18:16,610
那么 X 可以决定 Z 

404
00:18:16,610 --> 00:18:18,610
这个是传递率

405
00:18:18,610 --> 00:18:22,210
不要呢，记混了伪传递率

406
00:18:22,210 --> 00:18:26,060
它结结合了唉，我们的增广率吧

407
00:18:26,060 --> 00:18:27,780
什么是增广率

408
00:18:27,780 --> 00:18:29,600
X 决定 Y 

409
00:18:29,600 --> 00:18:32,110
Z 呢，也是属性集合当中的

410
00:18:32,110 --> 00:18:34,890
所以 X 、 Z 可以决定 Y 、 Z 

411
00:18:34,890 --> 00:18:37,530
那这个就是呢增广率

412
00:18:39,580 --> 00:18:43,060
根据这两个部分我们会发现呢

413
00:18:43,060 --> 00:18:44,980
X 决定 Y 

414
00:18:44,980 --> 00:18:48,360
X ， W 决定 Y 、 W 

415
00:18:48,360 --> 00:18:51,680
而 W 、 Y 、 U 决定 Z 的话

416
00:18:51,680 --> 00:18:53,000
我们可以知道呢

417
00:18:53,000 --> 00:18:56,510
W 、 Z ，呃， X 、 W 可以决定 Z 

418
00:18:56,510 --> 00:18:59,230
这个就是呢伪传递规则

419
00:18:59,230 --> 00:19:00,270
那这里呢

420
00:19:00,270 --> 00:19:02,950
B 选项就是伪传递

421
00:19:08,220 --> 00:19:10,320
A 选项是什么呢

422
00:19:10,320 --> 00:19:11,900
X 决定 Y 

423
00:19:11,900 --> 00:19:13,180
X 决定 Z 

424
00:19:13,180 --> 00:19:15,580
所以 X 决定 Y 、 Z 

425
00:19:15,580 --> 00:19:20,210
这个是将右侧的被决定因素合并起来了吧

426
00:19:20,210 --> 00:19:23,200
所以我们叫做呢合并

427
00:19:23,200 --> 00:19:25,860
或者呢合并规则

428
00:19:25,860 --> 00:19:28,700
那这就是呢关于公理系统

429
00:19:28,700 --> 00:19:31,010
它的一个呢考察形式

430
00:19:31,010 --> 00:19:33,980
那以上呢，就是要求大家掌握的

431
00:19:33,980 --> 00:19:36,780
关于规范化理论当中的一些呢

432
00:19:36,780 --> 00:19:38,420
基本的概念内容
