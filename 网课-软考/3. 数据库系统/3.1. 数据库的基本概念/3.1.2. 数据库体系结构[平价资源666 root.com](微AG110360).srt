1
00:00:00,000 --> 00:00:02,820
下面呢，我们展开来看一

2
00:00:02,820 --> 00:00:05,960
数据库体系结构的划分

3
00:00:05,960 --> 00:00:09,430
首先，针对数据库的体系结构来看

4
00:00:09,430 --> 00:00:13,010
我们啊，在见到比较多的

5
00:00:13,010 --> 00:00:16,129
第一个呢，叫做集中式的数据库

6
00:00:16,129 --> 00:00:18,380
什么是集中式数据库呢

7
00:00:18,380 --> 00:00:20,840
它的数据是集中的

8
00:00:20,840 --> 00:00:23,280
那我们数据呢，放在一台电脑上

9
00:00:23,280 --> 00:00:26,280
其次呢，数据的管理也是集中的

10
00:00:26,280 --> 00:00:29,480
由一个呢，数据库管理系统来进行管理

11
00:00:29,480 --> 00:00:33,640
那在这里面啊，比较特点的内容是什么呢

12
00:00:33,640 --> 00:00:35,040
集中式数据库

13
00:00:35,040 --> 00:00:38,020
它所使用数据库的应用程序啊

14
00:00:38,020 --> 00:00:39,940
跟我们的数据库管理系统

15
00:00:39,940 --> 00:00:41,520
是在同一台电脑上

16
00:00:41,520 --> 00:00:44,470
那这其实是比较早期的一些应用了

17
00:00:44,470 --> 00:00:47,110
它即使不联网也可以用

18
00:00:47,110 --> 00:00:49,730
也是我们常说的单机系统

19
00:00:49,730 --> 00:00:50,870
那我们呢

20
00:00:50,870 --> 00:00:53,390
除了像一些 oracle circle 的话

21
00:00:53,390 --> 00:00:57,350
像 office 自带的 access 这种呢

22
00:00:57,350 --> 00:01:01,020
也是可以组建集中式数据结构的

23
00:01:01,020 --> 00:01:04,099
这种呢，是集中式数据库系统

24
00:01:04,099 --> 00:01:06,180
第二类比较常见

25
00:01:06,180 --> 00:01:08,410
叫做呢 cs 结构

26
00:01:08,410 --> 00:01:11,000
所谓的 C 就是呢客户端

27
00:01:11,000 --> 00:01:12,770
S 呢，就是服务器

28
00:01:12,770 --> 00:01:17,400
它会由客户端来负责我们数据的一些表示

29
00:01:17,400 --> 00:01:19,060
包括了应用程序

30
00:01:19,060 --> 00:01:21,440
那服务器呢，负责数据

31
00:01:21,440 --> 00:01:24,080
它的管理系统的一些功能

32
00:01:24,080 --> 00:01:27,860
我们一般呢，称它分为前端以及脑后端

33
00:01:27,860 --> 00:01:30,090
那在这个过程当中啊

34
00:01:30,090 --> 00:01:32,690
我们 cs 以外还可以呢

35
00:01:32,690 --> 00:01:34,680
有 BS 的这种结构

36
00:01:34,680 --> 00:01:36,150
所谓的 BS 啊

37
00:01:36,150 --> 00:01:38,190
这个 B 其实就是呢

38
00:01:38,190 --> 00:01:40,500
浏览器它的一个代称

39
00:01:40,500 --> 00:01:42,020
那 cs 架构

40
00:01:42,020 --> 00:01:45,590
C 1般指的是应用程序的客户端居多了

41
00:01:45,590 --> 00:01:48,810
我们的服务器和应用程序分开了

42
00:01:48,810 --> 00:01:50,300
在两个节点的话

43
00:01:50,300 --> 00:01:52,590
这种通信的过程当中啊

44
00:01:52,590 --> 00:01:55,030
会用到数据接口

45
00:01:55,030 --> 00:01:57,360
那我们叫做呢，数据库的中间件

46
00:01:57,360 --> 00:01:59,430
有呢，像呃 JDBC 

47
00:01:59,430 --> 00:02:00,690
还有呢 O 、 D 、 BC 

48
00:02:00,690 --> 00:02:01,750
一个是 oracle 的

49
00:02:01,750 --> 00:02:03,350
一个呢，还有像 java 的

50
00:02:03,350 --> 00:02:03,940
这些

51
00:02:03,940 --> 00:02:04,720
都是呢

52
00:02:04,720 --> 00:02:09,699
可以用来做我们的中间件进行数据通信的

53
00:02:09,699 --> 00:02:10,810
第三类

54
00:02:10,810 --> 00:02:14,570
现在比较常考的分布式数据库的特点

55
00:02:14,570 --> 00:02:19,210
那所谓的分布式是我们的数据库当中

56
00:02:19,210 --> 00:02:22,710
所用到的一些内容是分散的

57
00:02:22,710 --> 00:02:26,150
那它包括物理上分布逻辑上集中

58
00:02:26,150 --> 00:02:28,170
还有呢，物理上分布

59
00:02:28,170 --> 00:02:29,970
逻辑上也分布

60
00:02:29,970 --> 00:02:32,260
这样的一些分布式数据库

61
00:02:32,260 --> 00:02:35,230
那我们的分布所体现的

62
00:02:35,230 --> 00:02:37,650
其实就是物理上分开的

63
00:02:37,650 --> 00:02:40,570
他最早所提出的概念啊

64
00:02:40,570 --> 00:02:43,630
是为了做一些容灾的工作

65
00:02:43,630 --> 00:02:46,600
那比如说呢，像大利润的时候的话

66
00:02:46,600 --> 00:02:50,350
如果数据文件是存在某一台电脑上

67
00:02:50,350 --> 00:02:52,070
那这台服务器一崩

68
00:02:52,070 --> 00:02:53,560
大家呢都崩了

69
00:02:53,560 --> 00:02:56,370
所以啊，又有呢，像，呃

70
00:02:56,370 --> 00:02:58,820
像我们的一些银行的数据

71
00:02:58,820 --> 00:03:01,740
都是呢，目前都是分布式存储的啊

72
00:03:01,740 --> 00:03:04,290
在不同的物理节点上去存

73
00:03:04,290 --> 00:03:06,990
并且有一些节点上的数据啊

74
00:03:06,990 --> 00:03:10,130
还是复制出来做冗余备份的

75
00:03:10,130 --> 00:03:13,340
都是呢，分布式数据库的一些特点

76
00:03:13,340 --> 00:03:16,880
那我们要了解分布式数据库库的特点

77
00:03:16,880 --> 00:03:18,900
以及呢，透明性的概念

78
00:03:18,900 --> 00:03:22,340
在后面会给大家呢，做展开介绍

79
00:03:22,520 --> 00:03:26,800
最后， B 型数据库这个点在我们考试当中

80
00:03:26,800 --> 00:03:28,820
目前并没有出现过

81
00:03:28,820 --> 00:03:31,500
了解到呢，它有共享内存式的

82
00:03:31,500 --> 00:03:35,060
还有无共享式的并行数据库就可以了

83
00:03:35,060 --> 00:03:37,390
接下来我们展开来看一下

84
00:03:37,390 --> 00:03:39,290
分布式数据库的特点

85
00:03:39,290 --> 00:03:43,250
那分布式数据库它的这些数据啊

86
00:03:43,250 --> 00:03:46,190
在物理节点上是分开存的

87
00:03:46,190 --> 00:03:48,800
由不同的电脑上来存的

88
00:03:48,800 --> 00:03:50,280
那存了之

89
00:03:50,280 --> 00:03:51,260
仍然啊

90
00:03:51,260 --> 00:03:56,390
会保持数据的逻辑独立性和物理独立性

91
00:03:56,390 --> 00:03:57,710
除此以外

92
00:03:57,710 --> 00:04:01,190
它还有数据分布的独立性

93
00:04:01,190 --> 00:04:05,560
我们，诶，可以在后面看到相应的分布透明性啊

94
00:04:05,560 --> 00:04:08,940
就是呢，数据独立性的体现

95
00:04:08,940 --> 00:04:13,010
那对于逻辑独立性和物理独立性呢

96
00:04:13,010 --> 00:04:15,450
它是我们在讲，呃

97
00:04:15,450 --> 00:04:19,990
cs 架构当中的数据库里面会提到的两个概念

98
00:04:19,990 --> 00:04:23,040
后面呢，会展开给大家介绍到

99
00:04:23,040 --> 00:04:25,570
那对于分布式数据库呢

100
00:04:25,570 --> 00:04:27,310
它有集中，唉

101
00:04:27,310 --> 00:04:28,850
关于逻辑上的集中

102
00:04:28,850 --> 00:04:29,970
还有呢，自制

103
00:04:29,970 --> 00:04:33,310
诶，共享结合的这种控制结构

104
00:04:33,310 --> 00:04:36,140
对于分布式数据库而言的话

105
00:04:36,140 --> 00:04:37,680
它有一个能

106
00:04:37,680 --> 00:04:40,810
呃，各个节点分布的过程

107
00:04:40,810 --> 00:04:42,400
那分布之后

108
00:04:42,400 --> 00:04:46,570
每一个节点由局部的数据库管理系统

109
00:04:46,570 --> 00:04:48,740
来进行独立的管理

110
00:04:48,740 --> 00:04:52,020
这种独立啊，我们叫做呢，资质

111
00:04:52,020 --> 00:04:52,360
诶

112
00:04:52,360 --> 00:04:53,500
就像我们

113
00:04:53,500 --> 00:04:56,090
呃，有一些地区的话叫做自治区

114
00:04:56,090 --> 00:04:59,950
因为呢，这个地区有自己的一些呢，制度存在

115
00:04:59,950 --> 00:05:03,090
那对于我们的分布式当中啊

116
00:05:03,090 --> 00:05:05,090
局部数据库管理系

117
00:05:05,090 --> 00:05:09,050
可以呢，有局部的一些呢，逻辑在里面

118
00:05:09,110 --> 00:05:10,790
那同时呢

119
00:05:10,790 --> 00:05:12,770
我们的系统又设有呢

120
00:05:12,770 --> 00:05:14,520
集中控制的机制

121
00:05:14,520 --> 00:05:16,570
来协调各个呢

122
00:05:16,570 --> 00:05:20,340
局部数据库管理系统的应用来进行执行

123
00:05:20,340 --> 00:05:21,760
怎么来理解呢

124
00:05:21,760 --> 00:05:24,400
比如说我们现在银行遍布全

125
00:05:24,400 --> 00:05:25,900
遍布全国各地

126
00:05:25,900 --> 00:05:27,340
那我们现在想一想

127
00:05:27,340 --> 00:05:30,170
比如你在湖南中

128
00:05:30,170 --> 00:05:33,520
湖南的农业银行存了100块钱

129
00:05:33,520 --> 00:05:35,940
那我们去了北京之

130
00:05:35,940 --> 00:05:37,340
能不能取出来

131
00:05:37,340 --> 00:05:39,740
这100块钱是可以的

132
00:05:39,740 --> 00:05:41,180
那我们会发现呢

133
00:05:41,180 --> 00:05:44,100
其实湖南和北京他的银行数据啊

134
00:05:44,100 --> 00:05:45,880
应该是分布存储的

135
00:05:45,880 --> 00:05:48,730
那为什么又能够统一来使用呢

136
00:05:48,730 --> 00:05:51,720
因为它有一个集中控制的过程

137
00:05:51,720 --> 00:05:53,560
那这是一个呢，诶

138
00:05:53,560 --> 00:05:58,190
集中的全局的逻辑结构在这里而已

139
00:05:58,190 --> 00:06:00,050
那我们了解到啊

140
00:06:00,050 --> 00:06:02,660
各个节点是可以自制的

141
00:06:02,660 --> 00:06:07,700
并且呢，可以通过集中的控制机制来进行协调

142
00:06:07,700 --> 00:06:09,100
就足够了

143
00:06:09,100 --> 00:06:11,280
那接下来看到的是呢

144
00:06:11,280 --> 00:06:14,500
可以适当的增加一些冗余度

145
00:06:14,500 --> 00:06:15,970
所谓的冗余啊

146
00:06:15,970 --> 00:06:18,970
就是呢，不需要的数据重复去记录了

147
00:06:18,970 --> 00:06:21,840
就是我们刚刚所提到的备份

148
00:06:21,840 --> 00:06:25,190
在我们的分布式数据库当中

149
00:06:25,190 --> 00:06:28,450
可以在不同的场地来存呢

150
00:06:28,450 --> 00:06:30,320
同样的一部分数据

151
00:06:30,320 --> 00:06:32,060
那这一部分数据啊

152
00:06:32,060 --> 00:06:34,420
一旦某一个节点破坏了

153
00:06:34,420 --> 00:06:36,300
那我们可以从另一个地方

154
00:06:36,300 --> 00:06:38,800
将备份的数据拷贝回来吧

155
00:06:38,800 --> 00:06:42,880
那这个过程可以提高整个数据库系统

156
00:06:42,880 --> 00:06:45,880
它的可靠性和可用性

157
00:06:45,880 --> 00:06:48,830
那也可以呢，提高系统的性能

158
00:06:48,830 --> 00:06:52,490
我们把数据拷贝到离我们比较近的节点

159
00:06:52,490 --> 00:06:53,440
再去用的话

160
00:06:53,440 --> 00:06:55,780
是可以提高访问速度的

161
00:06:55,780 --> 00:06:58,120
这是呢，关于分布式啊

162
00:06:58,120 --> 00:07:01,440
它的可靠性和可用性的提高

163
00:07:01,440 --> 00:07:05,550
通过呢，冗余来进行处理啊

164
00:07:05,550 --> 00:07:07,910
那这个提高可靠性的话

165
00:07:07,910 --> 00:07:09,470
它的描述啊

166
00:07:09,470 --> 00:07:10,550
其实就是呢

167
00:07:10,550 --> 00:07:13,940
当系统当中某一个数据出现问题了

168
00:07:13,940 --> 00:07:15,240
那我们现在的话

169
00:07:15,240 --> 00:07:16,440
这个节点的故障

170
00:07:16,440 --> 00:07:18,060
因为有其他副本啊

171
00:07:18,060 --> 00:07:19,900
所以我们可以拷贝回来

172
00:07:19,900 --> 00:07:23,760
从而呢，唉，保证整个系统仍然是可用的

173
00:07:23,760 --> 00:07:25,240
那在这个时候呢

174
00:07:25,240 --> 00:07:26,860
还能保证数据啊

175
00:07:26,860 --> 00:07:28,700
它具有一定的完备性

176
00:07:28,700 --> 00:07:29,960
不会呢，有遗漏

177
00:07:29,960 --> 00:07:33,180
那这是利用空间上的冗余

178
00:07:33,180 --> 00:07:36,940
来提高我们数据的可用性

179
00:07:36,940 --> 00:07:41,230
这个可用性呢，在我们软件设计师考试当中

180
00:07:41,230 --> 00:07:43,850
曾经重复考察过两次

181
00:07:43,850 --> 00:07:45,660
大家呢，熟悉一下

182
00:07:45,660 --> 00:07:48,750
最后我们的分布式数据库啊

183
00:07:48,750 --> 00:07:52,090
全局的数据呢，会具有一定的一致性

184
00:07:52,090 --> 00:07:56,680
它的整个全局的执行逻辑是可串行

185
00:07:56,680 --> 00:07:57,600
可恢复的

186
00:07:57,600 --> 00:08:00,770
那就是分布式数据库的特点

187
00:08:00,770 --> 00:08:04,400
再来看呢，关于数据库它的透明性

188
00:08:04,400 --> 00:08:06,570
分布式数据库透明性

189
00:08:06,570 --> 00:08:08,750
在软件设计师考试当中呢

190
00:08:08,750 --> 00:08:12,180
也有重复考察它的透明性啊

191
00:08:12,180 --> 00:08:16,620
首先呢，最高级别的是分片透明

192
00:08:16,620 --> 00:08:21,130
那我们的用户不需要关心他是如何分片的

193
00:08:21,130 --> 00:08:22,930
只要提到分片

194
00:08:22,930 --> 00:08:26,510
无论题目问你的是不需要了解如何分片

195
00:08:26,510 --> 00:08:28,850
不需要了解如何分块存储

196
00:08:28,850 --> 00:08:31,720
指的都是分片透明

197
00:08:31,720 --> 00:08:33,900
那在这个过程当中

198
00:08:33,900 --> 00:08:36,860
我们在用户使用的时候

199
00:08:36,860 --> 00:08:39,650
只需要了解它能用

200
00:08:39,650 --> 00:08:42,950
需不需要了解它是如何来分割的呢

201
00:08:42,950 --> 00:08:43,830
不需要

202
00:08:43,830 --> 00:08:46,590
这就是分片透明

203
00:08:46,860 --> 00:08:49,060
其次，复制透明

204
00:08:49,060 --> 00:08:51,640
所谓的复制指的就是呢

205
00:08:51,640 --> 00:08:53,480
数据的冗余存储的

206
00:08:53,480 --> 00:08:55,540
哎，他的这种呢，副本情况

207
00:08:55,540 --> 00:08:57,920
那用户不需要关注啊

208
00:08:57,920 --> 00:09:00,480
我们的数据库在哪一个节点

209
00:09:00,480 --> 00:09:01,900
有一个呢复制

210
00:09:01,900 --> 00:09:03,400
有一个备份，诶

211
00:09:03,400 --> 00:09:04,660
需要呢去更新

212
00:09:04,660 --> 00:09:06,980
这些用户需不需要去操作啊

213
00:09:06,980 --> 00:09:07,730
不需要

214
00:09:07,730 --> 00:09:12,010
全部呢，由我们的数据库管理系统来负责操作

215
00:09:12,010 --> 00:09:15,130
那这里呢，就是复制透明

216
00:09:15,130 --> 00:09:18,110
位置透明呢，指的是用户啊

217
00:09:18,110 --> 00:09:19,310
不需要知道，哎

218
00:09:19,310 --> 00:09:22,770
我这个100块钱取出来修改的

219
00:09:22,770 --> 00:09:26,210
到底是北京的节点还是呢，湖南的节点，诶

220
00:09:26,210 --> 00:09:26,990
有影响吗

221
00:09:26,990 --> 00:09:29,630
对于用户来说是不需要了解的

222
00:09:29,630 --> 00:09:31,240
这就是呢，位置透明

223
00:09:31,240 --> 00:09:33,640
它不需要了解自己操作的数据

224
00:09:33,640 --> 00:09:36,160
到底是放在哪里的

225
00:09:36,160 --> 00:09:38,070
数据分配到哪一个

226
00:09:38,070 --> 00:09:40,810
或者呢，哪一些站点去存储

227
00:09:40,810 --> 00:09:42,270
跟用户啊，都是呢

228
00:09:42,270 --> 00:09:43,690
没关系的

229
00:09:43,690 --> 00:09:46,590
最后，局部印象透明性

230
00:09:46,590 --> 00:09:48,930
也叫做呢，逻辑透明性

231
00:09:48,930 --> 00:09:52,840
那这个过程其实是最低层次的透明性呢

232
00:09:52,840 --> 00:09:57,350
它指的是用户不需要了解局部的这个呢

233
00:09:57,350 --> 00:09:58,490
逻辑结构

234
00:09:58,490 --> 00:10:01,720
那这个局部的逻辑结构也是呢

235
00:10:01,720 --> 00:10:05,240
由我们的数据库管理系统来进行处理的

236
00:10:05,240 --> 00:10:06,280
这就是呢

237
00:10:06,280 --> 00:10:08,420
唉，逻辑透明性

238
00:10:08,420 --> 00:10:11,190
了解这四个透明性的描述

239
00:10:11,190 --> 00:10:14,510
尤其分布透明的分片透明的话

240
00:10:14,510 --> 00:10:17,770
只要提到了分片或者呢分块

241
00:10:17,770 --> 00:10:21,020
指的都是分片透明

242
00:10:21,200 --> 00:10:25,660
那这是呢，关于分布式数据库的一些特点

243
00:10:25,660 --> 00:10:28,520
下面呢，我们来看一下这一部分

244
00:10:28,520 --> 00:10:32,310
在软件设计师考试当中的具体考察形式

245
00:10:32,310 --> 00:10:34,100
下面告诉我们呢

246
00:10:34,100 --> 00:10:36,040
在分布式数据库当

247
00:10:36,040 --> 00:10:38,210
有分片透明、分质透明

248
00:10:38,210 --> 00:10:42,290
复制透明、位置透明和逻辑透明等基本概念

249
00:10:42,290 --> 00:10:47,530
那其中哪一个是指局部数据模型透明

250
00:10:47,530 --> 00:10:50,300
即用户或应用程序

251
00:10:50,300 --> 00:10:55,740
无需知道局部使用的是哪种数据模型

252
00:10:55,740 --> 00:10:58,100
那这个数据模型啊

253
00:10:58,100 --> 00:11:02,080
其实在结构上指的就是呢逻辑结构

254
00:11:02,080 --> 00:11:05,080
那这里呢就是逻辑透明性

255
00:11:05,080 --> 00:11:09,070
也叫呢诶，我们的局部数据模型透明性

256
00:11:09,070 --> 00:11:11,690
那这是关于逻辑透明

257
00:11:11,690 --> 00:11:12,590
第二空

258
00:11:12,590 --> 00:11:14,410
以下哪一个是指呢

259
00:11:14,410 --> 00:11:16,220
用户或应用程序

260
00:11:16,220 --> 00:11:19,600
不需要知道逻辑上访问的表

261
00:11:19,600 --> 00:11:22,620
具体是如何分块存储的

262
00:11:22,620 --> 00:11:26,290
很多同学看到存储会选位置透明

263
00:11:26,290 --> 00:11:29,100
但涉及到分块分片

264
00:11:29,100 --> 00:11:33,120
它所描述的都是呢分片透明性

265
00:11:33,120 --> 00:11:35,770
那所谓的位置透明

266
00:11:35,770 --> 00:11:40,010
是不需要了解具体的物理位置

267
00:11:45,100 --> 00:11:46,480
也就是说

268
00:11:46,480 --> 00:11:50,120
用户所操作的数据具体放在哪一个节点

269
00:11:50,120 --> 00:11:51,980
用户呢，是不需要知道的

270
00:11:51,980 --> 00:11:54,530
那跟分片是没有关系的

271
00:11:54,530 --> 00:11:56,410
复制透明指的是呢

272
00:11:56,410 --> 00:11:59,050
唉，哪些数据有复制备份

273
00:11:59,050 --> 00:12:01,920
那如何来进行一致性的更新

274
00:12:01,920 --> 00:12:03,860
跟用户是没关系的

275
00:12:03,860 --> 00:12:05,510
这就是呢，复制透明

276
00:12:05,510 --> 00:12:07,020
关于透明性

277
00:12:07,020 --> 00:12:09,570
大家呢，要做一些区分

278
00:12:09,570 --> 00:12:11,170
下面这道题

279
00:12:11,170 --> 00:12:13,880
当某一场地故障的时候

280
00:12:13,880 --> 00:12:17,120
系统呢，可以使用其他场地上的副本

281
00:12:17,120 --> 00:12:20,690
而不至于呢，使整个系统瘫痪

282
00:12:20,690 --> 00:12:23,820
关于系统有没有瘫痪

283
00:12:23,820 --> 00:12:27,210
它指的是系统的可用性

284
00:12:27,210 --> 00:12:28,990
那在这里啊

285
00:12:28,990 --> 00:12:32,150
分布式数据库可用性的描述呢

286
00:12:32,150 --> 00:12:35,220
就是关于场地上副本出问题了

287
00:12:35,220 --> 00:12:39,180
可以呢，由其他副本来进行拷贝过来接着用

288
00:12:39,180 --> 00:12:41,080
不影响整个系统的使用

289
00:12:41,080 --> 00:12:42,510
就是呢，可用性

290
00:12:42,510 --> 00:12:44,400
所谓的共享性呢

291
00:12:44,400 --> 00:12:47,710
可以理解为我们分布式数据库当中

292
00:12:47,710 --> 00:12:50,090
所有的数据呢，都是共享的

293
00:12:50,090 --> 00:12:52,390
并没有完全的分割开

294
00:12:52,390 --> 00:12:55,400
自制性呢，是指每一个物理节

295
00:12:55,400 --> 00:12:56,220
可以有呢

296
00:12:56,220 --> 00:12:59,360
局部的数据库管理系统来进行管理

297
00:12:59,360 --> 00:13:01,150
这就是它的自制

298
00:13:01,150 --> 00:13:02,110
分布性

299
00:13:02,110 --> 00:13:07,010
指的是物理节点上在物理结构上的分布

300
00:13:07,010 --> 00:13:10,110
那这些就是要求大家掌握的

301
00:13:10,110 --> 00:13:12,290
关于啊，数据库体系结构

302
00:13:12,290 --> 00:13:15,320
主要呢是分布式数据库的一些诶

303
00:13:15,320 --> 00:13:17,680
它的特点和分布，呃

304
00:13:17,680 --> 00:13:19,500
和它的透明性的理论
