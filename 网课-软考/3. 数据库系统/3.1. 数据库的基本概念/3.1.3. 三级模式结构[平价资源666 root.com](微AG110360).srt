1
00:00:00,000 --> 00:00:02,040
接下来我们展开来看一

2
00:00:02,040 --> 00:00:04,019
数据库基本概念当中

3
00:00:04,019 --> 00:00:06,290
三级模式结构的介绍

4
00:00:06,290 --> 00:00:08,630
那所谓的三级结构模式

5
00:00:08,630 --> 00:00:10,290
它所针对的主要呢

6
00:00:10,290 --> 00:00:12,550
是集中式和 cs 架构

7
00:00:12,550 --> 00:00:16,079
cs 结构数据库的这里面所提到的一些呢

8
00:00:16,079 --> 00:00:17,050
结构问题

9
00:00:17,050 --> 00:00:20,700
那无论大家用的是 oracle 还是呢 SUCSERVER 

10
00:00:20,700 --> 00:00:21,640
在这里啊

11
00:00:21,640 --> 00:00:24,080
基本上都会能用到三级模式

12
00:00:24,080 --> 00:00:26,090
两级映射的结构

13
00:00:26,090 --> 00:00:28,230
那对于这三级模式

14
00:00:28,230 --> 00:00:31,070
两级映射在软件设计师考试当中

15
00:00:31,070 --> 00:00:33,550
考的也算是较为频繁

16
00:00:33,550 --> 00:00:35,360
我们呢，主要了解到

17
00:00:35,360 --> 00:00:38,360
三级模式分别对应什么样的文件

18
00:00:38,360 --> 00:00:40,360
然后呢，它里面啊

19
00:00:40,360 --> 00:00:44,200
三级模式之间所对应的两级映射关系

20
00:00:44,200 --> 00:00:46,590
又分别呢，是哪两级

21
00:00:46,590 --> 00:00:49,670
那它这个两极映射关系还可以呢

22
00:00:49,670 --> 00:00:53,130
解决数据的逻辑独立性和物理独立性

23
00:00:53,130 --> 00:00:55,400
又是如何来体现的

24
00:00:55,400 --> 00:00:56,120
这就是啊

25
00:00:56,120 --> 00:00:58,620
我们在三级模式结构当中

26
00:00:58,620 --> 00:01:00,360
需要了解到的内容

27
00:01:00,360 --> 00:01:02,680
那它在软件设计师考试当中

28
00:01:02,680 --> 00:01:06,110
相比于其他的数据库基本概念来说

29
00:01:06,110 --> 00:01:08,120
考得更为频繁一些

30
00:01:08,120 --> 00:01:12,000
一般呢，考察的分值也是呢，一分左右

31
00:01:12,000 --> 00:01:13,380
我们来看一下

32
00:01:13,380 --> 00:01:16,830
对于三级模式和两级印象当中呢

33
00:01:16,830 --> 00:01:19,360
我们首先了解到，诶

34
00:01:19,360 --> 00:01:21,960
在整个数据库体系当中啊

35
00:01:21,960 --> 00:01:24,760
它具有一定一定的分层理念

36
00:01:24,760 --> 00:01:26,420
为什么要分层呢

37
00:01:26,420 --> 00:01:29,580
其实像整个数据库在最早期的时候

38
00:01:29,580 --> 00:01:31,380
我们的数据只是呢

39
00:01:31,380 --> 00:01:33,120
用一些条目来记录

40
00:01:33,120 --> 00:01:33,480
诶

41
00:01:33,480 --> 00:01:35,460
最早的时候是手工记录

42
00:01:35,460 --> 00:01:36,740
那记录了之后

43
00:01:36,740 --> 00:01:39,130
因为，唉，要做一定的数据共享

44
00:01:39,130 --> 00:01:42,700
所以呢，又有了一些在线的数据管理

45
00:01:42,700 --> 00:01:45,060
后面呢，针对这些数据啊

46
00:01:45,060 --> 00:01:47,080
来开发应用程序

47
00:01:47,080 --> 00:01:50,650
才是我们看到的 cs 结构的数据库系统

48
00:01:50,650 --> 00:01:52,580
那在这当中啊

49
00:01:52,580 --> 00:01:53,970
我们会发现

50
00:01:53,970 --> 00:01:57,460
用户程序最终所对应的

51
00:01:57,460 --> 00:02:00,310
是整个数据库本身吗

52
00:02:00,310 --> 00:02:03,550
而数据库本身的实质又是什么呢

53
00:02:03,550 --> 00:02:08,060
其实整个数据库的实质仍然是数据的集合

54
00:02:08,060 --> 00:02:13,170
那这些数据集合在数据库管理系系统当中啊

55
00:02:13,170 --> 00:02:18,060
本质的体现还是数据库它的文件

56
00:02:18,060 --> 00:02:20,850
我们所有的增、查、删、改

57
00:02:20,850 --> 00:02:23,130
最终落到实处

58
00:02:23,130 --> 00:02:26,630
还是呢对文件上的修改

59
00:02:26,830 --> 00:02:29,850
那这种物理数据库唉

60
00:02:29,850 --> 00:02:32,780
也就是我们讲到的具体的文件

61
00:02:32,780 --> 00:02:35,540
我们叫它呢叫做类模式

62
00:02:35,540 --> 00:02:38,780
也可以叫做存储模式

63
00:02:43,200 --> 00:02:48,540
那在这里的数据库文件当中做修改的话

64
00:02:48,540 --> 00:02:49,660
诶，大家想一想

65
00:02:49,660 --> 00:02:53,360
会不会我应用 IPHONE 程序增加了一个填空内容

66
00:02:53,360 --> 00:02:57,120
我就要去修改具体的数据库文件啊

67
00:02:57,120 --> 00:03:02,400
还是说我的数据库文件从这台电脑，唉

68
00:03:02,400 --> 00:03:04,120
C 盘搬到了 D 盘

69
00:03:04,120 --> 00:03:07,630
我就要重新开发一个应用程序

70
00:03:07,630 --> 00:03:09,730
这是没有必要的

71
00:03:09,730 --> 00:03:12,210
那这里其实就体现了

72
00:03:12,210 --> 00:03:17,160
应用程序和我们的物理文件之间啊

73
00:03:17,160 --> 00:03:20,190
它们的耦合度不应该这么强

74
00:03:20,190 --> 00:03:23,320
那为了解决耦合度，诶

75
00:03:23,320 --> 00:03:24,420
这样的问题的话

76
00:03:24,420 --> 00:03:26,910
我们一般会采用分层的结构

77
00:03:26,910 --> 00:03:29,720
在中间增加新的层次

78
00:03:29,720 --> 00:03:31,760
从而呢，进行解耦

79
00:03:31,760 --> 00:03:34,500
那新的层次有哪些呢

80
00:03:34,500 --> 00:03:36,420
唉，我们在这里啊

81
00:03:36,420 --> 00:03:40,790
经常会用到的是对外来展示的话

82
00:03:40,790 --> 00:03:43,670
会有呢，用户数据

83
00:03:43,680 --> 00:03:45,780
什么叫做用户数据呢

84
00:03:45,780 --> 00:03:47,800
其实就可以理解为，哎

85
00:03:47,800 --> 00:03:51,420
应用程序它所使用的这一部分数据

86
00:03:51,420 --> 00:03:53,310
就是呢，应用数据库

87
00:03:53,310 --> 00:03:56,870
其实在我们的开发理念当中啊

88
00:03:56,870 --> 00:04:00,160
是希望所有的用户数据库

89
00:04:00,160 --> 00:04:03,540
跟我们具体的数据库来划分开的

90
00:04:03,540 --> 00:04:08,890
那这里对于应用程序直接访问的级别

91
00:04:08,890 --> 00:04:11,730
我们叫做呢唉用户模式

92
00:04:11,730 --> 00:04:14,670
或者呢叫做 Y 模式

93
00:04:19,000 --> 00:04:22,260
它所对应的具体内容啊

94
00:04:22,260 --> 00:04:24,370
可以理解为视图集

95
00:04:24,370 --> 00:04:27,150
当然这个视图啊，在本质上来看

96
00:04:27,150 --> 00:04:30,510
跟我们数据库的视图不是完全一致的

97
00:04:30,510 --> 00:04:33,750
我们可以呢当做一致来理解

98
00:04:33,750 --> 00:04:38,470
那所谓的视图及视图有一定的特点

99
00:04:38,470 --> 00:04:43,350
试图可以对外展示自己想要的数据结构

100
00:04:43,350 --> 00:04:46,100
而不会影响内部的数据

101
00:04:46,100 --> 00:04:49,940
并且它一般是只可查不可改的

102
00:04:49,940 --> 00:04:51,900
具有一定的安全性

103
00:04:51,900 --> 00:04:54,480
那这是视图的特点

104
00:04:54,630 --> 00:04:56,310
对于用户

105
00:04:56,310 --> 00:04:58,230
对于应用程序来说啊

106
00:04:58,230 --> 00:04:59,810
他访问的内容呢

107
00:04:59,810 --> 00:05:03,060
一般是用户模式或者呢 Y 模式

108
00:05:03,060 --> 00:05:05,940
那中间还有一个级别呢

109
00:05:05,940 --> 00:05:08,690
是我们数据库具体的应用

110
00:05:08,690 --> 00:05:13,540
数据库应用的过程包括呢，像增、查、删、改、唉

111
00:05:13,540 --> 00:05:15,580
建表这个过程当中啊

112
00:05:15,580 --> 00:05:19,430
我们所针对的其实是逻辑表

113
00:05:19,430 --> 00:05:23,390
那这个逻辑表所对应的就是呢表级

114
00:05:23,390 --> 00:05:26,580
我们一般说这个表啊，叫做呢基本表

115
00:05:26,580 --> 00:05:29,970
它所对应的模式呢，叫做概念模式

116
00:05:29,970 --> 00:05:32,510
或者简称为模式

117
00:05:33,280 --> 00:05:37,560
这个模式所对应的具体内容

118
00:05:37,560 --> 00:05:39,540
就是我们的基本表

119
00:05:39,540 --> 00:05:41,800
那在这个过程当中啊

120
00:05:41,800 --> 00:05:44,620
三级模式分别对应的内容

121
00:05:44,620 --> 00:05:46,630
大家呢，要了解到

122
00:05:46,630 --> 00:05:48,240
那我们可以看到啊

123
00:05:48,240 --> 00:05:50,240
在这三级模式之间

124
00:05:50,240 --> 00:05:53,340
其实是存在两极映射关系的

125
00:05:53,340 --> 00:05:56,960
首先看到 Y 模式和概念模式之间

126
00:05:56,960 --> 00:05:58,380
有一定的映射

127
00:05:58,380 --> 00:05:59,970
那映射和印象啊

128
00:05:59,970 --> 00:06:02,510
在我们的软件设计师考试当中

129
00:06:02,510 --> 00:06:04,130
基本上是一个概念了

130
00:06:04,130 --> 00:06:07,380
那它们之间的映射有什么样的特点

131
00:06:07,380 --> 00:06:08,780
或者说作用呢

132
00:06:08,780 --> 00:06:10,880
所谓的，呃

133
00:06:10,880 --> 00:06:14,320
所谓的 Y 模式和概念模式的映射

134
00:06:14,320 --> 00:06:16,470
我们可以理解为

135
00:06:16,470 --> 00:06:18,700
在创建视图的时候

136
00:06:18,700 --> 00:06:22,900
我们从数据库表抽取一定需要的数据

137
00:06:22,900 --> 00:06:25,360
才会呢放在视图当中

138
00:06:25,360 --> 00:06:27,540
那放入视图当中

139
00:06:27,540 --> 00:06:31,240
让应用程序只访问视图

140
00:06:31,240 --> 00:06:33,550
在这个过程当中啊

141
00:06:33,550 --> 00:06:36,550
如果说在创建的时候

142
00:06:36,550 --> 00:06:40,470
那我们可以看到这三级模式之间

143
00:06:40,470 --> 00:06:41,810
其实还有两集呢

144
00:06:41,810 --> 00:06:42,870
映射关系

145
00:06:42,870 --> 00:06:46,470
这个映射和印象在软件设计师考试当中

146
00:06:46,470 --> 00:06:49,500
基本上是同一个概念的不同翻译了

147
00:06:49,500 --> 00:06:53,870
那 Y 模式与概念模式的映射如何来理解呢

148
00:06:53,870 --> 00:06:55,620
我们说视图的数据啊

149
00:06:55,620 --> 00:06:58,420
其实就是从概念模式当中的基本表

150
00:06:58,420 --> 00:06:59,620
抽取出来的吧

151
00:06:59,620 --> 00:07:01,390
那抽取的过程当中

152
00:07:01,390 --> 00:07:03,410
我们可以用语句或者呢

153
00:07:03,410 --> 00:07:04,570
数据库管理系

154
00:07:04,570 --> 00:07:06,230
不同的这种方式啊

155
00:07:06,230 --> 00:07:09,970
从表当中抽取数据来展现

156
00:07:09,970 --> 00:07:13,090
抽取的过程当中如何来抽取

157
00:07:13,090 --> 00:07:15,850
其实就是它们之间的映射关系

158
00:07:15,850 --> 00:07:19,900
在我们开发的过程当中并没有明显的界限

159
00:07:19,900 --> 00:07:21,760
但如果大家想一想

160
00:07:21,760 --> 00:07:24,160
如果是一个第三方系统

161
00:07:24,160 --> 00:07:27,060
要访问我们的数据查询

162
00:07:27,060 --> 00:07:29,450
一般大家会给中间表

163
00:07:29,450 --> 00:07:33,010
给基本表还是给一个视图啊

164
00:07:33,070 --> 00:07:35,790
给视图的方式居多

165
00:07:35,790 --> 00:07:39,580
那如果对外给的是视图的话

166
00:07:39,580 --> 00:07:41,260
大家就会发现呢

167
00:07:41,260 --> 00:07:45,680
唉，如果说我们自己的应用程序

168
00:07:45,680 --> 00:07:48,020
数据库发生了升级

169
00:07:48,020 --> 00:07:49,920
数据库表诶

170
00:07:49,920 --> 00:07:53,890
结构上或者呢类型上发生了变化的话

171
00:07:53,890 --> 00:07:58,820
那我们需不需要对方第三方系统来修改

172
00:07:58,820 --> 00:08:00,230
应用程序呢

173
00:08:00,230 --> 00:08:02,020
其实并不用

174
00:08:02,020 --> 00:08:05,100
我们只需要去修改，诶

175
00:08:05,100 --> 00:08:07,940
如何生成视图的过程

176
00:08:07,940 --> 00:08:11,980
那这种生成视图就是它们之间的映射吧

177
00:08:11,980 --> 00:08:15,910
修改二者的映射关系就可以呢

178
00:08:15,910 --> 00:08:19,140
完成我们的应用程序的调用了

179
00:08:19,140 --> 00:08:22,020
那这个过程我们称呢

180
00:08:22,020 --> 00:08:26,410
它可以保证数据的逻辑独立性

181
00:08:26,410 --> 00:08:28,660
所谓的逻辑独立性啊

182
00:08:28,660 --> 00:08:32,840
就是呢，当我们的概念模式发生变化的话

183
00:08:32,840 --> 00:08:34,280
只需要修改

184
00:08:34,280 --> 00:08:37,880
Y 模式和概念模式之间的映射生成

185
00:08:37,880 --> 00:08:40,809
不需要呢，修改应用程序

186
00:08:40,809 --> 00:08:43,330
这就是呢，逻辑独立性

187
00:08:43,330 --> 00:08:45,030
其次再来看呢

188
00:08:45,030 --> 00:08:47,930
概念模式和类模式之间呢

189
00:08:47,930 --> 00:08:50,250
也有一定的映射关系

190
00:08:50,250 --> 00:08:54,180
那这个映射关系又如何来理解呢

191
00:08:54,180 --> 00:08:55,290
那我们啊

192
00:08:55,290 --> 00:08:58,830
对于这种概念模式和类模式的话

193
00:08:58,830 --> 00:09:01,690
类模式的实质是文件

194
00:09:01,690 --> 00:09:03,110
大家想一想啊

195
00:09:03,110 --> 00:09:05,670
我们在创建数据库表的时候

196
00:09:05,670 --> 00:09:07,910
一般会有一个文件路径吧

197
00:09:07,910 --> 00:09:12,300
那这种文件路径和数据库表之间的

198
00:09:12,300 --> 00:09:13,620
映射关系的话

199
00:09:13,620 --> 00:09:17,010
也是由数据库管理系统来进行处理的吧

200
00:09:17,010 --> 00:09:18,750
那这种情况下

201
00:09:18,750 --> 00:09:20,570
这种地址映射啊

202
00:09:20,570 --> 00:09:24,520
就是它们二者之间的映射关系

203
00:09:24,520 --> 00:09:26,260
那大家想一想

204
00:09:26,260 --> 00:09:30,340
如果现在物理文件换了一个盘来存

205
00:09:30,340 --> 00:09:33,480
我们需要去修改应用程序吗

206
00:09:33,480 --> 00:09:36,770
这种数据库的迁移其实非常多

207
00:09:36,770 --> 00:09:39,120
我们只要在数据库管理系统

208
00:09:39,120 --> 00:09:43,100
修改一下它的地址路径就可以了吧

209
00:09:43,100 --> 00:09:44,990
需不需要改应用程序啊

210
00:09:44,990 --> 00:09:45,870
不需要

211
00:09:45,870 --> 00:09:49,330
那这种就是呢，数据的物理独立性

212
00:09:49,330 --> 00:09:52,740
当物理结构发生变化的时候

213
00:09:52,740 --> 00:09:57,950
唉，我们的应用程序是不需要发生改变的

214
00:09:57,950 --> 00:09:59,730
那这个过程当中

215
00:09:59,730 --> 00:10:01,820
其其实啊，也是呢

216
00:10:01,820 --> 00:10:04,820
需要去修改映射关系的

217
00:10:04,820 --> 00:10:06,320
那这就是呢

218
00:10:06,320 --> 00:10:08,220
关于三级模式

219
00:10:08,220 --> 00:10:09,890
两级映射当中

220
00:10:09,890 --> 00:10:11,730
具体的两极映射

221
00:10:11,730 --> 00:10:15,830
所对应的逻辑独立性和物理独立性

222
00:10:15,830 --> 00:10:18,490
下面我们来看一下这一部分

223
00:10:18,490 --> 00:10:20,530
在软件设计师考试当中

224
00:10:20,530 --> 00:10:21,960
它的具体体现

225
00:10:21,960 --> 00:10:24,450
数据库系统通常采用呢

226
00:10:24,450 --> 00:10:26,230
三级模式的结构

227
00:10:26,230 --> 00:10:29,220
包括呢外模式、模式和类模式

228
00:10:29,220 --> 00:10:32,460
那它们所对应的是数据库的哪些东西呢

229
00:10:32,460 --> 00:10:34,200
诶，看好顺序

230
00:10:34,200 --> 00:10:38,270
Y 模式对应的是视图模式

231
00:10:38,270 --> 00:10:39,790
也就是概念模式

232
00:10:39,790 --> 00:10:41,610
对应的是基本表

233
00:10:41,610 --> 00:10:44,000
类模式也叫做物理模式

234
00:10:44,000 --> 00:10:46,240
对应的是存储文件

235
00:10:46,240 --> 00:10:48,140
这里呢要注意

236
00:10:48,140 --> 00:10:51,550
那也给大家呢扩展提到一下

237
00:10:51,550 --> 00:10:52,760
这就是呢

238
00:10:52,760 --> 00:10:57,580
数据库三级模式结构所对应的具体内容

239
00:10:58,230 --> 00:10:59,850
下面这道题

240
00:10:59,850 --> 00:11:04,350
以下关于数据库两极印象的叙述当中

241
00:11:04,350 --> 00:11:06,500
正确的是哪一个

242
00:11:06,500 --> 00:11:09,140
注意，找的是正确的选项

243
00:11:09,140 --> 00:11:11,930
A 选项，模式类模式的映射

244
00:11:11,930 --> 00:11:16,770
实现了外模式到内模式之间的相互转换

245
00:11:16,770 --> 00:11:17,090
诶

246
00:11:17,090 --> 00:11:18,390
我们这里可以看到

247
00:11:18,390 --> 00:11:20,970
它是概念模式和类模式之间吧

248
00:11:20,970 --> 00:11:23,760
跟 Y 模式是没有关系的

249
00:11:23,760 --> 00:11:24,780
B 选项

250
00:11:24,780 --> 00:11:26,480
模式类模式

251
00:11:26,480 --> 00:11:28,080
他们之间的印象

252
00:11:28,080 --> 00:11:32,130
实现的概念模式到类模式之间的，诶

253
00:11:32,130 --> 00:11:33,530
相互转换

254
00:11:33,530 --> 00:11:36,580
那这个说法呢，是正确的

255
00:11:36,580 --> 00:11:37,760
C 选项

256
00:11:37,760 --> 00:11:39,860
外模式模式的印象

257
00:11:39,860 --> 00:11:43,510
实现了概念模式到内模式之间的转换

258
00:11:43,510 --> 00:11:46,600
那外模式与模式之间的印象

259
00:11:46,600 --> 00:11:48,800
跟内模式有没有关系呢

260
00:11:48,800 --> 00:11:49,920
没有关系

261
00:11:49,920 --> 00:11:52,330
所以 C 选项是错误的

262
00:11:52,330 --> 00:11:56,000
D 选项，外模式到内模式的印象

263
00:11:56,000 --> 00:11:59,620
实现了外模式到内模式之间的相互转换

264
00:11:59,620 --> 00:12:02,600
诶，看起来好像说法上是正确的

265
00:12:02,600 --> 00:12:04,300
对应关系是正确的呀

266
00:12:04,300 --> 00:12:05,740
但是大家要注意

267
00:12:05,740 --> 00:12:07,380
我们有没有外模

268
00:12:07,380 --> 00:12:09,550
直接到内模式的印象啊

269
00:12:09,550 --> 00:12:12,030
是不存在这一集印象的

270
00:12:12,030 --> 00:12:14,890
所以 D 选项也是错误的

271
00:12:14,890 --> 00:12:18,190
正确的选项只有呢， B 选项

272
00:12:18,830 --> 00:12:20,510
下面这道题

273
00:12:20,510 --> 00:12:23,710
数据的未独立性和逻辑独立性

274
00:12:23,710 --> 00:12:27,260
分别是通过修改谁来完成的

275
00:12:27,260 --> 00:12:29,430
什么是物理独立性

276
00:12:29,430 --> 00:12:33,200
当我们的类模式发生变化的时候

277
00:12:33,200 --> 00:12:36,770
应用程序不需要随之发生变化

278
00:12:36,770 --> 00:12:41,690
所以它涉及到的是类模式相关的印象

279
00:12:41,690 --> 00:12:44,600
那内模式与外模式之间

280
00:12:44,600 --> 00:12:46,890
有没有直接的印象关系呢

281
00:12:46,890 --> 00:12:47,890
并没有

282
00:12:47,890 --> 00:12:51,530
所以 ab 选项都是能错误的

283
00:12:51,530 --> 00:12:54,370
C 选项与类模式没有关系

284
00:12:54,370 --> 00:12:56,730
所以呢，它也是错误的

285
00:12:56,730 --> 00:12:59,810
那接下来逻辑独立性，诶

286
00:12:59,810 --> 00:13:02,380
它是通过哪一部分来修改的呢

287
00:13:02,380 --> 00:13:03,920
逻辑独立性

288
00:13:03,920 --> 00:13:09,960
它是通过外模式与模式之间来进行转换的

289
00:13:09,960 --> 00:13:11,000
那这里啊

290
00:13:11,000 --> 00:13:12,780
就是关于物理独立性

291
00:13:12,780 --> 00:13:14,500
逻辑独立性的概念

292
00:13:14,500 --> 00:13:17,210
逻辑独立性本身指的就是呢

293
00:13:17,210 --> 00:13:20,380
当我们的模式发生变化的时候

294
00:13:20,380 --> 00:13:22,800
不需要去修改应用程序

295
00:13:22,800 --> 00:13:25,100
所以与模式相关

296
00:13:25,100 --> 00:13:28,380
这道题的正确答案呢，是 D 选项

297
00:13:28,380 --> 00:13:30,210
以上呢，就是关于啊

298
00:13:30,210 --> 00:13:32,210
数据库的一些基本概念

299
00:13:32,210 --> 00:13:34,070
需要大家呢去掌握
