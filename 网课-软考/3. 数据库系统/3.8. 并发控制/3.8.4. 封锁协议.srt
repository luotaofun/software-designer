1
00:00:00,000 --> 00:00:04,000
我们在前面给大家讲到数据库当中的事物

2
00:00:04,000 --> 00:00:06,100
它具有 acid 的特性

3
00:00:06,100 --> 00:00:07,830
那这些特性啊

4
00:00:07,830 --> 00:00:11,510
在事物并发的过程当中可能会被破坏掉

5
00:00:11,510 --> 00:00:13,370
那破坏掉这些特性

6
00:00:13,370 --> 00:00:16,070
可能会引发一系列并发的问题

7
00:00:16,070 --> 00:00:17,170
怎么办呢

8
00:00:17,170 --> 00:00:20,230
我们可以利用封锁协议来解决

9
00:00:20,230 --> 00:00:22,920
封锁协议本身是很灵活

10
00:00:22,920 --> 00:00:24,700
也有呢，很多种的

11
00:00:24,700 --> 00:00:27,600
但是在我们软件设计师考试当中

12
00:00:27,600 --> 00:00:32,170
目前只涉及到基础的 S 锁和 X 锁

13
00:00:32,170 --> 00:00:33,680
那我们在这里啊

14
00:00:33,680 --> 00:00:37,730
需要了解封锁协议它的枷锁特点

15
00:00:37,730 --> 00:00:40,100
针对这个枷锁的特点呢

16
00:00:40,100 --> 00:00:42,480
哎，能够知道哪些锁可以加

17
00:00:42,480 --> 00:00:43,660
哪些锁不可以加

18
00:00:43,660 --> 00:00:45,880
这样的一些原则就可以了

19
00:00:45,880 --> 00:00:49,290
在软件设计师的考试当中考得并不多

20
00:00:49,290 --> 00:00:50,990
但是他考察的时候啊

21
00:00:50,990 --> 00:00:52,090
可能会考到一分

22
00:00:52,090 --> 00:00:55,410
也有可能呢，会考到两分的分值范围

23
00:00:55,410 --> 00:00:57,550
我们简单来看一下

24
00:00:57,550 --> 00:00:59,420
在事物当中啊

25
00:00:59,420 --> 00:01:02,360
它并发可能产生一系列的问题

26
00:01:02,360 --> 00:01:04,239
相应的解决方案呢

27
00:01:04,239 --> 00:01:06,230
主要就是封锁协议

28
00:01:06,230 --> 00:01:11,240
那封锁协议最基础的包括 S 锁、 X 锁

29
00:01:11,240 --> 00:01:13,180
它还有两段锁

30
00:01:13,180 --> 00:01:14,260
封锁协议

31
00:01:14,260 --> 00:01:16,960
还有呢，三级封锁协议

32
00:01:16,960 --> 00:01:20,120
我们在这里呢，就不再展开来讲呢

33
00:01:20,120 --> 00:01:23,440
主要呢，了解这两类封锁

34
00:01:23,440 --> 00:01:27,450
首先看到呢，针对共享锁 S 锁

35
00:01:27,450 --> 00:01:31,380
这里啊， S 锁也可以呢记为 share 

36
00:01:31,380 --> 00:01:32,930
也就是共享所

37
00:01:32,930 --> 00:01:36,960
它主要呢，用在控制事物对数据的读取

38
00:01:36,960 --> 00:01:39,250
所以也叫做呢毒所

39
00:01:39,250 --> 00:01:42,440
在共享所加锁的过程当中啊

40
00:01:42,440 --> 00:01:46,990
如果事物对数据已经加上了 S 锁

41
00:01:46,990 --> 00:01:51,800
那么其他事物还可以对它添加 S 锁

42
00:01:51,800 --> 00:01:54,240
但是不能添加 X 

43
00:01:54,240 --> 00:01:55,910
也就是写锁了

44
00:01:55,910 --> 00:01:58,850
唉，这个地方注意能加 S 

45
00:01:58,850 --> 00:02:00,610
不能呢加 X 

46
00:02:00,610 --> 00:02:04,920
那 X 所它也叫做呢写所

47
00:02:04,920 --> 00:02:08,580
可以呢记写的拼音首字母

48
00:02:08,580 --> 00:02:11,990
那它主要用在呢，事物啊

49
00:02:11,990 --> 00:02:14,780
控制事物对数据的修改上面

50
00:02:14,780 --> 00:02:16,720
它的修改一般呢

51
00:02:16,720 --> 00:02:19,880
是不允许其他事物来使用的

52
00:02:19,880 --> 00:02:22,140
所以具有排排他性

53
00:02:22,140 --> 00:02:23,640
也具有独占性

54
00:02:23,640 --> 00:02:26,340
也叫排他所、独占所

55
00:02:26,340 --> 00:02:29,340
那针对 X 所而言

56
00:02:29,340 --> 00:02:32,870
如果有事物对数据加了 X 锁

57
00:02:32,870 --> 00:02:38,220
那么其他事物对 A 不能添加任意所

58
00:02:38,220 --> 00:02:42,590
不管是 X 还是 S 加锁都会失败

59
00:02:42,590 --> 00:02:47,250
那了解到这两个枷锁原则就可以了

60
00:02:47,250 --> 00:02:49,940
我们目前啊，针对封锁协议

61
00:02:49,940 --> 00:02:52,550
在软件设计师考试当中呢

62
00:02:52,550 --> 00:02:55,490
只考这两个原则

63
00:02:55,930 --> 00:02:57,830
那有枷锁呢

64
00:02:57,830 --> 00:03:01,420
唉，封锁协议可能会形成死锁问题

65
00:03:01,420 --> 00:03:03,390
对于死锁可以预防

66
00:03:03,390 --> 00:03:06,890
也可以呢手工人工的去解决

67
00:03:06,890 --> 00:03:08,800
这样的解除死锁

68
00:03:08,800 --> 00:03:10,850
了解了封锁协

69
00:03:10,850 --> 00:03:13,470
它的枷锁原则即可

70
00:03:13,470 --> 00:03:16,190
下面呢，我们来看一下工作协议

71
00:03:16,190 --> 00:03:19,090
在软件设计师当中的考察

72
00:03:19,090 --> 00:03:22,150
那假设事物 T 

73
00:03:22,150 --> 00:03:24,460
对我们的数据第一

74
00:03:24,460 --> 00:03:27,150
已经添加了共享锁

75
00:03:27,150 --> 00:03:28,500
也就是 S 所

76
00:03:28,500 --> 00:03:31,380
那针对这个第一而言

77
00:03:31,380 --> 00:03:35,440
其他事物可以给它加 S 锁吗

78
00:03:36,840 --> 00:03:40,540
已经添加 S 锁的情况下

79
00:03:40,540 --> 00:03:41,620
能不能成功

80
00:03:41,620 --> 00:03:43,500
添加 S 锁是可以的

81
00:03:43,500 --> 00:03:44,950
因为它是共享的

82
00:03:44,950 --> 00:03:47,420
那能不能加 X 锁呢

83
00:03:47,420 --> 00:03:48,300
哎，不能

84
00:03:48,300 --> 00:03:51,140
因为 X 锁本身就具有排他性

85
00:03:51,140 --> 00:03:53,310
所以添加会失败

86
00:03:53,310 --> 00:03:54,820
那也就是说

87
00:03:54,820 --> 00:03:58,970
对第一加排他锁失败，诶

88
00:03:58,970 --> 00:03:59,970
不会成功

89
00:03:59,970 --> 00:04:03,370
加共享锁是可以成功的

90
00:04:03,370 --> 00:04:05,200
那我们事物啊

91
00:04:05,200 --> 00:04:10,420
对第二和第三给它呢添加了 X 锁

92
00:04:11,390 --> 00:04:14,690
添加 X 锁具有排他性

93
00:04:14,690 --> 00:04:17,980
所以加任意所都会失败

94
00:04:17,980 --> 00:04:21,610
那这里呢，它在添加任何锁

95
00:04:21,610 --> 00:04:23,570
共享锁的时候失败

96
00:04:23,570 --> 00:04:26,490
排他所也会呢失败

97
00:04:26,490 --> 00:04:31,390
所以唉，这里添加成功的选项都是错误的

98
00:04:31,390 --> 00:04:33,210
那这样来看

99
00:04:33,210 --> 00:04:36,190
前后都是正确选项的

100
00:04:36,190 --> 00:04:37,860
只有呢， D 选

101
00:04:37,860 --> 00:04:42,360
ABC 都有一部分的数据呢是错误的

102
00:04:42,360 --> 00:04:47,330
这里呢要注意区分哪些已经加了排他锁

103
00:04:47,330 --> 00:04:49,970
哪些已经加了共享所

104
00:04:49,970 --> 00:04:53,460
再来看后续的枷锁原则

105
00:04:53,460 --> 00:04:56,250
那这就是呢事物当中啊

106
00:04:56,250 --> 00:04:57,790
它的并发问题

107
00:04:57,790 --> 00:05:00,620
利用封锁协议来解决的时候

108
00:05:00,620 --> 00:05:04,710
S 锁和 X 锁它的枷锁原则问题
